{"ast":null,"code":"import { d as _inherits, e as _createSuper, a as _classCallCheck, _ as _createClass, g as _get, h as _getPrototypeOf, f as _slicedToArray } from '../_rollupPluginBabelHelpers-b054ecd2.js';\nimport MaskedPattern from './pattern.js';\nimport { normalizePrepare } from '../core/utils.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './pattern/input-definition.js';\nimport './factory.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './regexp.js';\n/** Pattern which accepts ranges */\n\nvar MaskedRange = /*#__PURE__*/function (_MaskedPattern) {\n  _inherits(MaskedRange, _MaskedPattern);\n\n  var _super = _createSuper(MaskedRange);\n\n  function MaskedRange() {\n    _classCallCheck(this, MaskedRange);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MaskedRange, [{\n    key: \"_matchFrom\",\n    get:\n    /**\n      Optionally sets max length of pattern.\n      Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n    */\n\n    /** Min bound */\n\n    /** Max bound */\n\n    /** */\n    function get() {\n      return this.maxLength - String(this.from).length;\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"_update\",\n    value: function _update(opts) {\n      // TODO type\n      opts = Object.assign({\n        to: this.to || 0,\n        from: this.from || 0,\n        maxLength: this.maxLength || 0\n      }, opts);\n      var maxLength = String(opts.to).length;\n      if (opts.maxLength != null) maxLength = Math.max(maxLength, opts.maxLength);\n      opts.maxLength = maxLength;\n      var fromStr = String(opts.from).padStart(maxLength, '0');\n      var toStr = String(opts.to).padStart(maxLength, '0');\n      var sameCharsCount = 0;\n\n      while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) {\n        ++sameCharsCount;\n      }\n\n      opts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(maxLength - sameCharsCount);\n\n      _get(_getPrototypeOf(MaskedRange.prototype), \"_update\", this).call(this, opts);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"isComplete\",\n    get: function get() {\n      return _get(_getPrototypeOf(MaskedRange.prototype), \"isComplete\", this) && Boolean(this.value);\n    }\n  }, {\n    key: \"boundaries\",\n    value: function boundaries(str) {\n      var minstr = '';\n      var maxstr = '';\n\n      var _ref = str.match(/^(\\D*)(\\d*)(\\D*)/) || [],\n          _ref2 = _slicedToArray(_ref, 3),\n          placeholder = _ref2[1],\n          num = _ref2[2];\n\n      if (num) {\n        minstr = '0'.repeat(placeholder.length) + num;\n        maxstr = '9'.repeat(placeholder.length) + num;\n      }\n\n      minstr = minstr.padEnd(this.maxLength, '0');\n      maxstr = maxstr.padEnd(this.maxLength, '9');\n      return [minstr, maxstr];\n    } // TODO str is a single char everytime\n\n    /**\n      @override\n    */\n\n  }, {\n    key: \"doPrepare\",\n    value: function doPrepare(ch) {\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var details;\n\n      var _normalizePrepare = normalizePrepare(_get(_getPrototypeOf(MaskedRange.prototype), \"doPrepare\", this).call(this, ch.replace(/\\D/g, ''), flags));\n\n      var _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2);\n\n      ch = _normalizePrepare2[0];\n      details = _normalizePrepare2[1];\n      if (!this.autofix || !ch) return ch;\n      var fromStr = String(this.from).padStart(this.maxLength, '0');\n      var toStr = String(this.to).padStart(this.maxLength, '0');\n      var nextVal = this.value + ch;\n      if (nextVal.length > this.maxLength) return '';\n\n      var _this$boundaries = this.boundaries(nextVal),\n          _this$boundaries2 = _slicedToArray(_this$boundaries, 2),\n          minstr = _this$boundaries2[0],\n          maxstr = _this$boundaries2[1];\n\n      if (Number(maxstr) < this.from) return fromStr[nextVal.length - 1];\n\n      if (Number(minstr) > this.to) {\n        if (this.autofix === 'pad' && nextVal.length < this.maxLength) {\n          return ['', details.aggregate(this.append(fromStr[nextVal.length - 1] + ch, flags))];\n        }\n\n        return toStr[nextVal.length - 1];\n      }\n\n      return ch;\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"doValidate\",\n    value: function doValidate() {\n      var _get2;\n\n      var str = this.value;\n      var firstNonZero = str.search(/[^0]/);\n      if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n\n      var _this$boundaries3 = this.boundaries(str),\n          _this$boundaries4 = _slicedToArray(_this$boundaries3, 2),\n          minstr = _this$boundaries4[0],\n          maxstr = _this$boundaries4[1];\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return this.from <= Number(maxstr) && Number(minstr) <= this.to && (_get2 = _get(_getPrototypeOf(MaskedRange.prototype), \"doValidate\", this)).call.apply(_get2, [this].concat(args));\n    }\n  }]);\n\n  return MaskedRange;\n}(MaskedPattern);\n\nIMask.MaskedRange = MaskedRange;\nexport { MaskedRange as default };","map":{"version":3,"names":["d","_inherits","e","_createSuper","a","_classCallCheck","_","_createClass","g","_get","h","_getPrototypeOf","f","_slicedToArray","MaskedPattern","normalizePrepare","IMask","MaskedRange","_MaskedPattern","_super","apply","arguments","key","get","maxLength","String","from","length","value","_update","opts","Object","assign","to","Math","max","fromStr","padStart","toStr","sameCharsCount","mask","slice","replace","repeat","prototype","call","Boolean","boundaries","str","minstr","maxstr","_ref","match","_ref2","placeholder","num","padEnd","doPrepare","ch","flags","undefined","details","_normalizePrepare","_normalizePrepare2","autofix","nextVal","_this$boundaries","_this$boundaries2","Number","aggregate","append","doValidate","_get2","firstNonZero","search","_matchFrom","_this$boundaries3","_this$boundaries4","_len","args","Array","_key","concat","default"],"sources":["/home/suraphelm/Projects/demo/Myproject/react/starter/01-starting-setup/node_modules/imask/esm/masked/range.js"],"sourcesContent":["import { d as _inherits, e as _createSuper, a as _classCallCheck, _ as _createClass, g as _get, h as _getPrototypeOf, f as _slicedToArray } from '../_rollupPluginBabelHelpers-b054ecd2.js';\nimport MaskedPattern from './pattern.js';\nimport { normalizePrepare } from '../core/utils.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './pattern/input-definition.js';\nimport './factory.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './regexp.js';\n\n/** Pattern which accepts ranges */\n\nvar MaskedRange = /*#__PURE__*/function (_MaskedPattern) {\n  _inherits(MaskedRange, _MaskedPattern);\n\n  var _super = _createSuper(MaskedRange);\n\n  function MaskedRange() {\n    _classCallCheck(this, MaskedRange);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MaskedRange, [{\n    key: \"_matchFrom\",\n    get:\n    /**\n      Optionally sets max length of pattern.\n      Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n    */\n\n    /** Min bound */\n\n    /** Max bound */\n\n    /** */\n    function get() {\n      return this.maxLength - String(this.from).length;\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"_update\",\n    value: function _update(opts) {\n      // TODO type\n      opts = Object.assign({\n        to: this.to || 0,\n        from: this.from || 0,\n        maxLength: this.maxLength || 0\n      }, opts);\n      var maxLength = String(opts.to).length;\n      if (opts.maxLength != null) maxLength = Math.max(maxLength, opts.maxLength);\n      opts.maxLength = maxLength;\n      var fromStr = String(opts.from).padStart(maxLength, '0');\n      var toStr = String(opts.to).padStart(maxLength, '0');\n      var sameCharsCount = 0;\n\n      while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) {\n        ++sameCharsCount;\n      }\n\n      opts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(maxLength - sameCharsCount);\n\n      _get(_getPrototypeOf(MaskedRange.prototype), \"_update\", this).call(this, opts);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"isComplete\",\n    get: function get() {\n      return _get(_getPrototypeOf(MaskedRange.prototype), \"isComplete\", this) && Boolean(this.value);\n    }\n  }, {\n    key: \"boundaries\",\n    value: function boundaries(str) {\n      var minstr = '';\n      var maxstr = '';\n\n      var _ref = str.match(/^(\\D*)(\\d*)(\\D*)/) || [],\n          _ref2 = _slicedToArray(_ref, 3),\n          placeholder = _ref2[1],\n          num = _ref2[2];\n\n      if (num) {\n        minstr = '0'.repeat(placeholder.length) + num;\n        maxstr = '9'.repeat(placeholder.length) + num;\n      }\n\n      minstr = minstr.padEnd(this.maxLength, '0');\n      maxstr = maxstr.padEnd(this.maxLength, '9');\n      return [minstr, maxstr];\n    } // TODO str is a single char everytime\n\n    /**\n      @override\n    */\n\n  }, {\n    key: \"doPrepare\",\n    value: function doPrepare(ch) {\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var details;\n\n      var _normalizePrepare = normalizePrepare(_get(_getPrototypeOf(MaskedRange.prototype), \"doPrepare\", this).call(this, ch.replace(/\\D/g, ''), flags));\n\n      var _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2);\n\n      ch = _normalizePrepare2[0];\n      details = _normalizePrepare2[1];\n      if (!this.autofix || !ch) return ch;\n      var fromStr = String(this.from).padStart(this.maxLength, '0');\n      var toStr = String(this.to).padStart(this.maxLength, '0');\n      var nextVal = this.value + ch;\n      if (nextVal.length > this.maxLength) return '';\n\n      var _this$boundaries = this.boundaries(nextVal),\n          _this$boundaries2 = _slicedToArray(_this$boundaries, 2),\n          minstr = _this$boundaries2[0],\n          maxstr = _this$boundaries2[1];\n\n      if (Number(maxstr) < this.from) return fromStr[nextVal.length - 1];\n\n      if (Number(minstr) > this.to) {\n        if (this.autofix === 'pad' && nextVal.length < this.maxLength) {\n          return ['', details.aggregate(this.append(fromStr[nextVal.length - 1] + ch, flags))];\n        }\n\n        return toStr[nextVal.length - 1];\n      }\n\n      return ch;\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"doValidate\",\n    value: function doValidate() {\n      var _get2;\n\n      var str = this.value;\n      var firstNonZero = str.search(/[^0]/);\n      if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n\n      var _this$boundaries3 = this.boundaries(str),\n          _this$boundaries4 = _slicedToArray(_this$boundaries3, 2),\n          minstr = _this$boundaries4[0],\n          maxstr = _this$boundaries4[1];\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return this.from <= Number(maxstr) && Number(minstr) <= this.to && (_get2 = _get(_getPrototypeOf(MaskedRange.prototype), \"doValidate\", this)).call.apply(_get2, [this].concat(args));\n    }\n  }]);\n\n  return MaskedRange;\n}(MaskedPattern);\nIMask.MaskedRange = MaskedRange;\n\nexport { MaskedRange as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}