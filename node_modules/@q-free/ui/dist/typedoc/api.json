{
	"id": 0,
	"name": "@q-free/ui",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 61,
			"name": "Background",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Background Interface that will generate utility classes for the background css prop.",
				"tags": [
					{
						"tag": "example",
						"text": "```{background: { color: 'azure', size:'cover', opacity: '50'} }```\n"
					}
				]
			},
			"children": [
				{
					"id": 62,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 56,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 184,
						"name": "Colors"
					}
				},
				{
					"id": 64,
					"name": "opacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 58,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 188,
						"name": "Opacity"
					}
				},
				{
					"id": 66,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 60,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"id": 190,
						"name": "BackgroundPosition"
					}
				},
				{
					"id": 65,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 59,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 189,
						"name": "BackgroundSize"
					}
				},
				{
					"id": 63,
					"name": "variant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 57,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 185,
						"name": "ColorVariants"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						62,
						64,
						66,
						65,
						63
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 55,
					"character": 27
				}
			]
		},
		{
			"id": 918,
			"name": "BlockProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 920,
					"name": "html",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Html element that will render."
					},
					"sources": [
						{
							"fileName": "src/components/simple/Block/index.tsx",
							"line": 12,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "div"
							},
							{
								"type": "stringLiteral",
								"value": "span"
							},
							{
								"type": "stringLiteral",
								"value": "section"
							},
							{
								"type": "stringLiteral",
								"value": "article"
							},
							{
								"type": "stringLiteral",
								"value": "aside"
							},
							{
								"type": "stringLiteral",
								"value": "header"
							},
							{
								"type": "stringLiteral",
								"value": "footer"
							},
							{
								"type": "stringLiteral",
								"value": "nav"
							},
							{
								"type": "stringLiteral",
								"value": "main"
							}
						]
					}
				},
				{
					"id": 919,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object, that will be parses into string of tailwind css classes from the object."
					},
					"sources": [
						{
							"fileName": "src/components/simple/Block/index.tsx",
							"line": 8,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						920,
						919
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/Block/index.tsx",
					"line": 4,
					"character": 20
				}
			]
		},
		{
			"id": 67,
			"name": "Border",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Border Interface that will generate utility classes for the border css prop.",
				"tags": [
					{
						"tag": "example",
						"text": "```{border: { color: 'azure', width:'2', style: 'dashed', opacity: '50'} }```\n"
					}
				]
			},
			"children": [
				{
					"id": 72,
					"name": "bottom",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 71,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 186,
						"name": "BorderWidth"
					}
				},
				{
					"id": 68,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 67,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 184,
						"name": "Colors"
					}
				},
				{
					"id": 73,
					"name": "left",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 72,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 186,
						"name": "BorderWidth"
					}
				},
				{
					"id": 76,
					"name": "opacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 75,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 188,
						"name": "Opacity"
					}
				},
				{
					"id": 71,
					"name": "right",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 70,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 186,
						"name": "BorderWidth"
					}
				},
				{
					"id": 75,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 74,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "solid"
							},
							{
								"type": "stringLiteral",
								"value": "dashed"
							},
							{
								"type": "stringLiteral",
								"value": "dotted"
							},
							{
								"type": "stringLiteral",
								"value": "double"
							},
							{
								"type": "stringLiteral",
								"value": "none"
							}
						]
					}
				},
				{
					"id": 70,
					"name": "top",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 69,
							"character": 5
						}
					],
					"type": {
						"type": "reference",
						"id": 186,
						"name": "BorderWidth"
					}
				},
				{
					"id": 69,
					"name": "variant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 68,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 185,
						"name": "ColorVariants"
					}
				},
				{
					"id": 74,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 73,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 186,
						"name": "BorderWidth"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						72,
						68,
						73,
						76,
						71,
						75,
						70,
						69,
						74
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 66,
					"character": 23
				}
			]
		},
		{
			"id": 922,
			"name": "ButtonProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 924,
					"name": "ripple",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Toggle Ripple effect on click of the button."
					},
					"sources": [
						{
							"fileName": "src/components/simple/Button/index.tsx",
							"line": 13,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 923,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object, that will be parses into string of tailwind css classes from the object."
					},
					"sources": [
						{
							"fileName": "src/components/simple/Button/index.tsx",
							"line": 9,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						924,
						923
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/Button/index.tsx",
					"line": 5,
					"character": 21
				}
			]
		},
		{
			"id": 3629,
			"name": "CalendarProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3633,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "ClassName fro the main wrapper."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 87,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3631,
					"name": "monthNames",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Names of all 12 months, starting from January, used for translation or if there is a need for shorter names"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 79,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 3636,
					"name": "selectedColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Color for the selected date."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 101,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3637,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3638,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/Calendar/index.tsx",
													"line": 101,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"id": 184,
												"name": "Colors"
											}
										},
										{
											"id": 3639,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/Calendar/index.tsx",
													"line": 101,
													"character": 42
												}
											],
											"type": {
												"type": "reference",
												"id": 185,
												"name": "ColorVariants"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3638,
												3639
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3630,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object, that will be parses into string of tailwind css classes from the object."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 75,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 3632,
					"name": "weekdayNames",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Short names of all week days, starting from Monday."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 83,
							"character": 14
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3633,
						3631,
						3636,
						3630,
						3632
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Calendar/index.tsx",
					"line": 71,
					"character": 23
				}
			]
		},
		{
			"id": 3626,
			"name": "CalendarState",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3627,
					"name": "dateObj",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": " Calendar Date value."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 55,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 640,
						"name": "DateObj"
					}
				},
				{
					"id": 3628,
					"name": "offset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Offset that is used for displaying month, 0 will be the current month that is selected or the current date if value is undefined ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 59,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3627,
						3628
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Calendar/index.tsx",
					"line": 51,
					"character": 23
				}
			]
		},
		{
			"id": 3610,
			"name": "CalendarsProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3616,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Main container className for css classes ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 35,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3613,
					"name": "monthNames",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Names of all 12 months, starting from January, used for translation or if there is a need for shorter names"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 23,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 3622,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "On change event"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 48,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3623,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3624,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3625,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "DateObj"
															},
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3618,
					"name": "selectedColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Color for the selected date."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 44,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3619,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3620,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/Calendar/index.tsx",
													"line": 44,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"id": 184,
												"name": "Colors"
											}
										},
										{
											"id": 3621,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/Calendar/index.tsx",
													"line": 44,
													"character": 42
												}
											],
											"type": {
												"type": "reference",
												"id": 185,
												"name": "ColorVariants"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3620,
												3621
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3617,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "State of the calendar."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 40,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 3626,
						"name": "CalendarState"
					}
				},
				{
					"id": 3611,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object, that will be parses into string of tailwind css classes from the object."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 15,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 3615,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Main container element title ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 31,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3612,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Calendar Date value."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 19,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 640,
						"name": "DateObj"
					}
				},
				{
					"id": 3614,
					"name": "weekdayNames",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Short names of all week days, starting from Monday."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 27,
							"character": 14
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3616,
						3613,
						3622,
						3618,
						3617,
						3611,
						3615,
						3612,
						3614
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Calendar/index.tsx",
					"line": 11,
					"character": 24
				}
			]
		},
		{
			"id": 935,
			"name": "CheckboxProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 937,
					"name": "checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Checked state of the Checkbox."
					},
					"sources": [
						{
							"fileName": "src/components/simple/Checkbox/index.tsx",
							"line": 14,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 936,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object, that will be parses into string of tailwind css classes from the object."
					},
					"sources": [
						{
							"fileName": "src/components/simple/Checkbox/index.tsx",
							"line": 10,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 939,
						"name": "CheckboxStyles"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						937,
						936
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/Checkbox/index.tsx",
					"line": 6,
					"character": 23
				}
			]
		},
		{
			"id": 939,
			"name": "CheckboxStyles",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 998,
					"name": "active",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 59,
						"name": "Events.active"
					}
				},
				{
					"id": 950,
					"name": "background",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the background css prop.<br/>\nYou can pass a single string with a color name or an object with color name opacity and bg size.",
						"tags": [
							{
								"tag": "example",
								"text": "```{background: 'red'}```"
							},
							{
								"tag": "example",
								"text": "```{background: {color: 'red', opacity: '20', size: 'cover'}}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 274,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 184,
								"name": "Colors"
							},
							{
								"type": "reference",
								"id": 61,
								"name": "Background"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 11,
						"name": "Utility.background"
					}
				},
				{
					"id": 972,
					"name": "border",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 307,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 67,
						"name": "Border"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 33,
						"name": "Utility.border"
					}
				},
				{
					"id": 945,
					"name": "cursor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the cursor css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{cursor: 'pointer'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 245,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "default"
							},
							{
								"type": "stringLiteral",
								"value": "pointer"
							},
							{
								"type": "stringLiteral",
								"value": "wait"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "not-allowed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 6,
						"name": "Utility.cursor"
					}
				},
				{
					"id": 942,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the display css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 211,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "hidden"
							},
							{
								"type": "stringLiteral",
								"value": "block"
							},
							{
								"type": "stringLiteral",
								"value": "inline-block"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "flex"
							},
							{
								"type": "stringLiteral",
								"value": "inline-flex"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "inline-grid"
							},
							{
								"type": "stringLiteral",
								"value": "table"
							},
							{
								"type": "stringLiteral",
								"value": "table-caption"
							},
							{
								"type": "stringLiteral",
								"value": "table-cell"
							},
							{
								"type": "stringLiteral",
								"value": "flow-root"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3,
						"name": "Utility.display"
					}
				},
				{
					"id": 943,
					"name": "flex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the flex css prop.<br/>\nHere you can pass all flex props for generating flex utility classes, <br/>\nRequires a display: 'flex' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex', flex: {direction: 'column', align: 'center', justify: 'center', flex: 'auto' }}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 231,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 97,
						"name": "Flex"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 4,
						"name": "Utility.flex"
					}
				},
				{
					"id": 999,
					"name": "focus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 366,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 60,
						"name": "Events.focus"
					}
				},
				{
					"id": 952,
					"name": "font",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-weight, font-family, font-style, font antialiasing css props.<br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{font: {weight: 'semibold', family: 'sans', style: 'italic', smoothing: 'antialiased'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 287,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 92,
						"name": "Font"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 13,
						"name": "Utility.font"
					}
				},
				{
					"id": 944,
					"name": "grid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the grid css prop.<br/>\nHere you can pass all grid props for generating grid utility classes, <br/>\nRequires a display: 'grid' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'grid', grid: {cols: '4', gap: '4' }```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 239,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 103,
						"name": "Grid"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 5,
						"name": "Utility.grid"
					}
				},
				{
					"id": 947,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the height css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{height: 'full'}```"
							},
							{
								"tag": "example",
								"text": "```{height: '64'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 258,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"height\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 8,
						"name": "Utility.height"
					}
				},
				{
					"id": 997,
					"name": "hover",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 364,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 58,
						"name": "Events.hover"
					}
				},
				{
					"id": 940,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object for the Icon component."
					},
					"sources": [
						{
							"fileName": "src/components/simple/Checkbox/index.tsx",
							"line": 26,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 995,
					"name": "lg",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 375,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 56,
						"name": "MediaQuery.lg"
					}
				},
				{
					"id": 953,
					"name": "margin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the margin css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{margin: '4'}```"
							},
							{
								"tag": "example",
								"text": "```{margin: ['4','2','4','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 294,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 954,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 961,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 102
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 957,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 49
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 958,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 64
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 956,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 32
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 955,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 959,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 76
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 960,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 88
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												961,
												957,
												958,
												956,
												955,
												959,
												960
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 14,
						"name": "Utility.margin"
					}
				},
				{
					"id": 949,
					"name": "maxHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxHeight css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxHeight: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 268,
							"character": 11
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxHeight\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 10,
						"name": "Utility.maxHeight"
					}
				},
				{
					"id": 948,
					"name": "maxWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxWidth css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxWidth: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 263,
							"character": 10
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxWidth\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 9,
						"name": "Utility.maxWidth"
					}
				},
				{
					"id": 994,
					"name": "md",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 374,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 55,
						"name": "MediaQuery.md"
					}
				},
				{
					"id": 971,
					"name": "opacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the opacity css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{opacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 306,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 188,
						"name": "Opacity"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 32,
						"name": "Utility.opacity"
					}
				},
				{
					"id": 988,
					"name": "overflow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for overflow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{overflow: {x: 'hidden'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 357,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 989,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 992,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 44
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 990,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 991,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												992,
												990,
												991
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 49,
						"name": "Utility.overflow"
					}
				},
				{
					"id": 962,
					"name": "padding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the padding css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{padding: '3'}```"
							},
							{
								"tag": "example",
								"text": "```{padding: ['6','2','6','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 301,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 963,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 970,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 109
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 966,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 52
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 967,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 68
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 965,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 964,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 968,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 81
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 969,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 94
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												970,
												966,
												967,
												965,
												964,
												968,
												969
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 23,
						"name": "Utility.padding"
					}
				},
				{
					"id": 976,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '400'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 323,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 977,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 978,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 324,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 184,
												"name": "Colors"
											}
										},
										{
											"id": 979,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 325,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"id": 185,
												"name": "ColorVariants"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												978,
												979
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 37,
						"name": "Utility.placeholder"
					}
				},
				{
					"id": 980,
					"name": "placeholderOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color opacity.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '700',  placeholderOpacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 331,
							"character": 20
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"placeholderOpacity\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 41,
						"name": "Utility.placeholderOpacity"
					}
				},
				{
					"id": 984,
					"name": "placement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for position placement.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute', placement: 'inset-0'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 351,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 985,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 987,
											"name": "inset",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 42
												}
											],
											"type": {
												"type": "reference",
												"id": 197,
												"name": "Inset"
											}
										},
										{
											"id": 986,
											"name": "position",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 196,
												"name": "Placement"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												987,
												986
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 45,
						"name": "Utility.placement"
					}
				},
				{
					"id": 975,
					"name": "pointerEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the all pointer events.",
						"tags": [
							{
								"tag": "example",
								"text": "```{pointerEvents: 'none'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 318,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "auto"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 36,
						"name": "Utility.pointerEvents"
					}
				},
				{
					"id": 941,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the position css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 205,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "static"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							},
							{
								"type": "stringLiteral",
								"value": "absolute"
							},
							{
								"type": "stringLiteral",
								"value": "relative"
							},
							{
								"type": "stringLiteral",
								"value": "sticky"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2,
						"name": "Utility.position"
					}
				},
				{
					"id": 982,
					"name": "rounded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined border radius classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{rounded: 'full'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 341,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 193,
								"name": "BorderRadius"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"name": "BorderRadius"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 43,
						"name": "Utility.rounded"
					}
				},
				{
					"id": 981,
					"name": "shadow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined box shadow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{shadow: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 336,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"boxShadow\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 42,
						"name": "Utility.shadow"
					}
				},
				{
					"id": 993,
					"name": "sm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 373,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 54,
						"name": "MediaQuery.sm"
					}
				},
				{
					"id": 973,
					"name": "space",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 308,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 77,
						"name": "Space"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 34,
						"name": "Utility.space"
					}
				},
				{
					"id": 974,
					"name": "table",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the table columns widths.",
						"tags": [
							{
								"tag": "example",
								"text": "```{table: 'auto'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 313,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 35,
						"name": "Utility.table"
					}
				},
				{
					"id": 951,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-size, color, color-opacity, line-height, text-align, ... css props. <br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{text: {size: 'lg'} }```"
							},
							{
								"tag": "example",
								"text": "```{text: {size: 'xl', color: 'blue-500', leading: 'tight', align:'center'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 281,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 80,
						"name": "Text"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 12,
						"name": "Utility.text"
					}
				},
				{
					"id": 946,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the width css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{width: '64'}```"
							},
							{
								"tag": "example",
								"text": "```{width: '1/2'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 252,
							"character": 7
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"width\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 7,
						"name": "Utility.width"
					}
				},
				{
					"id": 996,
					"name": "xl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 376,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 57,
						"name": "MediaQuery.xl"
					}
				},
				{
					"id": 983,
					"name": "zIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined z-index classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{zIndex: '60'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 346,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"zIndex\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 44,
						"name": "Utility.zIndex"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						998,
						950,
						972,
						945,
						942,
						943,
						999,
						952,
						944,
						947,
						997,
						940,
						995,
						953,
						949,
						948,
						994,
						971,
						988,
						962,
						976,
						980,
						984,
						975,
						941,
						982,
						981,
						993,
						973,
						974,
						951,
						946,
						996,
						983
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/Checkbox/index.tsx",
					"line": 22,
					"character": 31
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1,
					"name": "Styles"
				}
			]
		},
		{
			"id": 3284,
			"name": "CollapseProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3286,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Main container className for css classes ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Collapse/index.tsx",
							"line": 14,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3288,
					"name": "isExpanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If the collapse is expanded ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Collapse/index.tsx",
							"line": 22,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 3285,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object for the main container."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Collapse/index.tsx",
							"line": 10,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 3289,
						"name": "CollapseStyles"
					}
				},
				{
					"id": 3287,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Text for the main button ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Collapse/index.tsx",
							"line": 18,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3286,
						3288,
						3285,
						3287
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Collapse/index.tsx",
					"line": 6,
					"character": 23
				}
			]
		},
		{
			"id": 3289,
			"name": "CollapseStyles",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3348,
					"name": "active",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 59,
						"name": "Events.active"
					}
				},
				{
					"id": 3300,
					"name": "background",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the background css prop.<br/>\nYou can pass a single string with a color name or an object with color name opacity and bg size.",
						"tags": [
							{
								"tag": "example",
								"text": "```{background: 'red'}```"
							},
							{
								"tag": "example",
								"text": "```{background: {color: 'red', opacity: '20', size: 'cover'}}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 274,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 184,
								"name": "Colors"
							},
							{
								"type": "reference",
								"id": 61,
								"name": "Background"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 11,
						"name": "Utility.background"
					}
				},
				{
					"id": 3322,
					"name": "border",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 307,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 67,
						"name": "Border"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 33,
						"name": "Utility.border"
					}
				},
				{
					"id": 3290,
					"name": "button",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object for the main button."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Collapse/index.tsx",
							"line": 29,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 3295,
					"name": "cursor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the cursor css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{cursor: 'pointer'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 245,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "default"
							},
							{
								"type": "stringLiteral",
								"value": "pointer"
							},
							{
								"type": "stringLiteral",
								"value": "wait"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "not-allowed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 6,
						"name": "Utility.cursor"
					}
				},
				{
					"id": 3292,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the display css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 211,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "hidden"
							},
							{
								"type": "stringLiteral",
								"value": "block"
							},
							{
								"type": "stringLiteral",
								"value": "inline-block"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "flex"
							},
							{
								"type": "stringLiteral",
								"value": "inline-flex"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "inline-grid"
							},
							{
								"type": "stringLiteral",
								"value": "table"
							},
							{
								"type": "stringLiteral",
								"value": "table-caption"
							},
							{
								"type": "stringLiteral",
								"value": "table-cell"
							},
							{
								"type": "stringLiteral",
								"value": "flow-root"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3,
						"name": "Utility.display"
					}
				},
				{
					"id": 3293,
					"name": "flex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the flex css prop.<br/>\nHere you can pass all flex props for generating flex utility classes, <br/>\nRequires a display: 'flex' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex', flex: {direction: 'column', align: 'center', justify: 'center', flex: 'auto' }}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 231,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 97,
						"name": "Flex"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 4,
						"name": "Utility.flex"
					}
				},
				{
					"id": 3349,
					"name": "focus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 366,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 60,
						"name": "Events.focus"
					}
				},
				{
					"id": 3302,
					"name": "font",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-weight, font-family, font-style, font antialiasing css props.<br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{font: {weight: 'semibold', family: 'sans', style: 'italic', smoothing: 'antialiased'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 287,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 92,
						"name": "Font"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 13,
						"name": "Utility.font"
					}
				},
				{
					"id": 3294,
					"name": "grid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the grid css prop.<br/>\nHere you can pass all grid props for generating grid utility classes, <br/>\nRequires a display: 'grid' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'grid', grid: {cols: '4', gap: '4' }```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 239,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 103,
						"name": "Grid"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 5,
						"name": "Utility.grid"
					}
				},
				{
					"id": 3297,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the height css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{height: 'full'}```"
							},
							{
								"tag": "example",
								"text": "```{height: '64'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 258,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"height\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 8,
						"name": "Utility.height"
					}
				},
				{
					"id": 3347,
					"name": "hover",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 364,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 58,
						"name": "Events.hover"
					}
				},
				{
					"id": 3345,
					"name": "lg",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 375,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 56,
						"name": "MediaQuery.lg"
					}
				},
				{
					"id": 3303,
					"name": "margin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the margin css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{margin: '4'}```"
							},
							{
								"tag": "example",
								"text": "```{margin: ['4','2','4','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 294,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3304,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3311,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 102
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3307,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 49
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3308,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 64
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3306,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 32
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3305,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3309,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 76
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3310,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 88
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3311,
												3307,
												3308,
												3306,
												3305,
												3309,
												3310
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 14,
						"name": "Utility.margin"
					}
				},
				{
					"id": 3299,
					"name": "maxHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxHeight css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxHeight: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 268,
							"character": 11
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxHeight\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 10,
						"name": "Utility.maxHeight"
					}
				},
				{
					"id": 3298,
					"name": "maxWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxWidth css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxWidth: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 263,
							"character": 10
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxWidth\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 9,
						"name": "Utility.maxWidth"
					}
				},
				{
					"id": 3344,
					"name": "md",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 374,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 55,
						"name": "MediaQuery.md"
					}
				},
				{
					"id": 3321,
					"name": "opacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the opacity css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{opacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 306,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 188,
						"name": "Opacity"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 32,
						"name": "Utility.opacity"
					}
				},
				{
					"id": 3338,
					"name": "overflow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for overflow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{overflow: {x: 'hidden'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 357,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3339,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3342,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 44
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 3340,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 3341,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3342,
												3340,
												3341
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 49,
						"name": "Utility.overflow"
					}
				},
				{
					"id": 3312,
					"name": "padding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the padding css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{padding: '3'}```"
							},
							{
								"tag": "example",
								"text": "```{padding: ['6','2','6','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 301,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3313,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3320,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 109
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3316,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 52
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3317,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 68
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3315,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3314,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3318,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 81
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3319,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 94
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3320,
												3316,
												3317,
												3315,
												3314,
												3318,
												3319
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 23,
						"name": "Utility.padding"
					}
				},
				{
					"id": 3326,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '400'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 323,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3327,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3328,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 324,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 184,
												"name": "Colors"
											}
										},
										{
											"id": 3329,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 325,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"id": 185,
												"name": "ColorVariants"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3328,
												3329
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 37,
						"name": "Utility.placeholder"
					}
				},
				{
					"id": 3330,
					"name": "placeholderOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color opacity.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '700',  placeholderOpacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 331,
							"character": 20
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"placeholderOpacity\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 41,
						"name": "Utility.placeholderOpacity"
					}
				},
				{
					"id": 3334,
					"name": "placement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for position placement.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute', placement: 'inset-0'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 351,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3335,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3337,
											"name": "inset",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 42
												}
											],
											"type": {
												"type": "reference",
												"id": 197,
												"name": "Inset"
											}
										},
										{
											"id": 3336,
											"name": "position",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 196,
												"name": "Placement"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3337,
												3336
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 45,
						"name": "Utility.placement"
					}
				},
				{
					"id": 3325,
					"name": "pointerEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the all pointer events.",
						"tags": [
							{
								"tag": "example",
								"text": "```{pointerEvents: 'none'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 318,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "auto"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 36,
						"name": "Utility.pointerEvents"
					}
				},
				{
					"id": 3291,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the position css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 205,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "static"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							},
							{
								"type": "stringLiteral",
								"value": "absolute"
							},
							{
								"type": "stringLiteral",
								"value": "relative"
							},
							{
								"type": "stringLiteral",
								"value": "sticky"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2,
						"name": "Utility.position"
					}
				},
				{
					"id": 3332,
					"name": "rounded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined border radius classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{rounded: 'full'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 341,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 193,
								"name": "BorderRadius"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"name": "BorderRadius"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 43,
						"name": "Utility.rounded"
					}
				},
				{
					"id": 3331,
					"name": "shadow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined box shadow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{shadow: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 336,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"boxShadow\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 42,
						"name": "Utility.shadow"
					}
				},
				{
					"id": 3343,
					"name": "sm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 373,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 54,
						"name": "MediaQuery.sm"
					}
				},
				{
					"id": 3323,
					"name": "space",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 308,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 77,
						"name": "Space"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 34,
						"name": "Utility.space"
					}
				},
				{
					"id": 3324,
					"name": "table",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the table columns widths.",
						"tags": [
							{
								"tag": "example",
								"text": "```{table: 'auto'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 313,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 35,
						"name": "Utility.table"
					}
				},
				{
					"id": 3301,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-size, color, color-opacity, line-height, text-align, ... css props. <br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{text: {size: 'lg'} }```"
							},
							{
								"tag": "example",
								"text": "```{text: {size: 'xl', color: 'blue-500', leading: 'tight', align:'center'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 281,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 80,
						"name": "Text"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 12,
						"name": "Utility.text"
					}
				},
				{
					"id": 3296,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the width css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{width: '64'}```"
							},
							{
								"tag": "example",
								"text": "```{width: '1/2'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 252,
							"character": 7
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"width\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 7,
						"name": "Utility.width"
					}
				},
				{
					"id": 3346,
					"name": "xl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 376,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 57,
						"name": "MediaQuery.xl"
					}
				},
				{
					"id": 3333,
					"name": "zIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined z-index classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{zIndex: '60'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 346,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"zIndex\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 44,
						"name": "Utility.zIndex"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3348,
						3300,
						3322,
						3290,
						3295,
						3292,
						3293,
						3349,
						3302,
						3294,
						3297,
						3347,
						3345,
						3303,
						3299,
						3298,
						3344,
						3321,
						3338,
						3312,
						3326,
						3330,
						3334,
						3325,
						3291,
						3332,
						3331,
						3343,
						3323,
						3324,
						3301,
						3296,
						3346,
						3333
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Collapse/index.tsx",
					"line": 25,
					"character": 24
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1,
					"name": "Styles"
				}
			]
		},
		{
			"id": 3424,
			"name": "ColorsDefault",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3425,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/RangeSlider/index.tsx",
							"line": 16,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 184,
						"name": "Colors"
					}
				},
				{
					"id": 3426,
					"name": "variant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/RangeSlider/index.tsx",
							"line": 17,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 185,
						"name": "ColorVariants"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3425,
						3426
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/RangeSlider/index.tsx",
					"line": 15,
					"character": 23
				}
			]
		},
		{
			"id": 3427,
			"name": "ColorsProp",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3429,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/RangeSlider/index.tsx",
							"line": 22,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 3424,
						"name": "ColorsDefault"
					}
				},
				{
					"id": 3430,
					"name": "thumb",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/RangeSlider/index.tsx",
							"line": 23,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 3424,
						"name": "ColorsDefault"
					}
				},
				{
					"id": 3428,
					"name": "track",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/RangeSlider/index.tsx",
							"line": 21,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 3424,
						"name": "ColorsDefault"
					}
				},
				{
					"id": 3431,
					"name": "trackSelected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/RangeSlider/index.tsx",
							"line": 24,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"id": 3424,
						"name": "ColorsDefault"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3429,
						3430,
						3428,
						3431
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/RangeSlider/index.tsx",
					"line": 20,
					"character": 20
				}
			]
		},
		{
			"id": 640,
			"name": "DateObj",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 641,
					"name": "date",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 74,
							"character": 6
						},
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 63,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "Date"
					}
				},
				{
					"id": 642,
					"name": "nextMonth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 75,
							"character": 11
						},
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 64,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 643,
					"name": "prevMonth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 76,
							"character": 11
						},
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 65,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 644,
					"name": "selectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 77,
							"character": 12
						},
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 66,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 645,
					"name": "selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 78,
							"character": 10
						},
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 67,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 646,
					"name": "today",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 79,
							"character": 7
						},
						{
							"fileName": "src/components/complex/Calendar/index.tsx",
							"line": 68,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						641,
						642,
						643,
						644,
						645,
						646
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/DatePicker/index.tsx",
					"line": 73,
					"character": 24
				},
				{
					"fileName": "src/components/complex/Calendar/index.tsx",
					"line": 62,
					"character": 17
				}
			]
		},
		{
			"id": 627,
			"name": "DatePickerProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 630,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Main container className for css classes ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 41,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 629,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Disable the input and the calendar"
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 37,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 637,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Label text for the checkbox."
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 58,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 631,
					"name": "locale",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Add locale. The input date format and calendar will format to that locale. <br/> If no locale is provided it will pickup the locale from the client.",
						"tags": [
							{
								"tag": "example:",
								"text": "```locale=\"nb-NO\"```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 46,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 638,
					"name": "maxDate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Used to calculate the maximum month to render."
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 62,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "Date"
					}
				},
				{
					"id": 639,
					"name": "minDate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Used to calculate the minimum month to render."
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 66,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"name": "Date"
					}
				},
				{
					"id": 632,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "onChange event that will return a DateObj."
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 50,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 633,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 634,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 635,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 640,
																"name": "DateObj"
															},
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 628,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object for the main container and included components."
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 33,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 563,
						"name": "DatePickerStyles"
					}
				},
				{
					"id": 636,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Value prop that can receive Javascript Date Object."
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 54,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"name": "Date"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						630,
						629,
						637,
						631,
						638,
						639,
						632,
						628,
						636
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/DatePicker/index.tsx",
					"line": 29,
					"character": 25
				}
			]
		},
		{
			"id": 647,
			"name": "DatePickerState",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 650,
					"name": "date",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 85,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 640,
						"name": "DateObj"
					}
				},
				{
					"id": 649,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 84,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 648,
					"name": "isVisible",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 83,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						650,
						649,
						648
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/DatePicker/index.tsx",
					"line": 82,
					"character": 25
				}
			]
		},
		{
			"id": 563,
			"name": "DatePickerStyles",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 625,
					"name": "active",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 59,
						"name": "Events.active"
					}
				},
				{
					"id": 577,
					"name": "background",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the background css prop.<br/>\nYou can pass a single string with a color name or an object with color name opacity and bg size.",
						"tags": [
							{
								"tag": "example",
								"text": "```{background: 'red'}```"
							},
							{
								"tag": "example",
								"text": "```{background: {color: 'red', opacity: '20', size: 'cover'}}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 274,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 184,
								"name": "Colors"
							},
							{
								"type": "reference",
								"id": 61,
								"name": "Background"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 11,
						"name": "Utility.background"
					}
				},
				{
					"id": 599,
					"name": "border",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 307,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 67,
						"name": "Border"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 33,
						"name": "Utility.border"
					}
				},
				{
					"id": 565,
					"name": "button",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles object for the button component."
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 18,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 566,
					"name": "calendar",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles object for the calendar component."
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 22,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 572,
					"name": "cursor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the cursor css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{cursor: 'pointer'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 245,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "default"
							},
							{
								"type": "stringLiteral",
								"value": "pointer"
							},
							{
								"type": "stringLiteral",
								"value": "wait"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "not-allowed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 6,
						"name": "Utility.cursor"
					}
				},
				{
					"id": 569,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the display css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 211,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "hidden"
							},
							{
								"type": "stringLiteral",
								"value": "block"
							},
							{
								"type": "stringLiteral",
								"value": "inline-block"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "flex"
							},
							{
								"type": "stringLiteral",
								"value": "inline-flex"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "inline-grid"
							},
							{
								"type": "stringLiteral",
								"value": "table"
							},
							{
								"type": "stringLiteral",
								"value": "table-caption"
							},
							{
								"type": "stringLiteral",
								"value": "table-cell"
							},
							{
								"type": "stringLiteral",
								"value": "flow-root"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3,
						"name": "Utility.display"
					}
				},
				{
					"id": 570,
					"name": "flex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the flex css prop.<br/>\nHere you can pass all flex props for generating flex utility classes, <br/>\nRequires a display: 'flex' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex', flex: {direction: 'column', align: 'center', justify: 'center', flex: 'auto' }}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 231,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 97,
						"name": "Flex"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 4,
						"name": "Utility.flex"
					}
				},
				{
					"id": 626,
					"name": "focus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 366,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 60,
						"name": "Events.focus"
					}
				},
				{
					"id": 579,
					"name": "font",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-weight, font-family, font-style, font antialiasing css props.<br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{font: {weight: 'semibold', family: 'sans', style: 'italic', smoothing: 'antialiased'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 287,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 92,
						"name": "Font"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 13,
						"name": "Utility.font"
					}
				},
				{
					"id": 571,
					"name": "grid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the grid css prop.<br/>\nHere you can pass all grid props for generating grid utility classes, <br/>\nRequires a display: 'grid' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'grid', grid: {cols: '4', gap: '4' }```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 239,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 103,
						"name": "Grid"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 5,
						"name": "Utility.grid"
					}
				},
				{
					"id": 574,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the height css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{height: 'full'}```"
							},
							{
								"tag": "example",
								"text": "```{height: '64'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 258,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"height\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 8,
						"name": "Utility.height"
					}
				},
				{
					"id": 624,
					"name": "hover",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 364,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 58,
						"name": "Events.hover"
					}
				},
				{
					"id": 564,
					"name": "input",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles object for the input component."
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 14,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 567,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles object for the label component."
					},
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 26,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 622,
					"name": "lg",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 375,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 56,
						"name": "MediaQuery.lg"
					}
				},
				{
					"id": 580,
					"name": "margin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the margin css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{margin: '4'}```"
							},
							{
								"tag": "example",
								"text": "```{margin: ['4','2','4','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 294,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 581,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 588,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 102
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 584,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 49
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 585,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 64
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 583,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 32
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 582,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 586,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 76
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 587,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 88
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												588,
												584,
												585,
												583,
												582,
												586,
												587
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 14,
						"name": "Utility.margin"
					}
				},
				{
					"id": 576,
					"name": "maxHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxHeight css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxHeight: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 268,
							"character": 11
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxHeight\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 10,
						"name": "Utility.maxHeight"
					}
				},
				{
					"id": 575,
					"name": "maxWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxWidth css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxWidth: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 263,
							"character": 10
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxWidth\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 9,
						"name": "Utility.maxWidth"
					}
				},
				{
					"id": 621,
					"name": "md",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 374,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 55,
						"name": "MediaQuery.md"
					}
				},
				{
					"id": 598,
					"name": "opacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the opacity css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{opacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 306,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 188,
						"name": "Opacity"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 32,
						"name": "Utility.opacity"
					}
				},
				{
					"id": 615,
					"name": "overflow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for overflow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{overflow: {x: 'hidden'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 357,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 616,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 619,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 44
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 617,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 618,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												619,
												617,
												618
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 49,
						"name": "Utility.overflow"
					}
				},
				{
					"id": 589,
					"name": "padding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the padding css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{padding: '3'}```"
							},
							{
								"tag": "example",
								"text": "```{padding: ['6','2','6','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 301,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 590,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 597,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 109
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 593,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 52
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 594,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 68
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 592,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 591,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 595,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 81
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 596,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 94
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												597,
												593,
												594,
												592,
												591,
												595,
												596
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 23,
						"name": "Utility.padding"
					}
				},
				{
					"id": 603,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '400'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 323,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 604,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 605,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 324,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 184,
												"name": "Colors"
											}
										},
										{
											"id": 606,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 325,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"id": 185,
												"name": "ColorVariants"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												605,
												606
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 37,
						"name": "Utility.placeholder"
					}
				},
				{
					"id": 607,
					"name": "placeholderOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color opacity.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '700',  placeholderOpacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 331,
							"character": 20
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"placeholderOpacity\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 41,
						"name": "Utility.placeholderOpacity"
					}
				},
				{
					"id": 611,
					"name": "placement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for position placement.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute', placement: 'inset-0'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 351,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 612,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 614,
											"name": "inset",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 42
												}
											],
											"type": {
												"type": "reference",
												"id": 197,
												"name": "Inset"
											}
										},
										{
											"id": 613,
											"name": "position",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 196,
												"name": "Placement"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												614,
												613
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 45,
						"name": "Utility.placement"
					}
				},
				{
					"id": 602,
					"name": "pointerEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the all pointer events.",
						"tags": [
							{
								"tag": "example",
								"text": "```{pointerEvents: 'none'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 318,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "auto"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 36,
						"name": "Utility.pointerEvents"
					}
				},
				{
					"id": 568,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the position css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 205,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "static"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							},
							{
								"type": "stringLiteral",
								"value": "absolute"
							},
							{
								"type": "stringLiteral",
								"value": "relative"
							},
							{
								"type": "stringLiteral",
								"value": "sticky"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2,
						"name": "Utility.position"
					}
				},
				{
					"id": 609,
					"name": "rounded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined border radius classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{rounded: 'full'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 341,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 193,
								"name": "BorderRadius"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"name": "BorderRadius"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 43,
						"name": "Utility.rounded"
					}
				},
				{
					"id": 608,
					"name": "shadow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined box shadow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{shadow: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 336,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"boxShadow\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 42,
						"name": "Utility.shadow"
					}
				},
				{
					"id": 620,
					"name": "sm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 373,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 54,
						"name": "MediaQuery.sm"
					}
				},
				{
					"id": 600,
					"name": "space",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 308,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 77,
						"name": "Space"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 34,
						"name": "Utility.space"
					}
				},
				{
					"id": 601,
					"name": "table",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the table columns widths.",
						"tags": [
							{
								"tag": "example",
								"text": "```{table: 'auto'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 313,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 35,
						"name": "Utility.table"
					}
				},
				{
					"id": 578,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-size, color, color-opacity, line-height, text-align, ... css props. <br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{text: {size: 'lg'} }```"
							},
							{
								"tag": "example",
								"text": "```{text: {size: 'xl', color: 'blue-500', leading: 'tight', align:'center'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 281,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 80,
						"name": "Text"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 12,
						"name": "Utility.text"
					}
				},
				{
					"id": 573,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the width css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{width: '64'}```"
							},
							{
								"tag": "example",
								"text": "```{width: '1/2'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 252,
							"character": 7
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"width\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 7,
						"name": "Utility.width"
					}
				},
				{
					"id": 623,
					"name": "xl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 376,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 57,
						"name": "MediaQuery.xl"
					}
				},
				{
					"id": 610,
					"name": "zIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined z-index classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{zIndex: '60'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 346,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"zIndex\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 44,
						"name": "Utility.zIndex"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						625,
						577,
						599,
						565,
						566,
						572,
						569,
						570,
						626,
						579,
						571,
						574,
						624,
						564,
						567,
						622,
						580,
						576,
						575,
						621,
						598,
						615,
						589,
						603,
						607,
						611,
						602,
						568,
						609,
						608,
						620,
						600,
						601,
						578,
						573,
						623,
						610
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/DatePicker/index.tsx",
					"line": 10,
					"character": 33
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1,
					"name": "Styles"
				}
			]
		},
		{
			"id": 175,
			"name": "Events",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Interface holder for all css event prefixes.",
				"tags": [
					{
						"tag": "example",
						"text": "```{hover: {opacity: '50'}}```\n"
					}
				]
			},
			"children": [
				{
					"id": 177,
					"name": "active",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					}
				},
				{
					"id": 178,
					"name": "focus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 366,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					}
				},
				{
					"id": 176,
					"name": "hover",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 364,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						177,
						178,
						176
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 363,
					"character": 23
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1,
					"name": "Styles"
				}
			]
		},
		{
			"id": 97,
			"name": "Flex",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 100,
					"name": "align",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 171,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "stretch"
							},
							{
								"type": "stringLiteral",
								"value": "start"
							},
							{
								"type": "stringLiteral",
								"value": "center"
							},
							{
								"type": "stringLiteral",
								"value": "end"
							},
							{
								"type": "stringLiteral",
								"value": "baseline"
							}
						]
					}
				},
				{
					"id": 98,
					"name": "direction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 169,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "row"
							},
							{
								"type": "stringLiteral",
								"value": "row-reverse"
							},
							{
								"type": "stringLiteral",
								"value": "col"
							},
							{
								"type": "stringLiteral",
								"value": "col-reverse"
							}
						]
					}
				},
				{
					"id": 102,
					"name": "flex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 173,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "initial"
							},
							{
								"type": "stringLiteral",
								"value": "1"
							},
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "none"
							}
						]
					}
				},
				{
					"id": 101,
					"name": "justify",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 172,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "start"
							},
							{
								"type": "stringLiteral",
								"value": "center"
							},
							{
								"type": "stringLiteral",
								"value": "end"
							},
							{
								"type": "stringLiteral",
								"value": "between"
							},
							{
								"type": "stringLiteral",
								"value": "around"
							}
						]
					}
				},
				{
					"id": 99,
					"name": "wrap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 170,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "nowrap"
							},
							{
								"type": "stringLiteral",
								"value": "wrap"
							},
							{
								"type": "stringLiteral",
								"value": "wrap-reverse"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						100,
						98,
						102,
						101,
						99
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 168,
					"character": 21
				}
			]
		},
		{
			"id": 92,
			"name": "Font",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 94,
					"name": "family",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 163,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"fontFamily\""
							}
						}
					}
				},
				{
					"id": 96,
					"name": "smoothing",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 165,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "antialiased"
							},
							{
								"type": "stringLiteral",
								"value": "subpixel-antialiased"
							}
						]
					}
				},
				{
					"id": 95,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 164,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "italic"
							},
							{
								"type": "stringLiteral",
								"value": "not-italic"
							}
						]
					}
				},
				{
					"id": 93,
					"name": "weight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 162,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"fontWeight\""
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						94,
						96,
						95,
						93
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 161,
					"character": 21
				}
			]
		},
		{
			"id": 103,
			"name": "Grid",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 104,
					"name": "columns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 180,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 195,
								"name": "GridTwelve"
							},
							{
								"type": "stringLiteral",
								"value": "none"
							}
						]
					}
				},
				{
					"id": 118,
					"name": "end",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 185,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 119,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 120,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 185,
													"character": 11
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 195,
														"name": "GridTwelve"
													},
													{
														"type": "stringLiteral",
														"value": "13"
													},
													{
														"type": "stringLiteral",
														"value": "auto"
													}
												]
											}
										},
										{
											"id": 121,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 185,
													"character": 43
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 194,
														"name": "GridSix"
													},
													{
														"type": "stringLiteral",
														"value": "7"
													},
													{
														"type": "stringLiteral",
														"value": "auto"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												120,
												121
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 106,
					"name": "gap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 182,
							"character": 5
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 107,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 108,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 182,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"id": 187,
												"name": "Spacing"
											}
										},
										{
											"id": 109,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 182,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 187,
												"name": "Spacing"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												108,
												109
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 105,
					"name": "rows",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 181,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 194,
								"name": "GridSix"
							},
							{
								"type": "stringLiteral",
								"value": "none"
							}
						]
					}
				},
				{
					"id": 110,
					"name": "span",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 183,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 111,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 112,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 183,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"id": 195,
												"name": "GridTwelve"
											}
										},
										{
											"id": 113,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 183,
													"character": 28
												}
											],
											"type": {
												"type": "reference",
												"id": 194,
												"name": "GridSix"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												112,
												113
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 114,
					"name": "start",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 184,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 115,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 116,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 184,
													"character": 13
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 195,
														"name": "GridTwelve"
													},
													{
														"type": "stringLiteral",
														"value": "13"
													},
													{
														"type": "stringLiteral",
														"value": "auto"
													}
												]
											}
										},
										{
											"id": 117,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 184,
													"character": 45
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 194,
														"name": "GridSix"
													},
													{
														"type": "stringLiteral",
														"value": "7"
													},
													{
														"type": "stringLiteral",
														"value": "auto"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												116,
												117
											]
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						104,
						118,
						106,
						105,
						110,
						114
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 179,
					"character": 21
				}
			]
		},
		{
			"id": 3266,
			"name": "InitialColors",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3271,
					"name": "background",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/Pagination/index.tsx",
							"line": 55,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3272,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 3273,
									"name": "color",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/components/complex/Pagination/index.tsx",
											"line": 55,
											"character": 21
										}
									],
									"type": {
										"type": "reference",
										"id": 184,
										"name": "Colors"
									}
								},
								{
									"id": 3274,
									"name": "variant",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/components/complex/Pagination/index.tsx",
											"line": 55,
											"character": 38
										}
									],
									"type": {
										"type": "reference",
										"id": 185,
										"name": "ColorVariants"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3273,
										3274
									]
								}
							],
							"sources": [
								{
									"fileName": "src/components/complex/Pagination/index.tsx",
									"line": 55,
									"character": 13
								}
							]
						}
					}
				},
				{
					"id": 3267,
					"name": "border",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/Pagination/index.tsx",
							"line": 54,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3268,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 3269,
									"name": "color",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/components/complex/Pagination/index.tsx",
											"line": 54,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"id": 184,
										"name": "Colors"
									}
								},
								{
									"id": 3270,
									"name": "variant",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/components/complex/Pagination/index.tsx",
											"line": 54,
											"character": 34
										}
									],
									"type": {
										"type": "reference",
										"id": 185,
										"name": "ColorVariants"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3269,
										3270
									]
								}
							],
							"sources": [
								{
									"fileName": "src/components/complex/Pagination/index.tsx",
									"line": 54,
									"character": 9
								}
							]
						}
					}
				},
				{
					"id": 3275,
					"name": "focus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/Pagination/index.tsx",
							"line": 56,
							"character": 7
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3276,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 3277,
									"name": "color",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/components/complex/Pagination/index.tsx",
											"line": 56,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"id": 184,
										"name": "Colors"
									}
								},
								{
									"id": 3278,
									"name": "variant",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/components/complex/Pagination/index.tsx",
											"line": 56,
											"character": 33
										}
									],
									"type": {
										"type": "reference",
										"id": 185,
										"name": "ColorVariants"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3277,
										3278
									]
								}
							],
							"sources": [
								{
									"fileName": "src/components/complex/Pagination/index.tsx",
									"line": 56,
									"character": 8
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3271,
						3267,
						3275
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Pagination/index.tsx",
					"line": 53,
					"character": 23
				}
			]
		},
		{
			"id": 1033,
			"name": "InputMaskedProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1048,
					"name": "autofix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Will try to fix the value to the pattern ."
					},
					"sources": [
						{
							"fileName": "src/components/simple/InputMasked/index.tsx",
							"line": 47,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 1039,
					"name": "blocks",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Block that will be used in a pattern, defined at https://imask.js.org/guide.html#masked-pattern."
					},
					"sources": [
						{
							"fileName": "src/components/simple/InputMasked/index.tsx",
							"line": 31,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "object"
							}
						]
					}
				},
				{
					"id": 1035,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Main container className for css classes ."
					},
					"sources": [
						{
							"fileName": "src/components/simple/InputMasked/index.tsx",
							"line": 14,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1051,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Will disable the input."
					},
					"sources": [
						{
							"fileName": "src/components/simple/InputMasked/index.tsx",
							"line": 59,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 1040,
					"name": "format",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "if you set pattern option, then you also have to provide format and parse options.\nFormat is used for the Date mask, as defined at https://imask.js.org/guide.html#masked-date"
					},
					"sources": [
						{
							"fileName": "src/components/simple/InputMasked/index.tsx",
							"line": 37,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1041,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1042,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1043,
													"name": "date",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "Date"
															},
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1049,
					"name": "lazy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Show placeholder only when needed."
					},
					"sources": [
						{
							"fileName": "src/components/simple/InputMasked/index.tsx",
							"line": 51,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 1036,
					"name": "mask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Prop type for the https://imask.js.org/api/#mask ."
					},
					"sources": [
						{
							"fileName": "src/components/simple/InputMasked/index.tsx",
							"line": 19,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "tuple"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "String"
							},
							{
								"type": "reference",
								"name": "RegExp"
							},
							{
								"type": "reference",
								"name": "Number"
							},
							{
								"type": "reference",
								"name": "Date"
							},
							{
								"type": "reference",
								"name": "IMask.Masked"
							}
						]
					}
				},
				{
					"id": 1052,
					"name": "onAccept",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If its valid will return a value."
					},
					"sources": [
						{
							"fileName": "src/components/simple/InputMasked/index.tsx",
							"line": 63,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1053,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1054,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1055,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "false"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1056,
					"name": "onComplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "When the input is complete will return the value, for example if the whole date is entered ."
					},
					"sources": [
						{
							"fileName": "src/components/simple/InputMasked/index.tsx",
							"line": 67,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1057,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1058,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1059,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "false"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1050,
					"name": "overwrite",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Enable characters overwriting."
					},
					"sources": [
						{
							"fileName": "src/components/simple/InputMasked/index.tsx",
							"line": 55,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 1044,
					"name": "parse",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "if you set pattern option, then you also have to provide format and parse options.\nparse is used for the Date mask, as defined at https://imask.js.org/guide.html#masked-date"
					},
					"sources": [
						{
							"fileName": "src/components/simple/InputMasked/index.tsx",
							"line": 43,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1045,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1046,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1047,
													"name": "str",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1038,
					"name": "pattern",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Pattern for the mask, defined at https://imask.js.org/guide.html#masked-pattern ."
					},
					"sources": [
						{
							"fileName": "src/components/simple/InputMasked/index.tsx",
							"line": 27,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1037,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Placeholder value for the input, should match the mask format ."
					},
					"sources": [
						{
							"fileName": "src/components/simple/InputMasked/index.tsx",
							"line": 23,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1034,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object, that will be parses into string of tailwind css classes from the object."
					},
					"sources": [
						{
							"fileName": "src/components/simple/InputMasked/index.tsx",
							"line": 10,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1048,
						1039,
						1035,
						1051,
						1040,
						1049,
						1036,
						1052,
						1056,
						1050,
						1044,
						1038,
						1037,
						1034
					],
					"categories": [
						{
							"title": "Other",
							"children": [
								1048,
								1039,
								1035,
								1051,
								1040,
								1049,
								1052,
								1056,
								1050,
								1044,
								1038,
								1037,
								1034
							]
						},
						{
							"title": "inlineLinks",
							"children": [
								1036
							]
						}
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/InputMasked/index.tsx",
					"line": 6,
					"character": 26
				}
			]
		},
		{
			"id": 1025,
			"name": "InputProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1026,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object, that will be parses into string of tailwind css classes from the object."
					},
					"sources": [
						{
							"fileName": "src/components/simple/Input/index.tsx",
							"line": 9,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 1027,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Html tag for the input type"
					},
					"sources": [
						{
							"fileName": "src/components/simple/Input/index.tsx",
							"line": 13,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "color"
							},
							{
								"type": "stringLiteral",
								"value": "email"
							},
							{
								"type": "stringLiteral",
								"value": "file"
							},
							{
								"type": "stringLiteral",
								"value": "hidden"
							},
							{
								"type": "stringLiteral",
								"value": "number"
							},
							{
								"type": "stringLiteral",
								"value": "password"
							},
							{
								"type": "stringLiteral",
								"value": "search"
							},
							{
								"type": "stringLiteral",
								"value": "tel"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "url"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1026,
						1027
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/Input/index.tsx",
					"line": 5,
					"character": 20
				}
			]
		},
		{
			"id": 205,
			"name": "LabelProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 230,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1773,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 230,
						"name": "HTMLAttributes.about"
					}
				},
				{
					"id": 212,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1749,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 212,
						"name": "HTMLAttributes.accessKey"
					}
				},
				{
					"id": 252,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1556,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 252,
						"name": "AriaAttributes.'aria-activedescendant'"
					}
				},
				{
					"id": 253,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1558,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 253,
						"name": "AriaAttributes.'aria-atomic'"
					}
				},
				{
					"id": 254,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1563,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "list"
							},
							{
								"type": "stringLiteral",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 254,
						"name": "AriaAttributes.'aria-autocomplete'"
					}
				},
				{
					"id": 255,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1565,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 255,
						"name": "AriaAttributes.'aria-busy'"
					}
				},
				{
					"id": 256,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-pressed @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1570,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "mixed"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 256,
						"name": "AriaAttributes.'aria-checked'"
					}
				},
				{
					"id": 257,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1575,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 257,
						"name": "AriaAttributes.'aria-colcount'"
					}
				},
				{
					"id": 258,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colcount @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1580,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 258,
						"name": "AriaAttributes.'aria-colindex'"
					}
				},
				{
					"id": 259,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1585,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 259,
						"name": "AriaAttributes.'aria-colspan'"
					}
				},
				{
					"id": 260,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-owns.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1590,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 260,
						"name": "AriaAttributes.'aria-controls'"
					}
				},
				{
					"id": 261,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the element that represents the current item within a container or set of related elements."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1592,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "page"
							},
							{
								"type": "stringLiteral",
								"value": "step"
							},
							{
								"type": "stringLiteral",
								"value": "location"
							},
							{
								"type": "stringLiteral",
								"value": "date"
							},
							{
								"type": "stringLiteral",
								"value": "time"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 261,
						"name": "AriaAttributes.'aria-current'"
					}
				},
				{
					"id": 262,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1597,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 262,
						"name": "AriaAttributes.'aria-describedby'"
					}
				},
				{
					"id": 263,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides a detailed, extended description for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1602,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 263,
						"name": "AriaAttributes.'aria-details'"
					}
				},
				{
					"id": 264,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-hidden @see aria-readonly.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1607,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 264,
						"name": "AriaAttributes.'aria-disabled'"
					}
				},
				{
					"id": 265,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1612,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "copy"
							},
							{
								"type": "stringLiteral",
								"value": "execute"
							},
							{
								"type": "stringLiteral",
								"value": "link"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 265,
						"name": "AriaAttributes.'aria-dropeffect'"
					}
				},
				{
					"id": 266,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides an error message for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-invalid @see aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1617,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 266,
						"name": "AriaAttributes.'aria-errormessage'"
					}
				},
				{
					"id": 267,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1619,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 267,
						"name": "AriaAttributes.'aria-expanded'"
					}
				},
				{
					"id": 268,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1624,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 268,
						"name": "AriaAttributes.'aria-flowto'"
					}
				},
				{
					"id": 269,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1629,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 269,
						"name": "AriaAttributes.'aria-grabbed'"
					}
				},
				{
					"id": 270,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1631,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "menu"
							},
							{
								"type": "stringLiteral",
								"value": "listbox"
							},
							{
								"type": "stringLiteral",
								"value": "tree"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "dialog"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 270,
						"name": "AriaAttributes.'aria-haspopup'"
					}
				},
				{
					"id": 271,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element is exposed to an accessibility API.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1636,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 271,
						"name": "AriaAttributes.'aria-hidden'"
					}
				},
				{
					"id": 272,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the entered value does not conform to the format expected by the application.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-errormessage.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1641,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "grammar"
							},
							{
								"type": "stringLiteral",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 272,
						"name": "AriaAttributes.'aria-invalid'"
					}
				},
				{
					"id": 273,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1643,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 273,
						"name": "AriaAttributes.'aria-keyshortcuts'"
					}
				},
				{
					"id": 274,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1648,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 274,
						"name": "AriaAttributes.'aria-label'"
					}
				},
				{
					"id": 275,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1653,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 275,
						"name": "AriaAttributes.'aria-labelledby'"
					}
				},
				{
					"id": 276,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the hierarchical level of an element within a structure."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1655,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 276,
						"name": "AriaAttributes.'aria-level'"
					}
				},
				{
					"id": 277,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1657,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "off"
							},
							{
								"type": "stringLiteral",
								"value": "assertive"
							},
							{
								"type": "stringLiteral",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 277,
						"name": "AriaAttributes.'aria-live'"
					}
				},
				{
					"id": 278,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether an element is modal when displayed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1659,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 278,
						"name": "AriaAttributes.'aria-modal'"
					}
				},
				{
					"id": 279,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1661,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 279,
						"name": "AriaAttributes.'aria-multiline'"
					}
				},
				{
					"id": 280,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1663,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 280,
						"name": "AriaAttributes.'aria-multiselectable'"
					}
				},
				{
					"id": 281,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1665,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "horizontal"
							},
							{
								"type": "stringLiteral",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 281,
						"name": "AriaAttributes.'aria-orientation'"
					}
				},
				{
					"id": 282,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-controls.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1671,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 282,
						"name": "AriaAttributes.'aria-owns'"
					}
				},
				{
					"id": 283,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1676,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 283,
						"name": "AriaAttributes.'aria-placeholder'"
					}
				},
				{
					"id": 284,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-setsize.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1681,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 284,
						"name": "AriaAttributes.'aria-posinset'"
					}
				},
				{
					"id": 285,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1686,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "mixed"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 285,
						"name": "AriaAttributes.'aria-pressed'"
					}
				},
				{
					"id": 286,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is not editable, but is otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1691,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 286,
						"name": "AriaAttributes.'aria-readonly'"
					}
				},
				{
					"id": 287,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-atomic.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1696,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "additions"
							},
							{
								"type": "stringLiteral",
								"value": "additions removals"
							},
							{
								"type": "stringLiteral",
								"value": "additions text"
							},
							{
								"type": "stringLiteral",
								"value": "all"
							},
							{
								"type": "stringLiteral",
								"value": "removals"
							},
							{
								"type": "stringLiteral",
								"value": "removals additions"
							},
							{
								"type": "stringLiteral",
								"value": "removals text"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "text additions"
							},
							{
								"type": "stringLiteral",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 287,
						"name": "AriaAttributes.'aria-relevant'"
					}
				},
				{
					"id": 288,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that user input is required on the element before a form may be submitted."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1698,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 288,
						"name": "AriaAttributes.'aria-required'"
					}
				},
				{
					"id": 289,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a human-readable, author-localized description for the role of an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1700,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 289,
						"name": "AriaAttributes.'aria-roledescription'"
					}
				},
				{
					"id": 290,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1705,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 290,
						"name": "AriaAttributes.'aria-rowcount'"
					}
				},
				{
					"id": 291,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowcount @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1710,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 291,
						"name": "AriaAttributes.'aria-rowindex'"
					}
				},
				{
					"id": 292,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1715,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 292,
						"name": "AriaAttributes.'aria-rowspan'"
					}
				},
				{
					"id": 293,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"selected\" state of various widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-pressed.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1720,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 293,
						"name": "AriaAttributes.'aria-selected'"
					}
				},
				{
					"id": 294,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-posinset.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1725,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 294,
						"name": "AriaAttributes.'aria-setsize'"
					}
				},
				{
					"id": 295,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1727,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "ascending"
							},
							{
								"type": "stringLiteral",
								"value": "descending"
							},
							{
								"type": "stringLiteral",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 295,
						"name": "AriaAttributes.'aria-sort'"
					}
				},
				{
					"id": 296,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the maximum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1729,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 296,
						"name": "AriaAttributes.'aria-valuemax'"
					}
				},
				{
					"id": 297,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the minimum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1731,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 297,
						"name": "AriaAttributes.'aria-valuemin'"
					}
				},
				{
					"id": 298,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the current value for a range widget.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-valuetext.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1736,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 298,
						"name": "AriaAttributes.'aria-valuenow'"
					}
				},
				{
					"id": 299,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1738,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 299,
						"name": "AriaAttributes.'aria-valuetext'"
					}
				},
				{
					"id": 238,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1783,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 238,
						"name": "HTMLAttributes.autoCapitalize"
					}
				},
				{
					"id": 239,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1784,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 239,
						"name": "HTMLAttributes.autoCorrect"
					}
				},
				{
					"id": 240,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1785,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 240,
						"name": "HTMLAttributes.autoSave"
					}
				},
				{
					"id": 207,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/Label/index.tsx",
							"line": 7,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "React.ReactNode"
					},
					"overwrites": {
						"type": "reference",
						"name": "DOMAttributes.children"
					}
				},
				{
					"id": 213,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1750,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 213,
						"name": "HTMLAttributes.className"
					}
				},
				{
					"id": 241,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1786,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 241,
						"name": "HTMLAttributes.color"
					}
				},
				{
					"id": 214,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1751,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Booleanish"
							},
							{
								"type": "stringLiteral",
								"value": "inherit"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 214,
						"name": "HTMLAttributes.contentEditable"
					}
				},
				{
					"id": 215,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1752,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 215,
						"name": "HTMLAttributes.contextMenu"
					}
				},
				{
					"id": 300,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1347,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 301,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 302,
											"name": "__html",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 1348,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												302
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 300,
						"name": "DOMAttributes.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 231,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1774,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 231,
						"name": "HTMLAttributes.datatype"
					}
				},
				{
					"id": 208,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1743,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 208,
						"name": "HTMLAttributes.defaultChecked"
					}
				},
				{
					"id": 209,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1744,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "ReadonlyArray"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 209,
						"name": "HTMLAttributes.defaultValue"
					}
				},
				{
					"id": 216,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1753,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 216,
						"name": "HTMLAttributes.dir"
					}
				},
				{
					"id": 217,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1754,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 217,
						"name": "HTMLAttributes.draggable"
					}
				},
				{
					"id": 218,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1755,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 218,
						"name": "HTMLAttributes.hidden"
					}
				},
				{
					"id": 219,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1756,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 219,
						"name": "HTMLAttributes.id"
					}
				},
				{
					"id": 232,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1775,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 232,
						"name": "HTMLAttributes.inlist"
					}
				},
				{
					"id": 250,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1801,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "tel"
							},
							{
								"type": "stringLiteral",
								"value": "url"
							},
							{
								"type": "stringLiteral",
								"value": "email"
							},
							{
								"type": "stringLiteral",
								"value": "numeric"
							},
							{
								"type": "stringLiteral",
								"value": "decimal"
							},
							{
								"type": "stringLiteral",
								"value": "search"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 250,
						"name": "HTMLAttributes.inputMode"
					}
				},
				{
					"id": 251,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1806,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 251,
						"name": "HTMLAttributes.is"
					}
				},
				{
					"id": 245,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1790,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 245,
						"name": "HTMLAttributes.itemID"
					}
				},
				{
					"id": 242,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1787,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 242,
						"name": "HTMLAttributes.itemProp"
					}
				},
				{
					"id": 246,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1791,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 246,
						"name": "HTMLAttributes.itemRef"
					}
				},
				{
					"id": 243,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1788,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 243,
						"name": "HTMLAttributes.itemScope"
					}
				},
				{
					"id": 244,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1789,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 244,
						"name": "HTMLAttributes.itemType"
					}
				},
				{
					"id": 220,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1757,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 220,
						"name": "HTMLAttributes.lang"
					}
				},
				{
					"id": 341,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1402,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 341,
						"name": "DOMAttributes.onAbort"
					}
				},
				{
					"id": 342,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1403,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 342,
						"name": "DOMAttributes.onAbortCapture"
					}
				},
				{
					"id": 457,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1532,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 457,
						"name": "DOMAttributes.onAnimationEnd"
					}
				},
				{
					"id": 458,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1533,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 458,
						"name": "DOMAttributes.onAnimationEndCapture"
					}
				},
				{
					"id": 459,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 459,
						"name": "DOMAttributes.onAnimationIteration"
					}
				},
				{
					"id": 460,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 460,
						"name": "DOMAttributes.onAnimationIterationCapture"
					}
				},
				{
					"id": 455,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1530,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 455,
						"name": "DOMAttributes.onAnimationStart"
					}
				},
				{
					"id": 456,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 456,
						"name": "DOMAttributes.onAnimationStartCapture"
					}
				},
				{
					"id": 385,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1448,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 385,
						"name": "DOMAttributes.onAuxClick"
					}
				},
				{
					"id": 386,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 386,
						"name": "DOMAttributes.onAuxClickCapture"
					}
				},
				{
					"id": 321,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 321,
						"name": "DOMAttributes.onBeforeInput"
					}
				},
				{
					"id": 322,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 322,
						"name": "DOMAttributes.onBeforeInputCapture"
					}
				},
				{
					"id": 317,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1370,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 317,
						"name": "DOMAttributes.onBlur"
					}
				},
				{
					"id": 318,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1371,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 318,
						"name": "DOMAttributes.onBlurCapture"
					}
				},
				{
					"id": 343,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 343,
						"name": "DOMAttributes.onCanPlay"
					}
				},
				{
					"id": 344,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 344,
						"name": "DOMAttributes.onCanPlayCapture"
					}
				},
				{
					"id": 345,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 345,
						"name": "DOMAttributes.onCanPlayThrough"
					}
				},
				{
					"id": 346,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 346,
						"name": "DOMAttributes.onCanPlayThroughCapture"
					}
				},
				{
					"id": 319,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1374,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 319,
						"name": "DOMAttributes.onChange"
					}
				},
				{
					"id": 320,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1375,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 320,
						"name": "DOMAttributes.onChangeCapture"
					}
				},
				{
					"id": 387,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 387,
						"name": "DOMAttributes.onClick"
					}
				},
				{
					"id": 388,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 388,
						"name": "DOMAttributes.onClickCapture"
					}
				},
				{
					"id": 309,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1360,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 309,
						"name": "DOMAttributes.onCompositionEnd"
					}
				},
				{
					"id": 310,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1361,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 310,
						"name": "DOMAttributes.onCompositionEndCapture"
					}
				},
				{
					"id": 311,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1362,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 311,
						"name": "DOMAttributes.onCompositionStart"
					}
				},
				{
					"id": 312,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1363,
							"character": 33
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 312,
						"name": "DOMAttributes.onCompositionStartCapture"
					}
				},
				{
					"id": 313,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1364,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 313,
						"name": "DOMAttributes.onCompositionUpdate"
					}
				},
				{
					"id": 314,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1365,
							"character": 34
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 314,
						"name": "DOMAttributes.onCompositionUpdateCapture"
					}
				},
				{
					"id": 389,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 389,
						"name": "DOMAttributes.onContextMenu"
					}
				},
				{
					"id": 390,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 390,
						"name": "DOMAttributes.onContextMenuCapture"
					}
				},
				{
					"id": 303,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1352,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 303,
						"name": "DOMAttributes.onCopy"
					}
				},
				{
					"id": 304,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1353,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 304,
						"name": "DOMAttributes.onCopyCapture"
					}
				},
				{
					"id": 305,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1354,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 305,
						"name": "DOMAttributes.onCut"
					}
				},
				{
					"id": 306,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1355,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 306,
						"name": "DOMAttributes.onCutCapture"
					}
				},
				{
					"id": 391,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 391,
						"name": "DOMAttributes.onDoubleClick"
					}
				},
				{
					"id": 392,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 392,
						"name": "DOMAttributes.onDoubleClickCapture"
					}
				},
				{
					"id": 393,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 393,
						"name": "DOMAttributes.onDrag"
					}
				},
				{
					"id": 394,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 394,
						"name": "DOMAttributes.onDragCapture"
					}
				},
				{
					"id": 395,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 395,
						"name": "DOMAttributes.onDragEnd"
					}
				},
				{
					"id": 396,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 396,
						"name": "DOMAttributes.onDragEndCapture"
					}
				},
				{
					"id": 397,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 397,
						"name": "DOMAttributes.onDragEnter"
					}
				},
				{
					"id": 398,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 398,
						"name": "DOMAttributes.onDragEnterCapture"
					}
				},
				{
					"id": 399,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 399,
						"name": "DOMAttributes.onDragExit"
					}
				},
				{
					"id": 400,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 400,
						"name": "DOMAttributes.onDragExitCapture"
					}
				},
				{
					"id": 401,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 401,
						"name": "DOMAttributes.onDragLeave"
					}
				},
				{
					"id": 402,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 402,
						"name": "DOMAttributes.onDragLeaveCapture"
					}
				},
				{
					"id": 403,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 403,
						"name": "DOMAttributes.onDragOver"
					}
				},
				{
					"id": 404,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 404,
						"name": "DOMAttributes.onDragOverCapture"
					}
				},
				{
					"id": 405,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 405,
						"name": "DOMAttributes.onDragStart"
					}
				},
				{
					"id": 406,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 406,
						"name": "DOMAttributes.onDragStartCapture"
					}
				},
				{
					"id": 407,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 407,
						"name": "DOMAttributes.onDrop"
					}
				},
				{
					"id": 408,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 408,
						"name": "DOMAttributes.onDropCapture"
					}
				},
				{
					"id": 347,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 347,
						"name": "DOMAttributes.onDurationChange"
					}
				},
				{
					"id": 348,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 348,
						"name": "DOMAttributes.onDurationChangeCapture"
					}
				},
				{
					"id": 349,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 349,
						"name": "DOMAttributes.onEmptied"
					}
				},
				{
					"id": 350,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 350,
						"name": "DOMAttributes.onEmptiedCapture"
					}
				},
				{
					"id": 351,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 351,
						"name": "DOMAttributes.onEncrypted"
					}
				},
				{
					"id": 352,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 352,
						"name": "DOMAttributes.onEncryptedCapture"
					}
				},
				{
					"id": 353,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 353,
						"name": "DOMAttributes.onEnded"
					}
				},
				{
					"id": 354,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 354,
						"name": "DOMAttributes.onEndedCapture"
					}
				},
				{
					"id": 333,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 333,
						"name": "DOMAttributes.onError"
					}
				},
				{
					"id": 334,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 334,
						"name": "DOMAttributes.onErrorCapture"
					}
				},
				{
					"id": 315,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1368,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 315,
						"name": "DOMAttributes.onFocus"
					}
				},
				{
					"id": 316,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1369,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 316,
						"name": "DOMAttributes.onFocusCapture"
					}
				},
				{
					"id": 447,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 447,
						"name": "DOMAttributes.onGotPointerCapture"
					}
				},
				{
					"id": 448,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 34
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 448,
						"name": "DOMAttributes.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 323,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1378,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 323,
						"name": "DOMAttributes.onInput"
					}
				},
				{
					"id": 324,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1379,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 324,
						"name": "DOMAttributes.onInputCapture"
					}
				},
				{
					"id": 329,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 329,
						"name": "DOMAttributes.onInvalid"
					}
				},
				{
					"id": 330,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 330,
						"name": "DOMAttributes.onInvalidCapture"
					}
				},
				{
					"id": 335,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1394,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 335,
						"name": "DOMAttributes.onKeyDown"
					}
				},
				{
					"id": 336,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 336,
						"name": "DOMAttributes.onKeyDownCapture"
					}
				},
				{
					"id": 337,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1396,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 337,
						"name": "DOMAttributes.onKeyPress"
					}
				},
				{
					"id": 338,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1397,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 338,
						"name": "DOMAttributes.onKeyPressCapture"
					}
				},
				{
					"id": 339,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 339,
						"name": "DOMAttributes.onKeyUp"
					}
				},
				{
					"id": 340,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 340,
						"name": "DOMAttributes.onKeyUpCapture"
					}
				},
				{
					"id": 331,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1388,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 331,
						"name": "DOMAttributes.onLoad"
					}
				},
				{
					"id": 332,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1389,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 332,
						"name": "DOMAttributes.onLoadCapture"
					}
				},
				{
					"id": 359,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 359,
						"name": "DOMAttributes.onLoadStart"
					}
				},
				{
					"id": 360,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 360,
						"name": "DOMAttributes.onLoadStartCapture"
					}
				},
				{
					"id": 355,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1416,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 355,
						"name": "DOMAttributes.onLoadedData"
					}
				},
				{
					"id": 356,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1417,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 356,
						"name": "DOMAttributes.onLoadedDataCapture"
					}
				},
				{
					"id": 357,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 357,
						"name": "DOMAttributes.onLoadedMetadata"
					}
				},
				{
					"id": 358,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 358,
						"name": "DOMAttributes.onLoadedMetadataCapture"
					}
				},
				{
					"id": 449,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1518,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 449,
						"name": "DOMAttributes.onLostPointerCapture"
					}
				},
				{
					"id": 450,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1519,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 450,
						"name": "DOMAttributes.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 409,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 409,
						"name": "DOMAttributes.onMouseDown"
					}
				},
				{
					"id": 410,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 410,
						"name": "DOMAttributes.onMouseDownCapture"
					}
				},
				{
					"id": 411,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 411,
						"name": "DOMAttributes.onMouseEnter"
					}
				},
				{
					"id": 412,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 412,
						"name": "DOMAttributes.onMouseLeave"
					}
				},
				{
					"id": 413,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 413,
						"name": "DOMAttributes.onMouseMove"
					}
				},
				{
					"id": 414,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 414,
						"name": "DOMAttributes.onMouseMoveCapture"
					}
				},
				{
					"id": 415,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 415,
						"name": "DOMAttributes.onMouseOut"
					}
				},
				{
					"id": 416,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 416,
						"name": "DOMAttributes.onMouseOutCapture"
					}
				},
				{
					"id": 417,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1480,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 417,
						"name": "DOMAttributes.onMouseOver"
					}
				},
				{
					"id": 418,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1481,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 418,
						"name": "DOMAttributes.onMouseOverCapture"
					}
				},
				{
					"id": 419,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 419,
						"name": "DOMAttributes.onMouseUp"
					}
				},
				{
					"id": 420,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 420,
						"name": "DOMAttributes.onMouseUpCapture"
					}
				},
				{
					"id": 307,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1356,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 307,
						"name": "DOMAttributes.onPaste"
					}
				},
				{
					"id": 308,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1357,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 308,
						"name": "DOMAttributes.onPasteCapture"
					}
				},
				{
					"id": 361,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1422,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 361,
						"name": "DOMAttributes.onPause"
					}
				},
				{
					"id": 362,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1423,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 362,
						"name": "DOMAttributes.onPauseCapture"
					}
				},
				{
					"id": 363,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 363,
						"name": "DOMAttributes.onPlay"
					}
				},
				{
					"id": 364,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 364,
						"name": "DOMAttributes.onPlayCapture"
					}
				},
				{
					"id": 365,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1426,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 365,
						"name": "DOMAttributes.onPlaying"
					}
				},
				{
					"id": 366,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 366,
						"name": "DOMAttributes.onPlayingCapture"
					}
				},
				{
					"id": 437,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 437,
						"name": "DOMAttributes.onPointerCancel"
					}
				},
				{
					"id": 438,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 438,
						"name": "DOMAttributes.onPointerCancelCapture"
					}
				},
				{
					"id": 431,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1500,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 431,
						"name": "DOMAttributes.onPointerDown"
					}
				},
				{
					"id": 432,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 432,
						"name": "DOMAttributes.onPointerDownCapture"
					}
				},
				{
					"id": 439,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 439,
						"name": "DOMAttributes.onPointerEnter"
					}
				},
				{
					"id": 440,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 440,
						"name": "DOMAttributes.onPointerEnterCapture"
					}
				},
				{
					"id": 441,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 441,
						"name": "DOMAttributes.onPointerLeave"
					}
				},
				{
					"id": 442,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 442,
						"name": "DOMAttributes.onPointerLeaveCapture"
					}
				},
				{
					"id": 433,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 433,
						"name": "DOMAttributes.onPointerMove"
					}
				},
				{
					"id": 434,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 434,
						"name": "DOMAttributes.onPointerMoveCapture"
					}
				},
				{
					"id": 445,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 445,
						"name": "DOMAttributes.onPointerOut"
					}
				},
				{
					"id": 446,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 446,
						"name": "DOMAttributes.onPointerOutCapture"
					}
				},
				{
					"id": 443,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 443,
						"name": "DOMAttributes.onPointerOver"
					}
				},
				{
					"id": 444,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 444,
						"name": "DOMAttributes.onPointerOverCapture"
					}
				},
				{
					"id": 435,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 435,
						"name": "DOMAttributes.onPointerUp"
					}
				},
				{
					"id": 436,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 436,
						"name": "DOMAttributes.onPointerUpCapture"
					}
				},
				{
					"id": 367,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1428,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 367,
						"name": "DOMAttributes.onProgress"
					}
				},
				{
					"id": 368,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 368,
						"name": "DOMAttributes.onProgressCapture"
					}
				},
				{
					"id": 369,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 369,
						"name": "DOMAttributes.onRateChange"
					}
				},
				{
					"id": 370,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 370,
						"name": "DOMAttributes.onRateChangeCapture"
					}
				},
				{
					"id": 325,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1380,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 325,
						"name": "DOMAttributes.onReset"
					}
				},
				{
					"id": 326,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1381,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 326,
						"name": "DOMAttributes.onResetCapture"
					}
				},
				{
					"id": 451,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1522,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 451,
						"name": "DOMAttributes.onScroll"
					}
				},
				{
					"id": 452,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1523,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 452,
						"name": "DOMAttributes.onScrollCapture"
					}
				},
				{
					"id": 371,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1432,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 371,
						"name": "DOMAttributes.onSeeked"
					}
				},
				{
					"id": 372,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1433,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 372,
						"name": "DOMAttributes.onSeekedCapture"
					}
				},
				{
					"id": 373,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 373,
						"name": "DOMAttributes.onSeeking"
					}
				},
				{
					"id": 374,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 374,
						"name": "DOMAttributes.onSeekingCapture"
					}
				},
				{
					"id": 421,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1486,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 421,
						"name": "DOMAttributes.onSelect"
					}
				},
				{
					"id": 422,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 422,
						"name": "DOMAttributes.onSelectCapture"
					}
				},
				{
					"id": 375,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 375,
						"name": "DOMAttributes.onStalled"
					}
				},
				{
					"id": 376,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 376,
						"name": "DOMAttributes.onStalledCapture"
					}
				},
				{
					"id": 327,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 327,
						"name": "DOMAttributes.onSubmit"
					}
				},
				{
					"id": 328,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 328,
						"name": "DOMAttributes.onSubmitCapture"
					}
				},
				{
					"id": 377,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 377,
						"name": "DOMAttributes.onSuspend"
					}
				},
				{
					"id": 378,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 378,
						"name": "DOMAttributes.onSuspendCapture"
					}
				},
				{
					"id": 379,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 379,
						"name": "DOMAttributes.onTimeUpdate"
					}
				},
				{
					"id": 380,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 380,
						"name": "DOMAttributes.onTimeUpdateCapture"
					}
				},
				{
					"id": 423,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1490,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 423,
						"name": "DOMAttributes.onTouchCancel"
					}
				},
				{
					"id": 424,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 424,
						"name": "DOMAttributes.onTouchCancelCapture"
					}
				},
				{
					"id": 425,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 425,
						"name": "DOMAttributes.onTouchEnd"
					}
				},
				{
					"id": 426,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 426,
						"name": "DOMAttributes.onTouchEndCapture"
					}
				},
				{
					"id": 427,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 427,
						"name": "DOMAttributes.onTouchMove"
					}
				},
				{
					"id": 428,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 428,
						"name": "DOMAttributes.onTouchMoveCapture"
					}
				},
				{
					"id": 429,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 429,
						"name": "DOMAttributes.onTouchStart"
					}
				},
				{
					"id": 430,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 430,
						"name": "DOMAttributes.onTouchStartCapture"
					}
				},
				{
					"id": 461,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1538,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 461,
						"name": "DOMAttributes.onTransitionEnd"
					}
				},
				{
					"id": 462,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 462,
						"name": "DOMAttributes.onTransitionEndCapture"
					}
				},
				{
					"id": 381,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 381,
						"name": "DOMAttributes.onVolumeChange"
					}
				},
				{
					"id": 382,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 382,
						"name": "DOMAttributes.onVolumeChangeCapture"
					}
				},
				{
					"id": 383,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 383,
						"name": "DOMAttributes.onWaiting"
					}
				},
				{
					"id": 384,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 384,
						"name": "DOMAttributes.onWaitingCapture"
					}
				},
				{
					"id": 453,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1526,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 453,
						"name": "DOMAttributes.onWheel"
					}
				},
				{
					"id": 454,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 454,
						"name": "DOMAttributes.onWheelCapture"
					}
				},
				{
					"id": 221,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1758,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 221,
						"name": "HTMLAttributes.placeholder"
					}
				},
				{
					"id": 233,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1776,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 233,
						"name": "HTMLAttributes.prefix"
					}
				},
				{
					"id": 234,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1777,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 234,
						"name": "HTMLAttributes.property"
					}
				},
				{
					"id": 228,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1767,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 228,
						"name": "HTMLAttributes.radioGroup"
					}
				},
				{
					"id": 235,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1778,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 235,
						"name": "HTMLAttributes.resource"
					}
				},
				{
					"id": 247,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1792,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 247,
						"name": "HTMLAttributes.results"
					}
				},
				{
					"id": 229,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1770,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 229,
						"name": "HTMLAttributes.role"
					}
				},
				{
					"id": 248,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1793,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 248,
						"name": "HTMLAttributes.security"
					}
				},
				{
					"id": 222,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1759,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 222,
						"name": "HTMLAttributes.slot"
					}
				},
				{
					"id": 223,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1760,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 223,
						"name": "HTMLAttributes.spellCheck"
					}
				},
				{
					"id": 224,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1761,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 224,
						"name": "HTMLAttributes.style"
					}
				},
				{
					"id": 206,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/Label/index.tsx",
							"line": 6,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 210,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1745,
							"character": 38
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 210,
						"name": "HTMLAttributes.suppressContentEditableWarning"
					}
				},
				{
					"id": 211,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1746,
							"character": 32
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 211,
						"name": "HTMLAttributes.suppressHydrationWarning"
					}
				},
				{
					"id": 225,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1762,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 225,
						"name": "HTMLAttributes.tabIndex"
					}
				},
				{
					"id": 226,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1763,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 226,
						"name": "HTMLAttributes.title"
					}
				},
				{
					"id": 227,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1764,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "yes"
							},
							{
								"type": "stringLiteral",
								"value": "no"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 227,
						"name": "HTMLAttributes.translate"
					}
				},
				{
					"id": 236,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1779,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 236,
						"name": "HTMLAttributes.typeof"
					}
				},
				{
					"id": 249,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1794,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "on"
							},
							{
								"type": "stringLiteral",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 249,
						"name": "HTMLAttributes.unselectable"
					}
				},
				{
					"id": 237,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1780,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 237,
						"name": "HTMLAttributes.vocab"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						230,
						212,
						252,
						253,
						254,
						255,
						256,
						257,
						258,
						259,
						260,
						261,
						262,
						263,
						264,
						265,
						266,
						267,
						268,
						269,
						270,
						271,
						272,
						273,
						274,
						275,
						276,
						277,
						278,
						279,
						280,
						281,
						282,
						283,
						284,
						285,
						286,
						287,
						288,
						289,
						290,
						291,
						292,
						293,
						294,
						295,
						296,
						297,
						298,
						299,
						238,
						239,
						240,
						207,
						213,
						241,
						214,
						215,
						300,
						231,
						208,
						209,
						216,
						217,
						218,
						219,
						232,
						250,
						251,
						245,
						242,
						246,
						243,
						244,
						220,
						341,
						342,
						457,
						458,
						459,
						460,
						455,
						456,
						385,
						386,
						321,
						322,
						317,
						318,
						343,
						344,
						345,
						346,
						319,
						320,
						387,
						388,
						309,
						310,
						311,
						312,
						313,
						314,
						389,
						390,
						303,
						304,
						305,
						306,
						391,
						392,
						393,
						394,
						395,
						396,
						397,
						398,
						399,
						400,
						401,
						402,
						403,
						404,
						405,
						406,
						407,
						408,
						347,
						348,
						349,
						350,
						351,
						352,
						353,
						354,
						333,
						334,
						315,
						316,
						447,
						448,
						323,
						324,
						329,
						330,
						335,
						336,
						337,
						338,
						339,
						340,
						331,
						332,
						359,
						360,
						355,
						356,
						357,
						358,
						449,
						450,
						409,
						410,
						411,
						412,
						413,
						414,
						415,
						416,
						417,
						418,
						419,
						420,
						307,
						308,
						361,
						362,
						363,
						364,
						365,
						366,
						437,
						438,
						431,
						432,
						439,
						440,
						441,
						442,
						433,
						434,
						445,
						446,
						443,
						444,
						435,
						436,
						367,
						368,
						369,
						370,
						325,
						326,
						451,
						452,
						371,
						372,
						373,
						374,
						421,
						422,
						375,
						376,
						327,
						328,
						377,
						378,
						379,
						380,
						423,
						424,
						425,
						426,
						427,
						428,
						429,
						430,
						461,
						462,
						381,
						382,
						383,
						384,
						453,
						454,
						221,
						233,
						234,
						228,
						235,
						247,
						229,
						248,
						222,
						223,
						224,
						206,
						210,
						211,
						225,
						226,
						227,
						236,
						249,
						237
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/Label/index.tsx",
					"line": 5,
					"character": 20
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "HTMLLabelElement"
						}
					],
					"name": "HTMLAttributes"
				}
			]
		},
		{
			"id": 3157,
			"name": "LoaderProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3162,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Main container className for css classes ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Loader/index.tsx",
							"line": 26,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3160,
					"name": "isInline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If the loader is inline. It will render a small white animated circle to be used inside buttons or simillar elements."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Loader/index.tsx",
							"line": 18,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 3159,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Loading message, default: 'Loading ...'"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Loader/index.tsx",
							"line": 14,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3161,
					"name": "strokeWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Width of the SVG animated circle stroke."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Loader/index.tsx",
							"line": 22,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3158,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object for the main container and included components."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Loader/index.tsx",
							"line": 10,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 3163,
						"name": "LoaderStyles"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3162,
						3160,
						3159,
						3161,
						3158
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Loader/index.tsx",
					"line": 6,
					"character": 21
				}
			]
		},
		{
			"id": 3163,
			"name": "LoaderStyles",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3223,
					"name": "active",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 59,
						"name": "Events.active"
					}
				},
				{
					"id": 3175,
					"name": "background",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the background css prop.<br/>\nYou can pass a single string with a color name or an object with color name opacity and bg size.",
						"tags": [
							{
								"tag": "example",
								"text": "```{background: 'red'}```"
							},
							{
								"tag": "example",
								"text": "```{background: {color: 'red', opacity: '20', size: 'cover'}}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 274,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 184,
								"name": "Colors"
							},
							{
								"type": "reference",
								"id": 61,
								"name": "Background"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 11,
						"name": "Utility.background"
					}
				},
				{
					"id": 3197,
					"name": "border",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 307,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 67,
						"name": "Border"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 33,
						"name": "Utility.border"
					}
				},
				{
					"id": 3170,
					"name": "cursor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the cursor css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{cursor: 'pointer'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 245,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "default"
							},
							{
								"type": "stringLiteral",
								"value": "pointer"
							},
							{
								"type": "stringLiteral",
								"value": "wait"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "not-allowed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 6,
						"name": "Utility.cursor"
					}
				},
				{
					"id": 3167,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the display css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 211,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "hidden"
							},
							{
								"type": "stringLiteral",
								"value": "block"
							},
							{
								"type": "stringLiteral",
								"value": "inline-block"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "flex"
							},
							{
								"type": "stringLiteral",
								"value": "inline-flex"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "inline-grid"
							},
							{
								"type": "stringLiteral",
								"value": "table"
							},
							{
								"type": "stringLiteral",
								"value": "table-caption"
							},
							{
								"type": "stringLiteral",
								"value": "table-cell"
							},
							{
								"type": "stringLiteral",
								"value": "flow-root"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3,
						"name": "Utility.display"
					}
				},
				{
					"id": 3168,
					"name": "flex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the flex css prop.<br/>\nHere you can pass all flex props for generating flex utility classes, <br/>\nRequires a display: 'flex' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex', flex: {direction: 'column', align: 'center', justify: 'center', flex: 'auto' }}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 231,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 97,
						"name": "Flex"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 4,
						"name": "Utility.flex"
					}
				},
				{
					"id": 3224,
					"name": "focus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 366,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 60,
						"name": "Events.focus"
					}
				},
				{
					"id": 3177,
					"name": "font",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-weight, font-family, font-style, font antialiasing css props.<br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{font: {weight: 'semibold', family: 'sans', style: 'italic', smoothing: 'antialiased'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 287,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 92,
						"name": "Font"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 13,
						"name": "Utility.font"
					}
				},
				{
					"id": 3169,
					"name": "grid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the grid css prop.<br/>\nHere you can pass all grid props for generating grid utility classes, <br/>\nRequires a display: 'grid' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'grid', grid: {cols: '4', gap: '4' }```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 239,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 103,
						"name": "Grid"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 5,
						"name": "Utility.grid"
					}
				},
				{
					"id": 3172,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the height css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{height: 'full'}```"
							},
							{
								"tag": "example",
								"text": "```{height: '64'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 258,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"height\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 8,
						"name": "Utility.height"
					}
				},
				{
					"id": 3222,
					"name": "hover",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 364,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 58,
						"name": "Events.hover"
					}
				},
				{
					"id": 3220,
					"name": "lg",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 375,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 56,
						"name": "MediaQuery.lg"
					}
				},
				{
					"id": 3178,
					"name": "margin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the margin css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{margin: '4'}```"
							},
							{
								"tag": "example",
								"text": "```{margin: ['4','2','4','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 294,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3179,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3186,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 102
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3182,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 49
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3183,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 64
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3181,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 32
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3180,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3184,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 76
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3185,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 88
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3186,
												3182,
												3183,
												3181,
												3180,
												3184,
												3185
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 14,
						"name": "Utility.margin"
					}
				},
				{
					"id": 3174,
					"name": "maxHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxHeight css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxHeight: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 268,
							"character": 11
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxHeight\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 10,
						"name": "Utility.maxHeight"
					}
				},
				{
					"id": 3173,
					"name": "maxWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxWidth css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxWidth: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 263,
							"character": 10
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxWidth\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 9,
						"name": "Utility.maxWidth"
					}
				},
				{
					"id": 3219,
					"name": "md",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 374,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 55,
						"name": "MediaQuery.md"
					}
				},
				{
					"id": 3165,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles object for the message after the svg."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Loader/index.tsx",
							"line": 37,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 3196,
					"name": "opacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the opacity css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{opacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 306,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 188,
						"name": "Opacity"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 32,
						"name": "Utility.opacity"
					}
				},
				{
					"id": 3213,
					"name": "overflow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for overflow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{overflow: {x: 'hidden'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 357,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3214,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3217,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 44
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 3215,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 3216,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3217,
												3215,
												3216
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 49,
						"name": "Utility.overflow"
					}
				},
				{
					"id": 3187,
					"name": "padding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the padding css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{padding: '3'}```"
							},
							{
								"tag": "example",
								"text": "```{padding: ['6','2','6','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 301,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3188,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3195,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 109
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3191,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 52
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3192,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 68
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3190,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3189,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3193,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 81
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3194,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 94
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3195,
												3191,
												3192,
												3190,
												3189,
												3193,
												3194
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 23,
						"name": "Utility.padding"
					}
				},
				{
					"id": 3201,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '400'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 323,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3202,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3203,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 324,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 184,
												"name": "Colors"
											}
										},
										{
											"id": 3204,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 325,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"id": 185,
												"name": "ColorVariants"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3203,
												3204
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 37,
						"name": "Utility.placeholder"
					}
				},
				{
					"id": 3205,
					"name": "placeholderOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color opacity.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '700',  placeholderOpacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 331,
							"character": 20
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"placeholderOpacity\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 41,
						"name": "Utility.placeholderOpacity"
					}
				},
				{
					"id": 3209,
					"name": "placement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for position placement.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute', placement: 'inset-0'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 351,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3210,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3212,
											"name": "inset",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 42
												}
											],
											"type": {
												"type": "reference",
												"id": 197,
												"name": "Inset"
											}
										},
										{
											"id": 3211,
											"name": "position",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 196,
												"name": "Placement"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3212,
												3211
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 45,
						"name": "Utility.placement"
					}
				},
				{
					"id": 3200,
					"name": "pointerEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the all pointer events.",
						"tags": [
							{
								"tag": "example",
								"text": "```{pointerEvents: 'none'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 318,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "auto"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 36,
						"name": "Utility.pointerEvents"
					}
				},
				{
					"id": 3166,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the position css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 205,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "static"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							},
							{
								"type": "stringLiteral",
								"value": "absolute"
							},
							{
								"type": "stringLiteral",
								"value": "relative"
							},
							{
								"type": "stringLiteral",
								"value": "sticky"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2,
						"name": "Utility.position"
					}
				},
				{
					"id": 3207,
					"name": "rounded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined border radius classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{rounded: 'full'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 341,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 193,
								"name": "BorderRadius"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"name": "BorderRadius"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 43,
						"name": "Utility.rounded"
					}
				},
				{
					"id": 3206,
					"name": "shadow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined box shadow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{shadow: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 336,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"boxShadow\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 42,
						"name": "Utility.shadow"
					}
				},
				{
					"id": 3218,
					"name": "sm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 373,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 54,
						"name": "MediaQuery.sm"
					}
				},
				{
					"id": 3198,
					"name": "space",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 308,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 77,
						"name": "Space"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 34,
						"name": "Utility.space"
					}
				},
				{
					"id": 3164,
					"name": "svg",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles object for the animate SVG inside the loader component."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Loader/index.tsx",
							"line": 33,
							"character": 5
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 3199,
					"name": "table",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the table columns widths.",
						"tags": [
							{
								"tag": "example",
								"text": "```{table: 'auto'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 313,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 35,
						"name": "Utility.table"
					}
				},
				{
					"id": 3176,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-size, color, color-opacity, line-height, text-align, ... css props. <br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{text: {size: 'lg'} }```"
							},
							{
								"tag": "example",
								"text": "```{text: {size: 'xl', color: 'blue-500', leading: 'tight', align:'center'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 281,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 80,
						"name": "Text"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 12,
						"name": "Utility.text"
					}
				},
				{
					"id": 3171,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the width css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{width: '64'}```"
							},
							{
								"tag": "example",
								"text": "```{width: '1/2'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 252,
							"character": 7
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"width\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 7,
						"name": "Utility.width"
					}
				},
				{
					"id": 3221,
					"name": "xl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 376,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 57,
						"name": "MediaQuery.xl"
					}
				},
				{
					"id": 3208,
					"name": "zIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined z-index classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{zIndex: '60'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 346,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"zIndex\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 44,
						"name": "Utility.zIndex"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3223,
						3175,
						3197,
						3170,
						3167,
						3168,
						3224,
						3177,
						3169,
						3172,
						3222,
						3220,
						3178,
						3174,
						3173,
						3219,
						3165,
						3196,
						3213,
						3187,
						3201,
						3205,
						3209,
						3200,
						3166,
						3207,
						3206,
						3218,
						3198,
						3164,
						3199,
						3176,
						3171,
						3221,
						3208
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Loader/index.tsx",
					"line": 29,
					"character": 22
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1,
					"name": "Styles"
				}
			]
		},
		{
			"id": 179,
			"name": "MediaQuery",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Interface holder for all predefined media query prefixes.",
				"tags": [
					{
						"tag": "example",
						"text": "```{md: {text: {size: 'sm'}}}```\n"
					}
				]
			},
			"children": [
				{
					"id": 182,
					"name": "lg",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 375,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					}
				},
				{
					"id": 181,
					"name": "md",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 374,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					}
				},
				{
					"id": 180,
					"name": "sm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 373,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					}
				},
				{
					"id": 183,
					"name": "xl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 376,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						182,
						181,
						180,
						183
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 372,
					"character": 27
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1,
					"name": "Styles"
				}
			]
		},
		{
			"id": 3069,
			"name": "ModalProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3079,
					"name": "cancelText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Text for the cancel button title in the bottom left"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Modal/index.tsx",
							"line": 48,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3078,
					"name": "closeText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Text for the close button title in the top right"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Modal/index.tsx",
							"line": 44,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3076,
					"name": "confirmDisabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Disable or enable confirm button"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Modal/index.tsx",
							"line": 36,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 3077,
					"name": "confirmText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Text for the submit button in the bottom right"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Modal/index.tsx",
							"line": 40,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3073,
					"name": "headline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Header title of the modal"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Modal/index.tsx",
							"line": 24,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3075,
					"name": "hideButtons",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Will hide or show the modal buttons"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Modal/index.tsx",
							"line": 32,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 3072,
					"name": "isShown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Will show or hide the modal"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Modal/index.tsx",
							"line": 20,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 3071,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Header subtitle of the modal"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Modal/index.tsx",
							"line": 16,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3083,
					"name": "onCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A function that will trigger on Cancel"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Modal/index.tsx",
							"line": 56,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3084,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3085,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3080,
					"name": "onConfirm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A function that will trigger on submit"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Modal/index.tsx",
							"line": 52,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3081,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3082,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3074,
					"name": "showCloseButton",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Show or hide the X button on the top right of the modal"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Modal/index.tsx",
							"line": 28,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 3070,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object for the main container and included components."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Modal/index.tsx",
							"line": 12,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 3086,
						"name": "ModalStyles"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3079,
						3078,
						3076,
						3077,
						3073,
						3075,
						3072,
						3071,
						3083,
						3080,
						3074,
						3070
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Modal/index.tsx",
					"line": 8,
					"character": 20
				}
			]
		},
		{
			"id": 3086,
			"name": "ModalStyles",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3150,
					"name": "active",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 59,
						"name": "Events.active"
					}
				},
				{
					"id": 3089,
					"name": "backdrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/Modal/index.tsx",
							"line": 62,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 3102,
					"name": "background",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the background css prop.<br/>\nYou can pass a single string with a color name or an object with color name opacity and bg size.",
						"tags": [
							{
								"tag": "example",
								"text": "```{background: 'red'}```"
							},
							{
								"tag": "example",
								"text": "```{background: {color: 'red', opacity: '20', size: 'cover'}}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 274,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 184,
								"name": "Colors"
							},
							{
								"type": "reference",
								"id": 61,
								"name": "Background"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 11,
						"name": "Utility.background"
					}
				},
				{
					"id": 3124,
					"name": "border",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 307,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 67,
						"name": "Border"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 33,
						"name": "Utility.border"
					}
				},
				{
					"id": 3088,
					"name": "button",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/Modal/index.tsx",
							"line": 61,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 3097,
					"name": "cursor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the cursor css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{cursor: 'pointer'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 245,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "default"
							},
							{
								"type": "stringLiteral",
								"value": "pointer"
							},
							{
								"type": "stringLiteral",
								"value": "wait"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "not-allowed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 6,
						"name": "Utility.cursor"
					}
				},
				{
					"id": 3094,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the display css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 211,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "hidden"
							},
							{
								"type": "stringLiteral",
								"value": "block"
							},
							{
								"type": "stringLiteral",
								"value": "inline-block"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "flex"
							},
							{
								"type": "stringLiteral",
								"value": "inline-flex"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "inline-grid"
							},
							{
								"type": "stringLiteral",
								"value": "table"
							},
							{
								"type": "stringLiteral",
								"value": "table-caption"
							},
							{
								"type": "stringLiteral",
								"value": "table-cell"
							},
							{
								"type": "stringLiteral",
								"value": "flow-root"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3,
						"name": "Utility.display"
					}
				},
				{
					"id": 3095,
					"name": "flex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the flex css prop.<br/>\nHere you can pass all flex props for generating flex utility classes, <br/>\nRequires a display: 'flex' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex', flex: {direction: 'column', align: 'center', justify: 'center', flex: 'auto' }}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 231,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 97,
						"name": "Flex"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 4,
						"name": "Utility.flex"
					}
				},
				{
					"id": 3151,
					"name": "focus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 366,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 60,
						"name": "Events.focus"
					}
				},
				{
					"id": 3104,
					"name": "font",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-weight, font-family, font-style, font antialiasing css props.<br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{font: {weight: 'semibold', family: 'sans', style: 'italic', smoothing: 'antialiased'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 287,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 92,
						"name": "Font"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 13,
						"name": "Utility.font"
					}
				},
				{
					"id": 3096,
					"name": "grid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the grid css prop.<br/>\nHere you can pass all grid props for generating grid utility classes, <br/>\nRequires a display: 'grid' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'grid', grid: {cols: '4', gap: '4' }```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 239,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 103,
						"name": "Grid"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 5,
						"name": "Utility.grid"
					}
				},
				{
					"id": 3091,
					"name": "headline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/Modal/index.tsx",
							"line": 64,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 3099,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the height css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{height: 'full'}```"
							},
							{
								"tag": "example",
								"text": "```{height: '64'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 258,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"height\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 8,
						"name": "Utility.height"
					}
				},
				{
					"id": 3149,
					"name": "hover",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 364,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 58,
						"name": "Events.hover"
					}
				},
				{
					"id": 3090,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/Modal/index.tsx",
							"line": 63,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 3147,
					"name": "lg",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 375,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 56,
						"name": "MediaQuery.lg"
					}
				},
				{
					"id": 3105,
					"name": "margin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the margin css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{margin: '4'}```"
							},
							{
								"tag": "example",
								"text": "```{margin: ['4','2','4','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 294,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3106,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3113,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 102
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3109,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 49
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3110,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 64
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3108,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 32
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3107,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3111,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 76
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3112,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 88
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3113,
												3109,
												3110,
												3108,
												3107,
												3111,
												3112
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 14,
						"name": "Utility.margin"
					}
				},
				{
					"id": 3101,
					"name": "maxHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxHeight css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxHeight: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 268,
							"character": 11
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxHeight\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 10,
						"name": "Utility.maxHeight"
					}
				},
				{
					"id": 3100,
					"name": "maxWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxWidth css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxWidth: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 263,
							"character": 10
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxWidth\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 9,
						"name": "Utility.maxWidth"
					}
				},
				{
					"id": 3146,
					"name": "md",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 374,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 55,
						"name": "MediaQuery.md"
					}
				},
				{
					"id": 3087,
					"name": "modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/Modal/index.tsx",
							"line": 60,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 3123,
					"name": "opacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the opacity css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{opacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 306,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 188,
						"name": "Opacity"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 32,
						"name": "Utility.opacity"
					}
				},
				{
					"id": 3140,
					"name": "overflow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for overflow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{overflow: {x: 'hidden'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 357,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3141,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3144,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 44
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 3142,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 3143,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3144,
												3142,
												3143
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 49,
						"name": "Utility.overflow"
					}
				},
				{
					"id": 3114,
					"name": "padding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the padding css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{padding: '3'}```"
							},
							{
								"tag": "example",
								"text": "```{padding: ['6','2','6','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 301,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3115,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3122,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 109
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3118,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 52
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3119,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 68
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3117,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3116,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3120,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 81
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3121,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 94
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3122,
												3118,
												3119,
												3117,
												3116,
												3120,
												3121
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 23,
						"name": "Utility.padding"
					}
				},
				{
					"id": 3128,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '400'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 323,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3129,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3130,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 324,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 184,
												"name": "Colors"
											}
										},
										{
											"id": 3131,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 325,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"id": 185,
												"name": "ColorVariants"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3130,
												3131
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 37,
						"name": "Utility.placeholder"
					}
				},
				{
					"id": 3132,
					"name": "placeholderOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color opacity.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '700',  placeholderOpacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 331,
							"character": 20
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"placeholderOpacity\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 41,
						"name": "Utility.placeholderOpacity"
					}
				},
				{
					"id": 3136,
					"name": "placement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for position placement.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute', placement: 'inset-0'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 351,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3137,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3139,
											"name": "inset",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 42
												}
											],
											"type": {
												"type": "reference",
												"id": 197,
												"name": "Inset"
											}
										},
										{
											"id": 3138,
											"name": "position",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 196,
												"name": "Placement"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3139,
												3138
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 45,
						"name": "Utility.placement"
					}
				},
				{
					"id": 3127,
					"name": "pointerEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the all pointer events.",
						"tags": [
							{
								"tag": "example",
								"text": "```{pointerEvents: 'none'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 318,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "auto"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 36,
						"name": "Utility.pointerEvents"
					}
				},
				{
					"id": 3093,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the position css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 205,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "static"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							},
							{
								"type": "stringLiteral",
								"value": "absolute"
							},
							{
								"type": "stringLiteral",
								"value": "relative"
							},
							{
								"type": "stringLiteral",
								"value": "sticky"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2,
						"name": "Utility.position"
					}
				},
				{
					"id": 3134,
					"name": "rounded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined border radius classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{rounded: 'full'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 341,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 193,
								"name": "BorderRadius"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"name": "BorderRadius"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 43,
						"name": "Utility.rounded"
					}
				},
				{
					"id": 3092,
					"name": "scrollbars",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/Modal/index.tsx",
							"line": 65,
							"character": 12
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 1,
								"name": "Styles"
							},
							{
								"type": "reference",
								"id": 2914,
								"name": "ScrollbarsStyles"
							}
						]
					}
				},
				{
					"id": 3133,
					"name": "shadow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined box shadow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{shadow: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 336,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"boxShadow\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 42,
						"name": "Utility.shadow"
					}
				},
				{
					"id": 3145,
					"name": "sm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 373,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 54,
						"name": "MediaQuery.sm"
					}
				},
				{
					"id": 3125,
					"name": "space",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 308,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 77,
						"name": "Space"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 34,
						"name": "Utility.space"
					}
				},
				{
					"id": 3126,
					"name": "table",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the table columns widths.",
						"tags": [
							{
								"tag": "example",
								"text": "```{table: 'auto'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 313,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 35,
						"name": "Utility.table"
					}
				},
				{
					"id": 3103,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-size, color, color-opacity, line-height, text-align, ... css props. <br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{text: {size: 'lg'} }```"
							},
							{
								"tag": "example",
								"text": "```{text: {size: 'xl', color: 'blue-500', leading: 'tight', align:'center'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 281,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 80,
						"name": "Text"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 12,
						"name": "Utility.text"
					}
				},
				{
					"id": 3098,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the width css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{width: '64'}```"
							},
							{
								"tag": "example",
								"text": "```{width: '1/2'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 252,
							"character": 7
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"width\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 7,
						"name": "Utility.width"
					}
				},
				{
					"id": 3148,
					"name": "xl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 376,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 57,
						"name": "MediaQuery.xl"
					}
				},
				{
					"id": 3135,
					"name": "zIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined z-index classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{zIndex: '60'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 346,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"zIndex\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 44,
						"name": "Utility.zIndex"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3150,
						3089,
						3102,
						3124,
						3088,
						3097,
						3094,
						3095,
						3151,
						3104,
						3096,
						3091,
						3099,
						3149,
						3090,
						3147,
						3105,
						3101,
						3100,
						3146,
						3087,
						3123,
						3140,
						3114,
						3128,
						3132,
						3136,
						3127,
						3093,
						3134,
						3092,
						3133,
						3145,
						3125,
						3126,
						3103,
						3098,
						3148,
						3135
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Modal/index.tsx",
					"line": 59,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1,
					"name": "Styles"
				}
			]
		},
		{
			"id": 468,
			"name": "Option",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 471,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Icon of the select option. Imported from carbon icons"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 20,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"name": "React.ReactNode"
					}
				},
				{
					"id": 470,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Text of the select option."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 16,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 469,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Value of the select option."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 12,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						471,
						470,
						469
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Select/index.tsx",
					"line": 8,
					"character": 23
				}
			]
		},
		{
			"id": 3233,
			"name": "PaginationProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3249,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Main container className for css classes ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Pagination/index.tsx",
							"line": 23,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3235,
					"name": "colors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Colors definition for the border, background colors of the select and color for the on focus of the inner elements."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Pagination/index.tsx",
							"line": 15,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3236,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3241,
											"name": "background",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/Pagination/index.tsx",
													"line": 17,
													"character": 14
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3242,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 3243,
																	"name": "color",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "src/components/complex/Pagination/index.tsx",
																			"line": 17,
																			"character": 24
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 184,
																		"name": "Colors"
																	}
																},
																{
																	"id": 3244,
																	"name": "variant",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "src/components/complex/Pagination/index.tsx",
																			"line": 17,
																			"character": 41
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 185,
																		"name": "ColorVariants"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		3243,
																		3244
																	]
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 3237,
											"name": "border",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/Pagination/index.tsx",
													"line": 16,
													"character": 10
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3238,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 3239,
																	"name": "color",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "src/components/complex/Pagination/index.tsx",
																			"line": 16,
																			"character": 20
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 184,
																		"name": "Colors"
																	}
																},
																{
																	"id": 3240,
																	"name": "variant",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "src/components/complex/Pagination/index.tsx",
																			"line": 16,
																			"character": 37
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 185,
																		"name": "ColorVariants"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		3239,
																		3240
																	]
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 3245,
											"name": "focus",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/Pagination/index.tsx",
													"line": 18,
													"character": 9
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3246,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 3247,
																	"name": "color",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "src/components/complex/Pagination/index.tsx",
																			"line": 18,
																			"character": 19
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 184,
																		"name": "Colors"
																	}
																},
																{
																	"id": 3248,
																	"name": "variant",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "src/components/complex/Pagination/index.tsx",
																			"line": 18,
																			"character": 36
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 185,
																		"name": "ColorVariants"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		3247,
																		3248
																	]
																}
															]
														}
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3241,
												3237,
												3245
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3250,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Will disable the pagination and all its elements ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Pagination/index.tsx",
							"line": 27,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 3254,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A function that will trigger on change, and return an object with {page, perPage} ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Pagination/index.tsx",
							"line": 43,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3255,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3256,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3257,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3258,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 3259,
																	"name": "page",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "src/components/complex/Pagination/index.tsx",
																			"line": 43,
																			"character": 23
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3260,
																	"name": "perPage",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "src/components/complex/Pagination/index.tsx",
																			"line": 43,
																			"character": 40
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		3259,
																		3260
																	]
																}
															],
															"sources": [
																{
																	"fileName": "src/components/complex/Pagination/index.tsx",
																	"line": 43,
																	"character": 16
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3253,
					"name": "page",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Initial page."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Pagination/index.tsx",
							"line": 39,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 3252,
					"name": "perPage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Initial items per page."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Pagination/index.tsx",
							"line": 35,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 3234,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object for the main container."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Pagination/index.tsx",
							"line": 11,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 3251,
					"name": "totalItems",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Total number of items to paginate."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Pagination/index.tsx",
							"line": 31,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3249,
						3235,
						3250,
						3254,
						3253,
						3252,
						3234,
						3251
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Pagination/index.tsx",
					"line": 7,
					"character": 25
				}
			]
		},
		{
			"id": 3261,
			"name": "PaginationState",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3265,
					"name": "page",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/Pagination/index.tsx",
							"line": 50,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3263,
					"name": "pages",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/Pagination/index.tsx",
							"line": 48,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3264,
					"name": "perPage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/Pagination/index.tsx",
							"line": 49,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3262,
					"name": "total",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/Pagination/index.tsx",
							"line": 47,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3265,
						3263,
						3264,
						3262
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Pagination/index.tsx",
					"line": 46,
					"character": 25
				}
			]
		},
		{
			"id": 3511,
			"name": "PanelProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3512,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles for the Panel of the tab."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Tabs/index.tsx",
							"line": 10,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3512
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Tabs/index.tsx",
					"line": 6,
					"character": 27
				}
			]
		},
		{
			"id": 2663,
			"name": "ProgressRingProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2666,
					"name": "borderWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Border width opf the progress circle."
					},
					"sources": [
						{
							"fileName": "src/components/simple/ProgressRing/index.tsx",
							"line": 18,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 2672,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Main container className for css classes ."
					},
					"sources": [
						{
							"fileName": "src/components/simple/ProgressRing/index.tsx",
							"line": 30,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 2668,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Main color"
					},
					"sources": [
						{
							"fileName": "src/components/simple/ProgressRing/index.tsx",
							"line": 26,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2669,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2670,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/simple/ProgressRing/index.tsx",
													"line": 26,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"id": 184,
												"name": "Colors"
											}
										},
										{
											"id": 2671,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/components/simple/ProgressRing/index.tsx",
													"line": 26,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 185,
												"name": "ColorVariants"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2670,
												2671
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2667,
					"name": "progress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "number from 0-100 for the total progress in %."
					},
					"sources": [
						{
							"fileName": "src/components/simple/ProgressRing/index.tsx",
							"line": 22,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 2665,
					"name": "radius",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Radius of the circle."
					},
					"sources": [
						{
							"fileName": "src/components/simple/ProgressRing/index.tsx",
							"line": 14,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 2664,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object, that will be parses into string of tailwind css classes from the object."
					},
					"sources": [
						{
							"fileName": "src/components/simple/ProgressRing/index.tsx",
							"line": 10,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2666,
						2672,
						2668,
						2667,
						2665,
						2664
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/ProgressRing/index.tsx",
					"line": 6,
					"character": 27
				}
			]
		},
		{
			"id": 2889,
			"name": "Radio",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2892,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/RadioGroup/index.tsx",
							"line": 29,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 2891,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/RadioGroup/index.tsx",
							"line": 28,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2890,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/RadioGroup/index.tsx",
							"line": 27,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2892,
						2891,
						2890
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/RadioGroup/index.tsx",
					"line": 26,
					"character": 15
				}
			]
		},
		{
			"id": 2893,
			"name": "RadioGroupProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2899,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Main container className for css classes ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/RadioGroup/index.tsx",
							"line": 56,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 2894,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "An array that will be used to render the radio group."
					},
					"sources": [
						{
							"fileName": "src/components/complex/RadioGroup/index.tsx",
							"line": 36,
							"character": 6
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 2889,
							"name": "Radio"
						}
					}
				},
				{
					"id": 2898,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Text for the description of the radio group."
					},
					"sources": [
						{
							"fileName": "src/components/complex/RadioGroup/index.tsx",
							"line": 52,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 2904,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Will disable the radio group"
					},
					"sources": [
						{
							"fileName": "src/components/complex/RadioGroup/index.tsx",
							"line": 68,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 2900,
					"name": "icons",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set the two icons fro the Radio in an object",
						"tags": [
							{
								"tag": "example",
								"text": "icons={{checked: 'RadioChecked', unchecked: 'Radio'}}\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/components/complex/RadioGroup/index.tsx",
							"line": 61,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2901,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2902,
											"name": "checked",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/RadioGroup/index.tsx",
													"line": 62,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2903,
											"name": "unchecked",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/RadioGroup/index.tsx",
													"line": 63,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2902,
												2903
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2897,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Text for the Label of the radio group."
					},
					"sources": [
						{
							"fileName": "src/components/complex/RadioGroup/index.tsx",
							"line": 48,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 2895,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "name for all radio inputs."
					},
					"sources": [
						{
							"fileName": "src/components/complex/RadioGroup/index.tsx",
							"line": 40,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2905,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A function that will trigger on change, and return an string with the selected radio value."
					},
					"sources": [
						{
							"fileName": "src/components/complex/RadioGroup/index.tsx",
							"line": 72,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2906,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2907,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2908,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2896,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object for the main container and included components."
					},
					"sources": [
						{
							"fileName": "src/components/complex/RadioGroup/index.tsx",
							"line": 44,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 2825,
						"name": "RadioGroupStyles"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2899,
						2894,
						2898,
						2904,
						2900,
						2897,
						2895,
						2905,
						2896
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/RadioGroup/index.tsx",
					"line": 32,
					"character": 25
				}
			]
		},
		{
			"id": 2825,
			"name": "RadioGroupStyles",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2887,
					"name": "active",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 59,
						"name": "Events.active"
					}
				},
				{
					"id": 2839,
					"name": "background",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the background css prop.<br/>\nYou can pass a single string with a color name or an object with color name opacity and bg size.",
						"tags": [
							{
								"tag": "example",
								"text": "```{background: 'red'}```"
							},
							{
								"tag": "example",
								"text": "```{background: {color: 'red', opacity: '20', size: 'cover'}}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 274,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 184,
								"name": "Colors"
							},
							{
								"type": "reference",
								"id": 61,
								"name": "Background"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 11,
						"name": "Utility.background"
					}
				},
				{
					"id": 2861,
					"name": "border",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 307,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 67,
						"name": "Border"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 33,
						"name": "Utility.border"
					}
				},
				{
					"id": 2834,
					"name": "cursor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the cursor css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{cursor: 'pointer'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 245,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "default"
							},
							{
								"type": "stringLiteral",
								"value": "pointer"
							},
							{
								"type": "stringLiteral",
								"value": "wait"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "not-allowed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 6,
						"name": "Utility.cursor"
					}
				},
				{
					"id": 2827,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles for the Text that will appear after the radio element as description for that element ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/RadioGroup/index.tsx",
							"line": 15,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 2831,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the display css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 211,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "hidden"
							},
							{
								"type": "stringLiteral",
								"value": "block"
							},
							{
								"type": "stringLiteral",
								"value": "inline-block"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "flex"
							},
							{
								"type": "stringLiteral",
								"value": "inline-flex"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "inline-grid"
							},
							{
								"type": "stringLiteral",
								"value": "table"
							},
							{
								"type": "stringLiteral",
								"value": "table-caption"
							},
							{
								"type": "stringLiteral",
								"value": "table-cell"
							},
							{
								"type": "stringLiteral",
								"value": "flow-root"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3,
						"name": "Utility.display"
					}
				},
				{
					"id": 2832,
					"name": "flex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the flex css prop.<br/>\nHere you can pass all flex props for generating flex utility classes, <br/>\nRequires a display: 'flex' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex', flex: {direction: 'column', align: 'center', justify: 'center', flex: 'auto' }}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 231,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 97,
						"name": "Flex"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 4,
						"name": "Utility.flex"
					}
				},
				{
					"id": 2888,
					"name": "focus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 366,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 60,
						"name": "Events.focus"
					}
				},
				{
					"id": 2841,
					"name": "font",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-weight, font-family, font-style, font antialiasing css props.<br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{font: {weight: 'semibold', family: 'sans', style: 'italic', smoothing: 'antialiased'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 287,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 92,
						"name": "Font"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 13,
						"name": "Utility.font"
					}
				},
				{
					"id": 2833,
					"name": "grid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the grid css prop.<br/>\nHere you can pass all grid props for generating grid utility classes, <br/>\nRequires a display: 'grid' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'grid', grid: {cols: '4', gap: '4' }```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 239,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 103,
						"name": "Grid"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 5,
						"name": "Utility.grid"
					}
				},
				{
					"id": 2836,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the height css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{height: 'full'}```"
							},
							{
								"tag": "example",
								"text": "```{height: '64'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 258,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"height\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 8,
						"name": "Utility.height"
					}
				},
				{
					"id": 2886,
					"name": "hover",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 364,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 58,
						"name": "Events.hover"
					}
				},
				{
					"id": 2828,
					"name": "input",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles for the Radio component ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/RadioGroup/index.tsx",
							"line": 19,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 2826,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles for the Label of the radio group ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/RadioGroup/index.tsx",
							"line": 11,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 2884,
					"name": "lg",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 375,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 56,
						"name": "MediaQuery.lg"
					}
				},
				{
					"id": 2842,
					"name": "margin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the margin css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{margin: '4'}```"
							},
							{
								"tag": "example",
								"text": "```{margin: ['4','2','4','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 294,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2843,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2850,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 102
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2846,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 49
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2847,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 64
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2845,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 32
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2844,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2848,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 76
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2849,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 88
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2850,
												2846,
												2847,
												2845,
												2844,
												2848,
												2849
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 14,
						"name": "Utility.margin"
					}
				},
				{
					"id": 2838,
					"name": "maxHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxHeight css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxHeight: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 268,
							"character": 11
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxHeight\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 10,
						"name": "Utility.maxHeight"
					}
				},
				{
					"id": 2837,
					"name": "maxWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxWidth css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxWidth: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 263,
							"character": 10
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxWidth\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 9,
						"name": "Utility.maxWidth"
					}
				},
				{
					"id": 2883,
					"name": "md",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 374,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 55,
						"name": "MediaQuery.md"
					}
				},
				{
					"id": 2860,
					"name": "opacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the opacity css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{opacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 306,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 188,
						"name": "Opacity"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 32,
						"name": "Utility.opacity"
					}
				},
				{
					"id": 2877,
					"name": "overflow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for overflow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{overflow: {x: 'hidden'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 357,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2878,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2881,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 44
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 2879,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 2880,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2881,
												2879,
												2880
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 49,
						"name": "Utility.overflow"
					}
				},
				{
					"id": 2851,
					"name": "padding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the padding css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{padding: '3'}```"
							},
							{
								"tag": "example",
								"text": "```{padding: ['6','2','6','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 301,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2852,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2859,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 109
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2855,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 52
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2856,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 68
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2854,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2853,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2857,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 81
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2858,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 94
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2859,
												2855,
												2856,
												2854,
												2853,
												2857,
												2858
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 23,
						"name": "Utility.padding"
					}
				},
				{
					"id": 2865,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '400'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 323,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2866,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2867,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 324,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 184,
												"name": "Colors"
											}
										},
										{
											"id": 2868,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 325,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"id": 185,
												"name": "ColorVariants"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2867,
												2868
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 37,
						"name": "Utility.placeholder"
					}
				},
				{
					"id": 2869,
					"name": "placeholderOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color opacity.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '700',  placeholderOpacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 331,
							"character": 20
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"placeholderOpacity\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 41,
						"name": "Utility.placeholderOpacity"
					}
				},
				{
					"id": 2873,
					"name": "placement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for position placement.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute', placement: 'inset-0'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 351,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2874,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2876,
											"name": "inset",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 42
												}
											],
											"type": {
												"type": "reference",
												"id": 197,
												"name": "Inset"
											}
										},
										{
											"id": 2875,
											"name": "position",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 196,
												"name": "Placement"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2876,
												2875
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 45,
						"name": "Utility.placement"
					}
				},
				{
					"id": 2864,
					"name": "pointerEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the all pointer events.",
						"tags": [
							{
								"tag": "example",
								"text": "```{pointerEvents: 'none'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 318,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "auto"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 36,
						"name": "Utility.pointerEvents"
					}
				},
				{
					"id": 2830,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the position css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 205,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "static"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							},
							{
								"type": "stringLiteral",
								"value": "absolute"
							},
							{
								"type": "stringLiteral",
								"value": "relative"
							},
							{
								"type": "stringLiteral",
								"value": "sticky"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2,
						"name": "Utility.position"
					}
				},
				{
					"id": 2829,
					"name": "radio",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles for the Parent component ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/RadioGroup/index.tsx",
							"line": 23,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 2871,
					"name": "rounded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined border radius classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{rounded: 'full'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 341,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 193,
								"name": "BorderRadius"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"name": "BorderRadius"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 43,
						"name": "Utility.rounded"
					}
				},
				{
					"id": 2870,
					"name": "shadow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined box shadow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{shadow: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 336,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"boxShadow\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 42,
						"name": "Utility.shadow"
					}
				},
				{
					"id": 2882,
					"name": "sm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 373,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 54,
						"name": "MediaQuery.sm"
					}
				},
				{
					"id": 2862,
					"name": "space",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 308,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 77,
						"name": "Space"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 34,
						"name": "Utility.space"
					}
				},
				{
					"id": 2863,
					"name": "table",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the table columns widths.",
						"tags": [
							{
								"tag": "example",
								"text": "```{table: 'auto'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 313,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 35,
						"name": "Utility.table"
					}
				},
				{
					"id": 2840,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-size, color, color-opacity, line-height, text-align, ... css props. <br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{text: {size: 'lg'} }```"
							},
							{
								"tag": "example",
								"text": "```{text: {size: 'xl', color: 'blue-500', leading: 'tight', align:'center'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 281,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 80,
						"name": "Text"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 12,
						"name": "Utility.text"
					}
				},
				{
					"id": 2835,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the width css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{width: '64'}```"
							},
							{
								"tag": "example",
								"text": "```{width: '1/2'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 252,
							"character": 7
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"width\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 7,
						"name": "Utility.width"
					}
				},
				{
					"id": 2885,
					"name": "xl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 376,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 57,
						"name": "MediaQuery.xl"
					}
				},
				{
					"id": 2872,
					"name": "zIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined z-index classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{zIndex: '60'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 346,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"zIndex\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 44,
						"name": "Utility.zIndex"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2887,
						2839,
						2861,
						2834,
						2827,
						2831,
						2832,
						2888,
						2841,
						2833,
						2836,
						2886,
						2828,
						2826,
						2884,
						2842,
						2838,
						2837,
						2883,
						2860,
						2877,
						2851,
						2865,
						2869,
						2873,
						2864,
						2830,
						2829,
						2871,
						2870,
						2882,
						2862,
						2863,
						2840,
						2835,
						2885,
						2872
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/RadioGroup/index.tsx",
					"line": 7,
					"character": 26
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1,
					"name": "Styles"
				}
			]
		},
		{
			"id": 1005,
			"name": "RadioProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1007,
					"name": "checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Checked state of the Radio."
					},
					"sources": [
						{
							"fileName": "src/components/simple/Radio/index.tsx",
							"line": 14,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 1006,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object, that will be parses into string of tailwind css classes from the object."
					},
					"sources": [
						{
							"fileName": "src/components/simple/Radio/index.tsx",
							"line": 10,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1007,
						1006
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/Radio/index.tsx",
					"line": 6,
					"character": 20
				}
			]
		},
		{
			"id": 3432,
			"name": "RangeSliderProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 3437,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "ReadonlyArray"
							}
						]
					}
				}
			],
			"children": [
				{
					"id": 3439,
					"name": "ariaLabel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "`aria-label` for screen-readers to apply to the thumb(s).",
						"text": "Use an array for more than one thumb.\nThe length of the array must match the number of thumbs in the `value` array.\n"
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 26,
							"character": 13
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "typeParameter",
							"name": "T",
							"constraint": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "ReadonlyArray"
									}
								]
							}
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "number"
						},
						"trueType": {
							"type": "intrinsic",
							"name": "string"
						},
						"falseType": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "ReadonlyArray"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3439,
						"name": "ReactSliderProps.ariaLabel"
					}
				},
				{
					"id": 3440,
					"name": "ariaValuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "`aria-valuetext` for screen-readers.",
						"text": "Can be a static string, or a function that returns a string:\n\n```\nstate => `Value: ${state.value}`\n```\n\n- `state.index` - the index of the thumb\n- `state.value` - the current value state\n- `state.valueNow` - the value of the thumb (i.e. aria-valuenow)\n"
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 41,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3441,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3442,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3443,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3444,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 3445,
																	"name": "index",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/react-slider/index.d.ts",
																			"line": 41,
																			"character": 45
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3446,
																	"name": "value",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/react-slider/index.d.ts",
																			"line": 41,
																			"character": 60
																		}
																	],
																	"type": {
																		"type": "typeParameter",
																		"name": "T",
																		"constraint": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "number"
																				},
																				{
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "ReadonlyArray"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 3447,
																	"name": "valueNow",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/react-slider/index.d.ts",
																			"line": 41,
																			"character": 73
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		3445,
																		3446,
																		3447
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/react-slider/index.d.ts",
																	"line": 41,
																	"character": 37
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "node_modules/@types/react-slider/index.d.ts",
											"line": 41,
											"character": 28
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3440,
						"name": "ReactSliderProps.ariaValuetext"
					}
				},
				{
					"id": 3438,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 18,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "undefined"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3438,
						"name": "ReactSliderProps.children"
					}
				},
				{
					"id": 3435,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Main container className for css classes ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/RangeSlider/index.tsx",
							"line": 39,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "ReactSliderProps.className"
					}
				},
				{
					"id": 3436,
					"name": "colors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Colors definition for the border, background colors of the select and color for the on focus of the inner elements."
					},
					"sources": [
						{
							"fileName": "src/components/complex/RangeSlider/index.tsx",
							"line": 43,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 3427,
						"name": "ColorsProp"
					}
				},
				{
					"id": 3448,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Determines the initial position(s) of the thumb(s) and the number of thumbs.",
						"text": "If a number is passed a slider with one thumb will be rendered.\nIf an array is passed each value will determine the position of one thumb.\nThe values in the array must be sorted.\n\nDon't pass a default value if the slider is controlled (i.e. if you already\nuse the `value` prop).\n",
						"tags": [
							{
								"tag": "default",
								"text": "0\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 62,
							"character": 16
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "stringLiteral",
								"value": "value"
							},
							"objectType": {
								"type": "intrinsic",
								"name": "this"
							}
						},
						"extendsType": {
							"type": "typeParameter",
							"name": "T",
							"constraint": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "ReadonlyArray"
									}
								]
							}
						},
						"trueType": {
							"type": "intrinsic",
							"name": "never"
						},
						"falseType": {
							"type": "typeParameter",
							"name": "T",
							"constraint": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "ReadonlyArray"
									}
								]
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3448,
						"name": "ReactSliderProps.defaultValue"
					}
				},
				{
					"id": 3449,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If `true` the thumbs can't be moved.",
						"tags": [
							{
								"tag": "default",
								"text": "false\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 69,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3449,
						"name": "ReactSliderProps.disabled"
					}
				},
				{
					"id": 3450,
					"name": "invert",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Inverts the slider.",
						"tags": [
							{
								"tag": "default",
								"text": "false\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 76,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3450,
						"name": "ReactSliderProps.invert"
					}
				},
				{
					"id": 3434,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Label text for the checkbox."
					},
					"sources": [
						{
							"fileName": "src/components/complex/RangeSlider/index.tsx",
							"line": 35,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3451,
					"name": "markClassName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The CSS class set on the marks.",
						"tags": [
							{
								"tag": "default",
								"text": "\"mark\"\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 83,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3451,
						"name": "ReactSliderProps.markClassName"
					}
				},
				{
					"id": 3452,
					"name": "marks",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Shows passed marks on the track, if `true` it shows all the marks;\nif an array of numbers it shows just the passed marks; if a number\nis passed it shows just the marks in that steps: like passing `3`\nshows the marks `3`, `6`, `9`.",
						"tags": [
							{
								"tag": "default",
								"text": "[]\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 93,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "ReadonlyArray"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3452,
						"name": "ReactSliderProps.marks"
					}
				},
				{
					"id": 3453,
					"name": "max",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The maximum value of the slider.",
						"tags": [
							{
								"tag": "default",
								"text": "100\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 100,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3453,
						"name": "ReactSliderProps.max"
					}
				},
				{
					"id": 3454,
					"name": "min",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The minimum value of the slider.",
						"tags": [
							{
								"tag": "default",
								"text": "0\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 107,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3454,
						"name": "ReactSliderProps.min"
					}
				},
				{
					"id": 3455,
					"name": "minDistance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The minimal distance between any pair of thumbs.\nMust be positive, but `0` means they can sit on top of each other.",
						"tags": [
							{
								"tag": "default",
								"text": "0\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 115,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3455,
						"name": "ReactSliderProps.minDistance"
					}
				},
				{
					"id": 3456,
					"name": "onAfterChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Callback called only after moving a thumb has ended. The callback\nwill only be called if the action resulted in a change.",
						"text": "- `value` - the result value, or values if the slider has multiple thumbs\n"
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 123,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3457,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3458,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3459,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "typeParameter",
														"name": "T",
														"constraint": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	],
																	"name": "ReadonlyArray"
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3456,
						"name": "ReactSliderProps.onAfterChange"
					}
				},
				{
					"id": 3460,
					"name": "onBeforeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Callback called before starting to move a thumb. The callback will\nonly be called if the action will result in a change.",
						"text": "- `value` - the initial value, or values if the slider has multiple thumbs\n"
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 131,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3461,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3462,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3463,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "typeParameter",
														"name": "T",
														"constraint": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	],
																	"name": "ReadonlyArray"
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3460,
						"name": "ReactSliderProps.onBeforeChange"
					}
				},
				{
					"id": 3464,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Callback called on every value change.",
						"text": "- `value` - the new value, or values if the slider has multiple thumbs\n"
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 138,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3465,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3466,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3467,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "typeParameter",
														"name": "T",
														"constraint": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	],
																	"name": "ReadonlyArray"
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3464,
						"name": "ReactSliderProps.onChange"
					}
				},
				{
					"id": 3468,
					"name": "onSliderClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Callback called when the the slider is clicked (thumb or tracks).",
						"text": "- `value` - the value at the clicked position\n"
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 145,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3469,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3470,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3471,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3468,
						"name": "ReactSliderProps.onSliderClick"
					}
				},
				{
					"id": 3472,
					"name": "orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Determines whether the slider moves horizontally (from left to right)\nor vertically (from top to bottom).",
						"tags": [
							{
								"tag": "default",
								"text": "\"horizontal\"\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 153,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "horizontal"
							},
							{
								"type": "stringLiteral",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3472,
						"name": "ReactSliderProps.orientation"
					}
				},
				{
					"id": 3473,
					"name": "pageFn",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The result of the function is the value to be added or subtracted\nwhen the `Page Up` or `Page Down` keys are pressed.",
						"text": "- `step` - the current step value\n",
						"tags": [
							{
								"tag": "default",
								"text": "step => step * 10\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 163,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3474,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3475,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3476,
													"name": "step",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3473,
						"name": "ReactSliderProps.pageFn"
					}
				},
				{
					"id": 3477,
					"name": "pearling",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If `true` the active thumb will push other thumbs within the constraints\nof `min`, `max`, `step` and `minDistance`.",
						"tags": [
							{
								"tag": "default",
								"text": "false\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 171,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3477,
						"name": "ReactSliderProps.pearling"
					}
				},
				{
					"id": 3478,
					"name": "renderMark",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Provide a custom render function for the mark node.",
						"text": "The render function will be passed one argument, an object with props that\nshould be added to your mark node.\n\n- `props` - props to be spread into your mark node\n",
						"tags": [
							{
								"tag": "default",
								"text": "props => <div {...props} />\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 183,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3479,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3480,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3481,
													"name": "props",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "HTMLSpanElement"
															}
														],
														"name": "HTMLPropsWithRefCallback"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Element"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3478,
						"name": "ReactSliderProps.renderMark"
					}
				},
				{
					"id": 3482,
					"name": "renderThumb",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Provide a custom render function for dynamic thumb content.",
						"text": "The render function will be passed two arguments, an object with props that\nshould be added to your thumb node, and an object with thumb and slider state.\n\n- `props` - props to be spread into your thumb node\n- `state.index` - the index of the thumb\n- `state.value` - the current value state\n- `state.valueNow` - the value of the thumb (i.e. `aria-valuenow`)\n",
						"tags": [
							{
								"tag": "default",
								"text": "props => <div {...props} />\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 198,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3483,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3484,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3485,
													"name": "props",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "HTMLDivElement"
															}
														],
														"name": "HTMLPropsWithRefCallback"
													}
												},
												{
													"id": 3486,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3487,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 3488,
																	"name": "index",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/react-slider/index.d.ts",
																			"line": 200,
																			"character": 22
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3489,
																	"name": "value",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/react-slider/index.d.ts",
																			"line": 200,
																			"character": 37
																		}
																	],
																	"type": {
																		"type": "typeParameter",
																		"name": "T",
																		"constraint": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "number"
																				},
																				{
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "ReadonlyArray"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 3490,
																	"name": "valueNow",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/react-slider/index.d.ts",
																			"line": 200,
																			"character": 50
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		3488,
																		3489,
																		3490
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/react-slider/index.d.ts",
																	"line": 200,
																	"character": 14
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Element"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3482,
						"name": "ReactSliderProps.renderThumb"
					}
				},
				{
					"id": 3491,
					"name": "renderTrack",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Provide a custom render function for the track node.",
						"text": "The render function will be passed two arguments, an object with props that\nshould be added to your handle node, and an object with track and slider state.\n\n- `props` - props to be spread into your track node\n- `state.index` - the index of the track\n- `state.value` - the current value state\n",
						"tags": [
							{
								"tag": "default",
								"text": "props => <div {...props} />\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 215,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3492,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3493,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3494,
													"name": "props",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "HTMLDivElement"
															}
														],
														"name": "HTMLPropsWithRefCallback"
													}
												},
												{
													"id": 3495,
													"name": "state",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 3496,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"children": [
																{
																	"id": 3497,
																	"name": "index",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/react-slider/index.d.ts",
																			"line": 217,
																			"character": 22
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3498,
																	"name": "value",
																	"kind": 32,
																	"kindString": "Variable",
																	"flags": {
																		"isExported": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/@types/react-slider/index.d.ts",
																			"line": 217,
																			"character": 37
																		}
																	],
																	"type": {
																		"type": "typeParameter",
																		"name": "T",
																		"constraint": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "number"
																				},
																				{
																					"type": "reference",
																					"typeArguments": [
																						{
																							"type": "intrinsic",
																							"name": "number"
																						}
																					],
																					"name": "ReadonlyArray"
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Variables",
																	"kind": 32,
																	"children": [
																		3497,
																		3498
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/@types/react-slider/index.d.ts",
																	"line": 217,
																	"character": 14
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Element"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3491,
						"name": "ReactSliderProps.renderTrack"
					}
				},
				{
					"id": 3499,
					"name": "snapDragDisabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Disables thumb move when clicking the slider track",
						"tags": [
							{
								"tag": "default",
								"text": "false\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 225,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3499,
						"name": "ReactSliderProps.snapDragDisabled"
					}
				},
				{
					"id": 3500,
					"name": "step",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Value to be added or subtracted on each step the slider makes.",
						"text": "Must be greater than zero. `max - min` should be evenly divisible by the step value.\n",
						"tags": [
							{
								"tag": "default",
								"text": "1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 234,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3500,
						"name": "ReactSliderProps.step"
					}
				},
				{
					"id": 3433,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object for the main container and included components."
					},
					"sources": [
						{
							"fileName": "src/components/complex/RangeSlider/index.tsx",
							"line": 31,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 3363,
						"name": "RangeSliderStyles"
					}
				},
				{
					"id": 3501,
					"name": "thumbActiveClassName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The css class set on the thumb that is currently being moved.",
						"tags": [
							{
								"tag": "default",
								"text": "\"active\"\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 240,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3501,
						"name": "ReactSliderProps.thumbActiveClassName"
					}
				},
				{
					"id": 3502,
					"name": "thumbClassName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The css class set on each thumb node.",
						"text": "In addition each thumb will receive a numbered css class of the form\n`${thumbClassName}-${i}`, e.g. `thumb-0`, `thumb-1`, ...",
						"tags": [
							{
								"tag": "default",
								"text": "\"thumb\"\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 249,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3502,
						"name": "ReactSliderProps.thumbClassName"
					}
				},
				{
					"id": 3503,
					"name": "trackClassName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The css class set on the tracks between the thumbs.",
						"text": "In addition track fragment will receive a numbered css class of the form\n`${trackClassName}-${i}`, e.g. `track-0`, `track-1`, ...",
						"tags": [
							{
								"tag": "default",
								"text": "\"track\"\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 258,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3503,
						"name": "ReactSliderProps.trackClassName"
					}
				},
				{
					"id": 3504,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Like `defaultValue` but for\n[controlled components](http://facebook.github.io/react/docs/forms.html#controlled-components)."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 264,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 3437,
						"name": "T"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3504,
						"name": "ReactSliderProps.value"
					}
				},
				{
					"id": 3505,
					"name": "withTracks",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If `true` tracks between the thumbs will be rendered.",
						"tags": [
							{
								"tag": "default",
								"text": "true\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react-slider/index.d.ts",
							"line": 270,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3505,
						"name": "ReactSliderProps.withTracks"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3439,
						3440,
						3438,
						3435,
						3436,
						3448,
						3449,
						3450,
						3434,
						3451,
						3452,
						3453,
						3454,
						3455,
						3456,
						3460,
						3464,
						3468,
						3472,
						3473,
						3477,
						3478,
						3482,
						3491,
						3499,
						3500,
						3433,
						3501,
						3502,
						3503,
						3504,
						3505
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/RangeSlider/index.tsx",
					"line": 27,
					"character": 26
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ReactSliderProps"
				}
			]
		},
		{
			"id": 3363,
			"name": "RangeSliderStyles",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3422,
					"name": "active",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 59,
						"name": "Events.active"
					}
				},
				{
					"id": 3374,
					"name": "background",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the background css prop.<br/>\nYou can pass a single string with a color name or an object with color name opacity and bg size.",
						"tags": [
							{
								"tag": "example",
								"text": "```{background: 'red'}```"
							},
							{
								"tag": "example",
								"text": "```{background: {color: 'red', opacity: '20', size: 'cover'}}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 274,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 184,
								"name": "Colors"
							},
							{
								"type": "reference",
								"id": 61,
								"name": "Background"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 11,
						"name": "Utility.background"
					}
				},
				{
					"id": 3396,
					"name": "border",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 307,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 67,
						"name": "Border"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 33,
						"name": "Utility.border"
					}
				},
				{
					"id": 3369,
					"name": "cursor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the cursor css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{cursor: 'pointer'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 245,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "default"
							},
							{
								"type": "stringLiteral",
								"value": "pointer"
							},
							{
								"type": "stringLiteral",
								"value": "wait"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "not-allowed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 6,
						"name": "Utility.cursor"
					}
				},
				{
					"id": 3366,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the display css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 211,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "hidden"
							},
							{
								"type": "stringLiteral",
								"value": "block"
							},
							{
								"type": "stringLiteral",
								"value": "inline-block"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "flex"
							},
							{
								"type": "stringLiteral",
								"value": "inline-flex"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "inline-grid"
							},
							{
								"type": "stringLiteral",
								"value": "table"
							},
							{
								"type": "stringLiteral",
								"value": "table-caption"
							},
							{
								"type": "stringLiteral",
								"value": "table-cell"
							},
							{
								"type": "stringLiteral",
								"value": "flow-root"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3,
						"name": "Utility.display"
					}
				},
				{
					"id": 3367,
					"name": "flex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the flex css prop.<br/>\nHere you can pass all flex props for generating flex utility classes, <br/>\nRequires a display: 'flex' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex', flex: {direction: 'column', align: 'center', justify: 'center', flex: 'auto' }}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 231,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 97,
						"name": "Flex"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 4,
						"name": "Utility.flex"
					}
				},
				{
					"id": 3423,
					"name": "focus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 366,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 60,
						"name": "Events.focus"
					}
				},
				{
					"id": 3376,
					"name": "font",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-weight, font-family, font-style, font antialiasing css props.<br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{font: {weight: 'semibold', family: 'sans', style: 'italic', smoothing: 'antialiased'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 287,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 92,
						"name": "Font"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 13,
						"name": "Utility.font"
					}
				},
				{
					"id": 3368,
					"name": "grid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the grid css prop.<br/>\nHere you can pass all grid props for generating grid utility classes, <br/>\nRequires a display: 'grid' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'grid', grid: {cols: '4', gap: '4' }```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 239,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 103,
						"name": "Grid"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 5,
						"name": "Utility.grid"
					}
				},
				{
					"id": 3371,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the height css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{height: 'full'}```"
							},
							{
								"tag": "example",
								"text": "```{height: '64'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 258,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"height\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 8,
						"name": "Utility.height"
					}
				},
				{
					"id": 3421,
					"name": "hover",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 364,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 58,
						"name": "Events.hover"
					}
				},
				{
					"id": 3364,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles object for the label text component."
					},
					"sources": [
						{
							"fileName": "src/components/complex/RangeSlider/index.tsx",
							"line": 12,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 3419,
					"name": "lg",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 375,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 56,
						"name": "MediaQuery.lg"
					}
				},
				{
					"id": 3377,
					"name": "margin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the margin css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{margin: '4'}```"
							},
							{
								"tag": "example",
								"text": "```{margin: ['4','2','4','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 294,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3378,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3385,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 102
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3381,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 49
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3382,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 64
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3380,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 32
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3379,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3383,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 76
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3384,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 88
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3385,
												3381,
												3382,
												3380,
												3379,
												3383,
												3384
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 14,
						"name": "Utility.margin"
					}
				},
				{
					"id": 3373,
					"name": "maxHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxHeight css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxHeight: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 268,
							"character": 11
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxHeight\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 10,
						"name": "Utility.maxHeight"
					}
				},
				{
					"id": 3372,
					"name": "maxWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxWidth css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxWidth: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 263,
							"character": 10
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxWidth\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 9,
						"name": "Utility.maxWidth"
					}
				},
				{
					"id": 3418,
					"name": "md",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 374,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 55,
						"name": "MediaQuery.md"
					}
				},
				{
					"id": 3395,
					"name": "opacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the opacity css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{opacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 306,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 188,
						"name": "Opacity"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 32,
						"name": "Utility.opacity"
					}
				},
				{
					"id": 3412,
					"name": "overflow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for overflow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{overflow: {x: 'hidden'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 357,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3413,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3416,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 44
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 3414,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 3415,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3416,
												3414,
												3415
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 49,
						"name": "Utility.overflow"
					}
				},
				{
					"id": 3386,
					"name": "padding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the padding css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{padding: '3'}```"
							},
							{
								"tag": "example",
								"text": "```{padding: ['6','2','6','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 301,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3387,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3394,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 109
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3390,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 52
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3391,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 68
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3389,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3388,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3392,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 81
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3393,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 94
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3394,
												3390,
												3391,
												3389,
												3388,
												3392,
												3393
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 23,
						"name": "Utility.padding"
					}
				},
				{
					"id": 3400,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '400'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 323,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3401,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3402,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 324,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 184,
												"name": "Colors"
											}
										},
										{
											"id": 3403,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 325,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"id": 185,
												"name": "ColorVariants"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3402,
												3403
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 37,
						"name": "Utility.placeholder"
					}
				},
				{
					"id": 3404,
					"name": "placeholderOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color opacity.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '700',  placeholderOpacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 331,
							"character": 20
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"placeholderOpacity\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 41,
						"name": "Utility.placeholderOpacity"
					}
				},
				{
					"id": 3408,
					"name": "placement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for position placement.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute', placement: 'inset-0'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 351,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3409,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3411,
											"name": "inset",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 42
												}
											],
											"type": {
												"type": "reference",
												"id": 197,
												"name": "Inset"
											}
										},
										{
											"id": 3410,
											"name": "position",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 196,
												"name": "Placement"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3411,
												3410
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 45,
						"name": "Utility.placement"
					}
				},
				{
					"id": 3399,
					"name": "pointerEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the all pointer events.",
						"tags": [
							{
								"tag": "example",
								"text": "```{pointerEvents: 'none'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 318,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "auto"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 36,
						"name": "Utility.pointerEvents"
					}
				},
				{
					"id": 3365,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the position css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 205,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "static"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							},
							{
								"type": "stringLiteral",
								"value": "absolute"
							},
							{
								"type": "stringLiteral",
								"value": "relative"
							},
							{
								"type": "stringLiteral",
								"value": "sticky"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2,
						"name": "Utility.position"
					}
				},
				{
					"id": 3406,
					"name": "rounded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined border radius classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{rounded: 'full'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 341,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 193,
								"name": "BorderRadius"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"name": "BorderRadius"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 43,
						"name": "Utility.rounded"
					}
				},
				{
					"id": 3405,
					"name": "shadow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined box shadow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{shadow: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 336,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"boxShadow\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 42,
						"name": "Utility.shadow"
					}
				},
				{
					"id": 3417,
					"name": "sm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 373,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 54,
						"name": "MediaQuery.sm"
					}
				},
				{
					"id": 3397,
					"name": "space",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 308,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 77,
						"name": "Space"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 34,
						"name": "Utility.space"
					}
				},
				{
					"id": 3398,
					"name": "table",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the table columns widths.",
						"tags": [
							{
								"tag": "example",
								"text": "```{table: 'auto'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 313,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 35,
						"name": "Utility.table"
					}
				},
				{
					"id": 3375,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-size, color, color-opacity, line-height, text-align, ... css props. <br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{text: {size: 'lg'} }```"
							},
							{
								"tag": "example",
								"text": "```{text: {size: 'xl', color: 'blue-500', leading: 'tight', align:'center'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 281,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 80,
						"name": "Text"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 12,
						"name": "Utility.text"
					}
				},
				{
					"id": 3370,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the width css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{width: '64'}```"
							},
							{
								"tag": "example",
								"text": "```{width: '1/2'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 252,
							"character": 7
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"width\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 7,
						"name": "Utility.width"
					}
				},
				{
					"id": 3420,
					"name": "xl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 376,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 57,
						"name": "MediaQuery.xl"
					}
				},
				{
					"id": 3407,
					"name": "zIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined z-index classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{zIndex: '60'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 346,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"zIndex\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 44,
						"name": "Utility.zIndex"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3422,
						3374,
						3396,
						3369,
						3366,
						3367,
						3423,
						3376,
						3368,
						3371,
						3421,
						3364,
						3419,
						3377,
						3373,
						3372,
						3418,
						3395,
						3412,
						3386,
						3400,
						3404,
						3408,
						3399,
						3365,
						3406,
						3405,
						3417,
						3397,
						3398,
						3375,
						3370,
						3420,
						3407
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/RangeSlider/index.tsx",
					"line": 8,
					"character": 27
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1,
					"name": "Styles"
				}
			]
		},
		{
			"id": 2982,
			"name": "ScrollbarsProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2997,
					"name": "autoHide",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Autohide scrollbars when the mouse is not over the element."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Scrollbars/index.tsx",
							"line": 47,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 2984,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Main container className for css classes ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Scrollbars/index.tsx",
							"line": 26,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 2983,
					"name": "noScrollX",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Will disable the horizontal scroll bar"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Scrollbars/index.tsx",
							"line": 22,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 2988,
					"name": "padding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Will define a padding for the scrollbar container."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Scrollbars/index.tsx",
							"line": 43,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2989,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2996,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/Scrollbars/index.tsx",
													"line": 43,
													"character": 109
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2992,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/Scrollbars/index.tsx",
													"line": 43,
													"character": 52
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2993,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/Scrollbars/index.tsx",
													"line": 43,
													"character": 68
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2991,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/Scrollbars/index.tsx",
													"line": 43,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2990,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/Scrollbars/index.tsx",
													"line": 43,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2994,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/Scrollbars/index.tsx",
													"line": 43,
													"character": 81
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2995,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/Scrollbars/index.tsx",
													"line": 43,
													"character": 94
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2996,
												2992,
												2993,
												2991,
												2990,
												2994,
												2995
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2987,
					"name": "spacing",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Will define a bottom margin for all children elements."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Scrollbars/index.tsx",
							"line": 39,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 187,
						"name": "Spacing"
					}
				},
				{
					"id": 2986,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object for the main container and included components."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Scrollbars/index.tsx",
							"line": 35,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 2914,
						"name": "ScrollbarsStyles"
					}
				},
				{
					"id": 2998,
					"name": "translateContentSize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Set the size of the content to the container in style height."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Scrollbars/index.tsx",
							"line": 51,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2997,
						2984,
						2983,
						2988,
						2987,
						2986,
						2998
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Scrollbars/index.tsx",
					"line": 18,
					"character": 25
				}
			]
		},
		{
			"id": 2914,
			"name": "ScrollbarsStyles",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2980,
					"name": "active",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 59,
						"name": "Events.active"
					}
				},
				{
					"id": 2932,
					"name": "background",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the background css prop.<br/>\nYou can pass a single string with a color name or an object with color name opacity and bg size.",
						"tags": [
							{
								"tag": "example",
								"text": "```{background: 'red'}```"
							},
							{
								"tag": "example",
								"text": "```{background: {color: 'red', opacity: '20', size: 'cover'}}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 274,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 184,
								"name": "Colors"
							},
							{
								"type": "reference",
								"id": 61,
								"name": "Background"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 11,
						"name": "Utility.background"
					}
				},
				{
					"id": 2954,
					"name": "border",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 307,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 67,
						"name": "Border"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 33,
						"name": "Utility.border"
					}
				},
				{
					"id": 2927,
					"name": "cursor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the cursor css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{cursor: 'pointer'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 245,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "default"
							},
							{
								"type": "stringLiteral",
								"value": "pointer"
							},
							{
								"type": "stringLiteral",
								"value": "wait"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "not-allowed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 6,
						"name": "Utility.cursor"
					}
				},
				{
					"id": 2924,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the display css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 211,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "hidden"
							},
							{
								"type": "stringLiteral",
								"value": "block"
							},
							{
								"type": "stringLiteral",
								"value": "inline-block"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "flex"
							},
							{
								"type": "stringLiteral",
								"value": "inline-flex"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "inline-grid"
							},
							{
								"type": "stringLiteral",
								"value": "table"
							},
							{
								"type": "stringLiteral",
								"value": "table-caption"
							},
							{
								"type": "stringLiteral",
								"value": "table-cell"
							},
							{
								"type": "stringLiteral",
								"value": "flow-root"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3,
						"name": "Utility.display"
					}
				},
				{
					"id": 2925,
					"name": "flex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the flex css prop.<br/>\nHere you can pass all flex props for generating flex utility classes, <br/>\nRequires a display: 'flex' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex', flex: {direction: 'column', align: 'center', justify: 'center', flex: 'auto' }}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 231,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 97,
						"name": "Flex"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 4,
						"name": "Utility.flex"
					}
				},
				{
					"id": 2981,
					"name": "focus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 366,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 60,
						"name": "Events.focus"
					}
				},
				{
					"id": 2934,
					"name": "font",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-weight, font-family, font-style, font antialiasing css props.<br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{font: {weight: 'semibold', family: 'sans', style: 'italic', smoothing: 'antialiased'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 287,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 92,
						"name": "Font"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 13,
						"name": "Utility.font"
					}
				},
				{
					"id": 2926,
					"name": "grid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the grid css prop.<br/>\nHere you can pass all grid props for generating grid utility classes, <br/>\nRequires a display: 'grid' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'grid', grid: {cols: '4', gap: '4' }```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 239,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 103,
						"name": "Grid"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 5,
						"name": "Utility.grid"
					}
				},
				{
					"id": 2929,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the height css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{height: 'full'}```"
							},
							{
								"tag": "example",
								"text": "```{height: '64'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 258,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"height\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 8,
						"name": "Utility.height"
					}
				},
				{
					"id": 2919,
					"name": "horizontal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/Scrollbars/index.tsx",
							"line": 12,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2920,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2922,
											"name": "thumb",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/Scrollbars/index.tsx",
													"line": 14,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 1,
												"name": "Styles"
											}
										},
										{
											"id": 2921,
											"name": "track",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/Scrollbars/index.tsx",
													"line": 13,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 1,
												"name": "Styles"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2922,
												2921
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2979,
					"name": "hover",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 364,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 58,
						"name": "Events.hover"
					}
				},
				{
					"id": 2977,
					"name": "lg",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 375,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 56,
						"name": "MediaQuery.lg"
					}
				},
				{
					"id": 2935,
					"name": "margin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the margin css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{margin: '4'}```"
							},
							{
								"tag": "example",
								"text": "```{margin: ['4','2','4','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 294,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2936,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2943,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 102
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2939,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 49
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2940,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 64
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2938,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 32
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2937,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2941,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 76
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2942,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 88
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2943,
												2939,
												2940,
												2938,
												2937,
												2941,
												2942
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 14,
						"name": "Utility.margin"
					}
				},
				{
					"id": 2931,
					"name": "maxHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxHeight css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxHeight: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 268,
							"character": 11
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxHeight\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 10,
						"name": "Utility.maxHeight"
					}
				},
				{
					"id": 2930,
					"name": "maxWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxWidth css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxWidth: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 263,
							"character": 10
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxWidth\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 9,
						"name": "Utility.maxWidth"
					}
				},
				{
					"id": 2976,
					"name": "md",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 374,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 55,
						"name": "MediaQuery.md"
					}
				},
				{
					"id": 2953,
					"name": "opacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the opacity css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{opacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 306,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 188,
						"name": "Opacity"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 32,
						"name": "Utility.opacity"
					}
				},
				{
					"id": 2970,
					"name": "overflow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for overflow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{overflow: {x: 'hidden'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 357,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2971,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2974,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 44
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 2972,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 2973,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2974,
												2972,
												2973
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 49,
						"name": "Utility.overflow"
					}
				},
				{
					"id": 2944,
					"name": "padding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the padding css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{padding: '3'}```"
							},
							{
								"tag": "example",
								"text": "```{padding: ['6','2','6','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 301,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2945,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2952,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 109
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2948,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 52
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2949,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 68
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2947,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2946,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2950,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 81
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2951,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 94
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2952,
												2948,
												2949,
												2947,
												2946,
												2950,
												2951
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 23,
						"name": "Utility.padding"
					}
				},
				{
					"id": 2958,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '400'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 323,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2959,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2960,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 324,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 184,
												"name": "Colors"
											}
										},
										{
											"id": 2961,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 325,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"id": 185,
												"name": "ColorVariants"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2960,
												2961
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 37,
						"name": "Utility.placeholder"
					}
				},
				{
					"id": 2962,
					"name": "placeholderOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color opacity.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '700',  placeholderOpacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 331,
							"character": 20
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"placeholderOpacity\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 41,
						"name": "Utility.placeholderOpacity"
					}
				},
				{
					"id": 2966,
					"name": "placement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for position placement.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute', placement: 'inset-0'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 351,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2967,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2969,
											"name": "inset",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 42
												}
											],
											"type": {
												"type": "reference",
												"id": 197,
												"name": "Inset"
											}
										},
										{
											"id": 2968,
											"name": "position",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 196,
												"name": "Placement"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2969,
												2968
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 45,
						"name": "Utility.placement"
					}
				},
				{
					"id": 2957,
					"name": "pointerEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the all pointer events.",
						"tags": [
							{
								"tag": "example",
								"text": "```{pointerEvents: 'none'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 318,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "auto"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 36,
						"name": "Utility.pointerEvents"
					}
				},
				{
					"id": 2923,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the position css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 205,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "static"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							},
							{
								"type": "stringLiteral",
								"value": "absolute"
							},
							{
								"type": "stringLiteral",
								"value": "relative"
							},
							{
								"type": "stringLiteral",
								"value": "sticky"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2,
						"name": "Utility.position"
					}
				},
				{
					"id": 2964,
					"name": "rounded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined border radius classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{rounded: 'full'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 341,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 193,
								"name": "BorderRadius"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"name": "BorderRadius"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 43,
						"name": "Utility.rounded"
					}
				},
				{
					"id": 2963,
					"name": "shadow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined box shadow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{shadow: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 336,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"boxShadow\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 42,
						"name": "Utility.shadow"
					}
				},
				{
					"id": 2975,
					"name": "sm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 373,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 54,
						"name": "MediaQuery.sm"
					}
				},
				{
					"id": 2955,
					"name": "space",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 308,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 77,
						"name": "Space"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 34,
						"name": "Utility.space"
					}
				},
				{
					"id": 2956,
					"name": "table",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the table columns widths.",
						"tags": [
							{
								"tag": "example",
								"text": "```{table: 'auto'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 313,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 35,
						"name": "Utility.table"
					}
				},
				{
					"id": 2933,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-size, color, color-opacity, line-height, text-align, ... css props. <br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{text: {size: 'lg'} }```"
							},
							{
								"tag": "example",
								"text": "```{text: {size: 'xl', color: 'blue-500', leading: 'tight', align:'center'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 281,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 80,
						"name": "Text"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 12,
						"name": "Utility.text"
					}
				},
				{
					"id": 2915,
					"name": "vertical",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/complex/Scrollbars/index.tsx",
							"line": 8,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2916,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2918,
											"name": "thumb",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/Scrollbars/index.tsx",
													"line": 10,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 1,
												"name": "Styles"
											}
										},
										{
											"id": 2917,
											"name": "track",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/components/complex/Scrollbars/index.tsx",
													"line": 9,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 1,
												"name": "Styles"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2918,
												2917
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2928,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the width css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{width: '64'}```"
							},
							{
								"tag": "example",
								"text": "```{width: '1/2'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 252,
							"character": 7
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"width\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 7,
						"name": "Utility.width"
					}
				},
				{
					"id": 2978,
					"name": "xl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 376,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 57,
						"name": "MediaQuery.xl"
					}
				},
				{
					"id": 2965,
					"name": "zIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined z-index classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{zIndex: '60'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 346,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"zIndex\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 44,
						"name": "Utility.zIndex"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2980,
						2932,
						2954,
						2927,
						2924,
						2925,
						2981,
						2934,
						2926,
						2929,
						2919,
						2979,
						2977,
						2935,
						2931,
						2930,
						2976,
						2953,
						2970,
						2944,
						2958,
						2962,
						2966,
						2957,
						2923,
						2964,
						2963,
						2975,
						2955,
						2956,
						2933,
						2915,
						2928,
						2978,
						2965
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Scrollbars/index.tsx",
					"line": 7,
					"character": 33
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1,
					"name": "Styles"
				}
			]
		},
		{
			"id": 539,
			"name": "SelectProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 544,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Main container className for css classes ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 74,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 540,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Array of objects that will render the options inside the select."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 58,
							"character": 6
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 468,
							"name": "Option"
						}
					}
				},
				{
					"id": 545,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Will disable the select."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 78,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 543,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Label for the select."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 70,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 547,
					"name": "noResultsText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Text for no results."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 86,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 548,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Onchange event that will return a <a href=\"#select-option-interface\" class=\"text-yellow-700\">Option</a>."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 90,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 549,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 550,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 551,
													"name": "selected",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 468,
														"name": "Option"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 546,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Placeholder for the select."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 82,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 542,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object for the main container and included components."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 66,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 472,
						"name": "SelectStyles"
					}
				},
				{
					"id": 541,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Selected option."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 62,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 468,
						"name": "Option"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						544,
						540,
						545,
						543,
						547,
						548,
						546,
						542,
						541
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Select/index.tsx",
					"line": 54,
					"character": 28
				}
			]
		},
		{
			"id": 552,
			"name": "SelectState",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 557,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If the select is disabled"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 113,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 555,
					"name": "filterQuery",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "String for filtering the options"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 105,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 556,
					"name": "isShown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If the menu is shown"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 109,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 553,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Select Options state"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 97,
							"character": 9
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 468,
							"name": "Option"
						}
					}
				},
				{
					"id": 554,
					"name": "selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Selected option state"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 101,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"id": 468,
						"name": "Option"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						557,
						555,
						556,
						553,
						554
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Select/index.tsx",
					"line": 93,
					"character": 28
				}
			]
		},
		{
			"id": 472,
			"name": "SelectStyles",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 537,
					"name": "active",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 59,
						"name": "Events.active"
					}
				},
				{
					"id": 489,
					"name": "background",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the background css prop.<br/>\nYou can pass a single string with a color name or an object with color name opacity and bg size.",
						"tags": [
							{
								"tag": "example",
								"text": "```{background: 'red'}```"
							},
							{
								"tag": "example",
								"text": "```{background: {color: 'red', opacity: '20', size: 'cover'}}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 274,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 184,
								"name": "Colors"
							},
							{
								"type": "reference",
								"id": 61,
								"name": "Background"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 11,
						"name": "Utility.background"
					}
				},
				{
					"id": 511,
					"name": "border",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 307,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 67,
						"name": "Border"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 33,
						"name": "Utility.border"
					}
				},
				{
					"id": 475,
					"name": "button",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles for the button component"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 35,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 484,
					"name": "cursor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the cursor css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{cursor: 'pointer'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 245,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "default"
							},
							{
								"type": "stringLiteral",
								"value": "pointer"
							},
							{
								"type": "stringLiteral",
								"value": "wait"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "not-allowed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 6,
						"name": "Utility.cursor"
					}
				},
				{
					"id": 481,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the display css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 211,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "hidden"
							},
							{
								"type": "stringLiteral",
								"value": "block"
							},
							{
								"type": "stringLiteral",
								"value": "inline-block"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "flex"
							},
							{
								"type": "stringLiteral",
								"value": "inline-flex"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "inline-grid"
							},
							{
								"type": "stringLiteral",
								"value": "table"
							},
							{
								"type": "stringLiteral",
								"value": "table-caption"
							},
							{
								"type": "stringLiteral",
								"value": "table-cell"
							},
							{
								"type": "stringLiteral",
								"value": "flow-root"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3,
						"name": "Utility.display"
					}
				},
				{
					"id": 482,
					"name": "flex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the flex css prop.<br/>\nHere you can pass all flex props for generating flex utility classes, <br/>\nRequires a display: 'flex' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex', flex: {direction: 'column', align: 'center', justify: 'center', flex: 'auto' }}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 231,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 97,
						"name": "Flex"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 4,
						"name": "Utility.flex"
					}
				},
				{
					"id": 538,
					"name": "focus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 366,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 60,
						"name": "Events.focus"
					}
				},
				{
					"id": 491,
					"name": "font",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-weight, font-family, font-style, font antialiasing css props.<br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{font: {weight: 'semibold', family: 'sans', style: 'italic', smoothing: 'antialiased'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 287,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 92,
						"name": "Font"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 13,
						"name": "Utility.font"
					}
				},
				{
					"id": 483,
					"name": "grid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the grid css prop.<br/>\nHere you can pass all grid props for generating grid utility classes, <br/>\nRequires a display: 'grid' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'grid', grid: {cols: '4', gap: '4' }```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 239,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 103,
						"name": "Grid"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 5,
						"name": "Utility.grid"
					}
				},
				{
					"id": 486,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the height css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{height: 'full'}```"
							},
							{
								"tag": "example",
								"text": "```{height: '64'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 258,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"height\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 8,
						"name": "Utility.height"
					}
				},
				{
					"id": 536,
					"name": "hover",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 364,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 58,
						"name": "Events.hover"
					}
				},
				{
					"id": 476,
					"name": "input",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles for the input component"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 39,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 473,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles for the Label component"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 27,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 534,
					"name": "lg",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 375,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 56,
						"name": "MediaQuery.lg"
					}
				},
				{
					"id": 492,
					"name": "margin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the margin css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{margin: '4'}```"
							},
							{
								"tag": "example",
								"text": "```{margin: ['4','2','4','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 294,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 493,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 500,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 102
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 496,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 49
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 497,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 64
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 495,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 32
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 494,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 498,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 76
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 499,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 88
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												500,
												496,
												497,
												495,
												494,
												498,
												499
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 14,
						"name": "Utility.margin"
					}
				},
				{
					"id": 488,
					"name": "maxHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxHeight css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxHeight: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 268,
							"character": 11
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxHeight\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 10,
						"name": "Utility.maxHeight"
					}
				},
				{
					"id": 487,
					"name": "maxWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxWidth css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxWidth: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 263,
							"character": 10
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxWidth\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 9,
						"name": "Utility.maxWidth"
					}
				},
				{
					"id": 533,
					"name": "md",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 374,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 55,
						"name": "MediaQuery.md"
					}
				},
				{
					"id": 478,
					"name": "menu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles for the drop menu"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 47,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 510,
					"name": "opacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the opacity css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{opacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 306,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 188,
						"name": "Opacity"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 32,
						"name": "Utility.opacity"
					}
				},
				{
					"id": 479,
					"name": "option",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles for the select options"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 51,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 527,
					"name": "overflow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for overflow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{overflow: {x: 'hidden'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 357,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 528,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 531,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 44
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 529,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 530,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												531,
												529,
												530
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 49,
						"name": "Utility.overflow"
					}
				},
				{
					"id": 501,
					"name": "padding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the padding css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{padding: '3'}```"
							},
							{
								"tag": "example",
								"text": "```{padding: ['6','2','6','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 301,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 502,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 509,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 109
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 505,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 52
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 506,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 68
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 504,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 503,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 507,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 81
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 508,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 94
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												509,
												505,
												506,
												504,
												503,
												507,
												508
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 23,
						"name": "Utility.padding"
					}
				},
				{
					"id": 515,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '400'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 323,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 516,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 517,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 324,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 184,
												"name": "Colors"
											}
										},
										{
											"id": 518,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 325,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"id": 185,
												"name": "ColorVariants"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												517,
												518
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 37,
						"name": "Utility.placeholder"
					}
				},
				{
					"id": 519,
					"name": "placeholderOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color opacity.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '700',  placeholderOpacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 331,
							"character": 20
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"placeholderOpacity\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 41,
						"name": "Utility.placeholderOpacity"
					}
				},
				{
					"id": 523,
					"name": "placement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for position placement.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute', placement: 'inset-0'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 351,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 524,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 526,
											"name": "inset",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 42
												}
											],
											"type": {
												"type": "reference",
												"id": 197,
												"name": "Inset"
											}
										},
										{
											"id": 525,
											"name": "position",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 196,
												"name": "Placement"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												526,
												525
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 45,
						"name": "Utility.placement"
					}
				},
				{
					"id": 514,
					"name": "pointerEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the all pointer events.",
						"tags": [
							{
								"tag": "example",
								"text": "```{pointerEvents: 'none'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 318,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "auto"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 36,
						"name": "Utility.pointerEvents"
					}
				},
				{
					"id": 480,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the position css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 205,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "static"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							},
							{
								"type": "stringLiteral",
								"value": "absolute"
							},
							{
								"type": "stringLiteral",
								"value": "relative"
							},
							{
								"type": "stringLiteral",
								"value": "sticky"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2,
						"name": "Utility.position"
					}
				},
				{
					"id": 521,
					"name": "rounded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined border radius classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{rounded: 'full'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 341,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 193,
								"name": "BorderRadius"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"name": "BorderRadius"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 43,
						"name": "Utility.rounded"
					}
				},
				{
					"id": 474,
					"name": "select",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles for the select"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 31,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 477,
					"name": "selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles for the Selected item"
					},
					"sources": [
						{
							"fileName": "src/components/complex/Select/index.tsx",
							"line": 43,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 520,
					"name": "shadow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined box shadow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{shadow: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 336,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"boxShadow\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 42,
						"name": "Utility.shadow"
					}
				},
				{
					"id": 532,
					"name": "sm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 373,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 54,
						"name": "MediaQuery.sm"
					}
				},
				{
					"id": 512,
					"name": "space",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 308,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 77,
						"name": "Space"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 34,
						"name": "Utility.space"
					}
				},
				{
					"id": 513,
					"name": "table",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the table columns widths.",
						"tags": [
							{
								"tag": "example",
								"text": "```{table: 'auto'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 313,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 35,
						"name": "Utility.table"
					}
				},
				{
					"id": 490,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-size, color, color-opacity, line-height, text-align, ... css props. <br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{text: {size: 'lg'} }```"
							},
							{
								"tag": "example",
								"text": "```{text: {size: 'xl', color: 'blue-500', leading: 'tight', align:'center'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 281,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 80,
						"name": "Text"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 12,
						"name": "Utility.text"
					}
				},
				{
					"id": 485,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the width css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{width: '64'}```"
							},
							{
								"tag": "example",
								"text": "```{width: '1/2'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 252,
							"character": 7
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"width\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 7,
						"name": "Utility.width"
					}
				},
				{
					"id": 535,
					"name": "xl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 376,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 57,
						"name": "MediaQuery.xl"
					}
				},
				{
					"id": 522,
					"name": "zIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined z-index classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{zIndex: '60'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 346,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"zIndex\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 44,
						"name": "Utility.zIndex"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						537,
						489,
						511,
						475,
						484,
						481,
						482,
						538,
						491,
						483,
						486,
						536,
						476,
						473,
						534,
						492,
						488,
						487,
						533,
						478,
						510,
						479,
						527,
						501,
						515,
						519,
						523,
						514,
						480,
						521,
						474,
						477,
						520,
						532,
						512,
						513,
						490,
						485,
						535,
						522
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Select/index.tsx",
					"line": 23,
					"character": 29
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1,
					"name": "Styles"
				}
			]
		},
		{
			"id": 3595,
			"name": "SideBarProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3597,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Main container className for css classes ."
					},
					"sources": [
						{
							"fileName": "src/components/layout/SideBar/index.tsx",
							"line": 18,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3601,
					"name": "hint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Text container for the collapse/expand button."
					},
					"sources": [
						{
							"fileName": "src/components/layout/SideBar/index.tsx",
							"line": 35,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3602,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3603,
											"name": "collapsed",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/layout/SideBar/index.tsx",
													"line": 35,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3604,
											"name": "expanded",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/layout/SideBar/index.tsx",
													"line": 35,
													"character": 38
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3603,
												3604
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3599,
					"name": "isExpanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Will expand the sidebar or collapse it ."
					},
					"sources": [
						{
							"fileName": "src/components/layout/SideBar/index.tsx",
							"line": 27,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 3600,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Function that will trigger on expand or collapse of the sidebar."
					},
					"sources": [
						{
							"fileName": "src/components/layout/SideBar/index.tsx",
							"line": 31,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "React.FormEventHandler"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				},
				{
					"id": 3596,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object, that will be parses into string of tailwind css classes from the object."
					},
					"sources": [
						{
							"fileName": "src/components/layout/SideBar/index.tsx",
							"line": 14,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 3533,
						"name": "SideBarStyles"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3597,
						3601,
						3599,
						3600,
						3596
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/layout/SideBar/index.tsx",
					"line": 10,
					"character": 22
				}
			]
		},
		{
			"id": 3533,
			"name": "SideBarStyles",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3593,
					"name": "active",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 59,
						"name": "Events.active"
					}
				},
				{
					"id": 3545,
					"name": "background",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the background css prop.<br/>\nYou can pass a single string with a color name or an object with color name opacity and bg size.",
						"tags": [
							{
								"tag": "example",
								"text": "```{background: 'red'}```"
							},
							{
								"tag": "example",
								"text": "```{background: {color: 'red', opacity: '20', size: 'cover'}}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 274,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 184,
								"name": "Colors"
							},
							{
								"type": "reference",
								"id": 61,
								"name": "Background"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 11,
						"name": "Utility.background"
					}
				},
				{
					"id": 3567,
					"name": "border",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 307,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 67,
						"name": "Border"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 33,
						"name": "Utility.border"
					}
				},
				{
					"id": 3535,
					"name": "button",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/layout/SideBar/index.tsx",
							"line": 8,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 3534,
					"name": "content",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/layout/SideBar/index.tsx",
							"line": 7,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 3540,
					"name": "cursor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the cursor css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{cursor: 'pointer'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 245,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "default"
							},
							{
								"type": "stringLiteral",
								"value": "pointer"
							},
							{
								"type": "stringLiteral",
								"value": "wait"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "not-allowed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 6,
						"name": "Utility.cursor"
					}
				},
				{
					"id": 3537,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the display css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 211,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "hidden"
							},
							{
								"type": "stringLiteral",
								"value": "block"
							},
							{
								"type": "stringLiteral",
								"value": "inline-block"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "flex"
							},
							{
								"type": "stringLiteral",
								"value": "inline-flex"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "inline-grid"
							},
							{
								"type": "stringLiteral",
								"value": "table"
							},
							{
								"type": "stringLiteral",
								"value": "table-caption"
							},
							{
								"type": "stringLiteral",
								"value": "table-cell"
							},
							{
								"type": "stringLiteral",
								"value": "flow-root"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3,
						"name": "Utility.display"
					}
				},
				{
					"id": 3538,
					"name": "flex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the flex css prop.<br/>\nHere you can pass all flex props for generating flex utility classes, <br/>\nRequires a display: 'flex' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex', flex: {direction: 'column', align: 'center', justify: 'center', flex: 'auto' }}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 231,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 97,
						"name": "Flex"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 4,
						"name": "Utility.flex"
					}
				},
				{
					"id": 3594,
					"name": "focus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 366,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 60,
						"name": "Events.focus"
					}
				},
				{
					"id": 3547,
					"name": "font",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-weight, font-family, font-style, font antialiasing css props.<br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{font: {weight: 'semibold', family: 'sans', style: 'italic', smoothing: 'antialiased'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 287,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 92,
						"name": "Font"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 13,
						"name": "Utility.font"
					}
				},
				{
					"id": 3539,
					"name": "grid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the grid css prop.<br/>\nHere you can pass all grid props for generating grid utility classes, <br/>\nRequires a display: 'grid' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'grid', grid: {cols: '4', gap: '4' }```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 239,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 103,
						"name": "Grid"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 5,
						"name": "Utility.grid"
					}
				},
				{
					"id": 3542,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the height css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{height: 'full'}```"
							},
							{
								"tag": "example",
								"text": "```{height: '64'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 258,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"height\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 8,
						"name": "Utility.height"
					}
				},
				{
					"id": 3592,
					"name": "hover",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 364,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 58,
						"name": "Events.hover"
					}
				},
				{
					"id": 3590,
					"name": "lg",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 375,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 56,
						"name": "MediaQuery.lg"
					}
				},
				{
					"id": 3548,
					"name": "margin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the margin css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{margin: '4'}```"
							},
							{
								"tag": "example",
								"text": "```{margin: ['4','2','4','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 294,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3549,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3556,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 102
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3552,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 49
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3553,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 64
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3551,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 32
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3550,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3554,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 76
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 3555,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 88
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3556,
												3552,
												3553,
												3551,
												3550,
												3554,
												3555
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 14,
						"name": "Utility.margin"
					}
				},
				{
					"id": 3544,
					"name": "maxHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxHeight css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxHeight: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 268,
							"character": 11
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxHeight\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 10,
						"name": "Utility.maxHeight"
					}
				},
				{
					"id": 3543,
					"name": "maxWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxWidth css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxWidth: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 263,
							"character": 10
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxWidth\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 9,
						"name": "Utility.maxWidth"
					}
				},
				{
					"id": 3589,
					"name": "md",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 374,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 55,
						"name": "MediaQuery.md"
					}
				},
				{
					"id": 3566,
					"name": "opacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the opacity css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{opacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 306,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 188,
						"name": "Opacity"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 32,
						"name": "Utility.opacity"
					}
				},
				{
					"id": 3583,
					"name": "overflow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for overflow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{overflow: {x: 'hidden'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 357,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3584,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3587,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 44
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 3585,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 3586,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3587,
												3585,
												3586
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 49,
						"name": "Utility.overflow"
					}
				},
				{
					"id": 3557,
					"name": "padding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the padding css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{padding: '3'}```"
							},
							{
								"tag": "example",
								"text": "```{padding: ['6','2','6','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 301,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3558,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3565,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 109
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3561,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 52
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3562,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 68
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3560,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3559,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3563,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 81
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 3564,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 94
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3565,
												3561,
												3562,
												3560,
												3559,
												3563,
												3564
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 23,
						"name": "Utility.padding"
					}
				},
				{
					"id": 3571,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '400'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 323,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3572,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3573,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 324,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 184,
												"name": "Colors"
											}
										},
										{
											"id": 3574,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 325,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"id": 185,
												"name": "ColorVariants"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3573,
												3574
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 37,
						"name": "Utility.placeholder"
					}
				},
				{
					"id": 3575,
					"name": "placeholderOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color opacity.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '700',  placeholderOpacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 331,
							"character": 20
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"placeholderOpacity\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 41,
						"name": "Utility.placeholderOpacity"
					}
				},
				{
					"id": 3579,
					"name": "placement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for position placement.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute', placement: 'inset-0'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 351,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3580,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3582,
											"name": "inset",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 42
												}
											],
											"type": {
												"type": "reference",
												"id": 197,
												"name": "Inset"
											}
										},
										{
											"id": 3581,
											"name": "position",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 196,
												"name": "Placement"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3582,
												3581
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 45,
						"name": "Utility.placement"
					}
				},
				{
					"id": 3570,
					"name": "pointerEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the all pointer events.",
						"tags": [
							{
								"tag": "example",
								"text": "```{pointerEvents: 'none'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 318,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "auto"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 36,
						"name": "Utility.pointerEvents"
					}
				},
				{
					"id": 3536,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the position css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 205,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "static"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							},
							{
								"type": "stringLiteral",
								"value": "absolute"
							},
							{
								"type": "stringLiteral",
								"value": "relative"
							},
							{
								"type": "stringLiteral",
								"value": "sticky"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2,
						"name": "Utility.position"
					}
				},
				{
					"id": 3577,
					"name": "rounded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined border radius classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{rounded: 'full'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 341,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 193,
								"name": "BorderRadius"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"name": "BorderRadius"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 43,
						"name": "Utility.rounded"
					}
				},
				{
					"id": 3576,
					"name": "shadow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined box shadow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{shadow: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 336,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"boxShadow\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 42,
						"name": "Utility.shadow"
					}
				},
				{
					"id": 3588,
					"name": "sm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 373,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 54,
						"name": "MediaQuery.sm"
					}
				},
				{
					"id": 3568,
					"name": "space",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 308,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 77,
						"name": "Space"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 34,
						"name": "Utility.space"
					}
				},
				{
					"id": 3569,
					"name": "table",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the table columns widths.",
						"tags": [
							{
								"tag": "example",
								"text": "```{table: 'auto'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 313,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 35,
						"name": "Utility.table"
					}
				},
				{
					"id": 3546,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-size, color, color-opacity, line-height, text-align, ... css props. <br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{text: {size: 'lg'} }```"
							},
							{
								"tag": "example",
								"text": "```{text: {size: 'xl', color: 'blue-500', leading: 'tight', align:'center'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 281,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 80,
						"name": "Text"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 12,
						"name": "Utility.text"
					}
				},
				{
					"id": 3541,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the width css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{width: '64'}```"
							},
							{
								"tag": "example",
								"text": "```{width: '1/2'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 252,
							"character": 7
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"width\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 7,
						"name": "Utility.width"
					}
				},
				{
					"id": 3591,
					"name": "xl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 376,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 57,
						"name": "MediaQuery.xl"
					}
				},
				{
					"id": 3578,
					"name": "zIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined z-index classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{zIndex: '60'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 346,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"zIndex\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 44,
						"name": "Utility.zIndex"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3593,
						3545,
						3567,
						3535,
						3534,
						3540,
						3537,
						3538,
						3594,
						3547,
						3539,
						3542,
						3592,
						3590,
						3548,
						3544,
						3543,
						3589,
						3566,
						3583,
						3557,
						3571,
						3575,
						3579,
						3570,
						3536,
						3577,
						3576,
						3588,
						3568,
						3569,
						3546,
						3541,
						3591,
						3578
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/layout/SideBar/index.tsx",
					"line": 6,
					"character": 23
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1,
					"name": "Styles"
				}
			]
		},
		{
			"id": 674,
			"name": "SimpleComponentStyles",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 678,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/theme.ts",
							"line": 28,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 677,
					"name": "init",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/theme.ts",
							"line": 27,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 675,
					"name": "primary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/theme.ts",
							"line": 25,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 676,
					"name": "secondary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/theme.ts",
							"line": 26,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						678,
						677,
						675,
						676
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/theme.ts",
					"line": 24,
					"character": 38
				}
			]
		},
		{
			"id": 77,
			"name": "Space",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Space Interface that will generate utility classes for the white space on x or y of every child inside the parrent.<br/>\nThis is used for example in the side bar so that you dont need to add a margin to each child element for white space.",
				"tags": [
					{
						"tag": "example",
						"text": "```{space: { y: '12' }```\n"
					}
				]
			},
			"children": [
				{
					"id": 78,
					"name": "x",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 140,
							"character": 3
						}
					],
					"type": {
						"type": "reference",
						"id": 187,
						"name": "Spacing"
					}
				},
				{
					"id": 79,
					"name": "y",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 141,
							"character": 3
						}
					],
					"type": {
						"type": "reference",
						"id": 187,
						"name": "Spacing"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						78,
						79
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 139,
					"character": 22
				}
			]
		},
		{
			"id": 1,
			"name": "Styles",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 59,
					"name": "active",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 59,
						"name": "Events.active"
					}
				},
				{
					"id": 11,
					"name": "background",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the background css prop.<br/>\nYou can pass a single string with a color name or an object with color name opacity and bg size.",
						"tags": [
							{
								"tag": "example",
								"text": "```{background: 'red'}```"
							},
							{
								"tag": "example",
								"text": "```{background: {color: 'red', opacity: '20', size: 'cover'}}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 274,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 184,
								"name": "Colors"
							},
							{
								"type": "reference",
								"id": 61,
								"name": "Background"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 11,
						"name": "Utility.background"
					}
				},
				{
					"id": 33,
					"name": "border",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 307,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 67,
						"name": "Border"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 33,
						"name": "Utility.border"
					}
				},
				{
					"id": 6,
					"name": "cursor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the cursor css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{cursor: 'pointer'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 245,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "default"
							},
							{
								"type": "stringLiteral",
								"value": "pointer"
							},
							{
								"type": "stringLiteral",
								"value": "wait"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "not-allowed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 6,
						"name": "Utility.cursor"
					}
				},
				{
					"id": 3,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the display css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 211,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "hidden"
							},
							{
								"type": "stringLiteral",
								"value": "block"
							},
							{
								"type": "stringLiteral",
								"value": "inline-block"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "flex"
							},
							{
								"type": "stringLiteral",
								"value": "inline-flex"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "inline-grid"
							},
							{
								"type": "stringLiteral",
								"value": "table"
							},
							{
								"type": "stringLiteral",
								"value": "table-caption"
							},
							{
								"type": "stringLiteral",
								"value": "table-cell"
							},
							{
								"type": "stringLiteral",
								"value": "flow-root"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3,
						"name": "Utility.display"
					}
				},
				{
					"id": 4,
					"name": "flex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the flex css prop.<br/>\nHere you can pass all flex props for generating flex utility classes, <br/>\nRequires a display: 'flex' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex', flex: {direction: 'column', align: 'center', justify: 'center', flex: 'auto' }}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 231,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 97,
						"name": "Flex"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 4,
						"name": "Utility.flex"
					}
				},
				{
					"id": 60,
					"name": "focus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 366,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 60,
						"name": "Events.focus"
					}
				},
				{
					"id": 13,
					"name": "font",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-weight, font-family, font-style, font antialiasing css props.<br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{font: {weight: 'semibold', family: 'sans', style: 'italic', smoothing: 'antialiased'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 287,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 92,
						"name": "Font"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 13,
						"name": "Utility.font"
					}
				},
				{
					"id": 5,
					"name": "grid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the grid css prop.<br/>\nHere you can pass all grid props for generating grid utility classes, <br/>\nRequires a display: 'grid' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'grid', grid: {cols: '4', gap: '4' }```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 239,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 103,
						"name": "Grid"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 5,
						"name": "Utility.grid"
					}
				},
				{
					"id": 8,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the height css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{height: 'full'}```"
							},
							{
								"tag": "example",
								"text": "```{height: '64'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 258,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"height\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 8,
						"name": "Utility.height"
					}
				},
				{
					"id": 58,
					"name": "hover",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 364,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 58,
						"name": "Events.hover"
					}
				},
				{
					"id": 56,
					"name": "lg",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 375,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 56,
						"name": "MediaQuery.lg"
					}
				},
				{
					"id": 14,
					"name": "margin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the margin css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{margin: '4'}```"
							},
							{
								"tag": "example",
								"text": "```{margin: ['4','2','4','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 294,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 15,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 22,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 102
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 18,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 49
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 19,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 64
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 17,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 32
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 16,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 20,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 76
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 21,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 88
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												22,
												18,
												19,
												17,
												16,
												20,
												21
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 14,
						"name": "Utility.margin"
					}
				},
				{
					"id": 10,
					"name": "maxHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxHeight css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxHeight: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 268,
							"character": 11
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxHeight\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 10,
						"name": "Utility.maxHeight"
					}
				},
				{
					"id": 9,
					"name": "maxWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxWidth css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxWidth: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 263,
							"character": 10
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxWidth\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 9,
						"name": "Utility.maxWidth"
					}
				},
				{
					"id": 55,
					"name": "md",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 374,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 55,
						"name": "MediaQuery.md"
					}
				},
				{
					"id": 32,
					"name": "opacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the opacity css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{opacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 306,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 188,
						"name": "Opacity"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 32,
						"name": "Utility.opacity"
					}
				},
				{
					"id": 49,
					"name": "overflow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for overflow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{overflow: {x: 'hidden'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 357,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 50,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 53,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 44
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 51,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 52,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												53,
												51,
												52
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 49,
						"name": "Utility.overflow"
					}
				},
				{
					"id": 23,
					"name": "padding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the padding css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{padding: '3'}```"
							},
							{
								"tag": "example",
								"text": "```{padding: ['6','2','6','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 301,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 24,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 31,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 109
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 27,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 52
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 28,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 68
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 26,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 25,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 29,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 81
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 30,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 94
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												31,
												27,
												28,
												26,
												25,
												29,
												30
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 23,
						"name": "Utility.padding"
					}
				},
				{
					"id": 37,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '400'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 323,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 38,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 39,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 324,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 184,
												"name": "Colors"
											}
										},
										{
											"id": 40,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 325,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"id": 185,
												"name": "ColorVariants"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												39,
												40
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 37,
						"name": "Utility.placeholder"
					}
				},
				{
					"id": 41,
					"name": "placeholderOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color opacity.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '700',  placeholderOpacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 331,
							"character": 20
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"placeholderOpacity\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 41,
						"name": "Utility.placeholderOpacity"
					}
				},
				{
					"id": 45,
					"name": "placement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for position placement.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute', placement: 'inset-0'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 351,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 46,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 48,
											"name": "inset",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 42
												}
											],
											"type": {
												"type": "reference",
												"id": 197,
												"name": "Inset"
											}
										},
										{
											"id": 47,
											"name": "position",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 196,
												"name": "Placement"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												48,
												47
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 45,
						"name": "Utility.placement"
					}
				},
				{
					"id": 36,
					"name": "pointerEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the all pointer events.",
						"tags": [
							{
								"tag": "example",
								"text": "```{pointerEvents: 'none'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 318,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "auto"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 36,
						"name": "Utility.pointerEvents"
					}
				},
				{
					"id": 2,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the position css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 205,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "static"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							},
							{
								"type": "stringLiteral",
								"value": "absolute"
							},
							{
								"type": "stringLiteral",
								"value": "relative"
							},
							{
								"type": "stringLiteral",
								"value": "sticky"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2,
						"name": "Utility.position"
					}
				},
				{
					"id": 43,
					"name": "rounded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined border radius classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{rounded: 'full'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 341,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 193,
								"name": "BorderRadius"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"name": "BorderRadius"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 43,
						"name": "Utility.rounded"
					}
				},
				{
					"id": 42,
					"name": "shadow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined box shadow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{shadow: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 336,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"boxShadow\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 42,
						"name": "Utility.shadow"
					}
				},
				{
					"id": 54,
					"name": "sm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 373,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 54,
						"name": "MediaQuery.sm"
					}
				},
				{
					"id": 34,
					"name": "space",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 308,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 77,
						"name": "Space"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 34,
						"name": "Utility.space"
					}
				},
				{
					"id": 35,
					"name": "table",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the table columns widths.",
						"tags": [
							{
								"tag": "example",
								"text": "```{table: 'auto'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 313,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 35,
						"name": "Utility.table"
					}
				},
				{
					"id": 12,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-size, color, color-opacity, line-height, text-align, ... css props. <br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{text: {size: 'lg'} }```"
							},
							{
								"tag": "example",
								"text": "```{text: {size: 'xl', color: 'blue-500', leading: 'tight', align:'center'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 281,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 80,
						"name": "Text"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 12,
						"name": "Utility.text"
					}
				},
				{
					"id": 7,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the width css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{width: '64'}```"
							},
							{
								"tag": "example",
								"text": "```{width: '1/2'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 252,
							"character": 7
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"width\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 7,
						"name": "Utility.width"
					}
				},
				{
					"id": 57,
					"name": "xl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 376,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 57,
						"name": "MediaQuery.xl"
					}
				},
				{
					"id": 44,
					"name": "zIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined z-index classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{zIndex: '60'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 346,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"zIndex\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 44,
						"name": "Utility.zIndex"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						59,
						11,
						33,
						6,
						3,
						4,
						60,
						13,
						5,
						8,
						58,
						56,
						14,
						10,
						9,
						55,
						32,
						49,
						23,
						37,
						41,
						45,
						36,
						2,
						43,
						42,
						54,
						34,
						35,
						12,
						7,
						57,
						44
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 3,
					"character": 31
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 122,
					"name": "Utility"
				},
				{
					"type": "reference",
					"id": 179,
					"name": "MediaQuery"
				},
				{
					"type": "reference",
					"id": 175,
					"name": "Events"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 472,
					"name": "SelectStyles"
				},
				{
					"type": "reference",
					"id": 563,
					"name": "DatePickerStyles"
				},
				{
					"type": "reference",
					"id": 939,
					"name": "CheckboxStyles"
				},
				{
					"type": "reference",
					"id": 2678,
					"name": "TextInputStyles"
				},
				{
					"type": "reference",
					"id": 2751,
					"name": "TextCheckboxStyles"
				},
				{
					"type": "reference",
					"id": 2825,
					"name": "RadioGroupStyles"
				},
				{
					"type": "reference",
					"id": 2914,
					"name": "ScrollbarsStyles"
				},
				{
					"type": "reference",
					"id": 3086,
					"name": "ModalStyles"
				},
				{
					"type": "reference",
					"id": 3163,
					"name": "LoaderStyles"
				},
				{
					"type": "reference",
					"id": 3289,
					"name": "CollapseStyles"
				},
				{
					"type": "reference",
					"id": 3363,
					"name": "RangeSliderStyles"
				},
				{
					"type": "reference",
					"id": 3533,
					"name": "SideBarStyles"
				}
			]
		},
		{
			"id": 3516,
			"name": "TabProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3517,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles for the Button of the tab."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Tabs/index.tsx",
							"line": 28,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 3513,
						"name": "TabStyles"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3517
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Tabs/index.tsx",
					"line": 24,
					"character": 25
				}
			]
		},
		{
			"id": 3513,
			"name": "TabStyles",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 3515,
					"name": "active",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles for the active tab."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Tabs/index.tsx",
							"line": 21,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 3514,
					"name": "button",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles when the tab is not active."
					},
					"sources": [
						{
							"fileName": "src/components/complex/Tabs/index.tsx",
							"line": 17,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3515,
						3514
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Tabs/index.tsx",
					"line": 13,
					"character": 26
				}
			]
		},
		{
			"id": 1065,
			"name": "Table",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1067,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/Table/index.tsx",
							"line": 7,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "React.ReactNode"
					}
				},
				{
					"id": 1068,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/Table/index.tsx",
							"line": 8,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1066,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/Table/index.tsx",
							"line": 6,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1067,
						1068,
						1066
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/Table/index.tsx",
					"line": 5,
					"character": 15
				}
			]
		},
		{
			"id": 1335,
			"name": "TableBody",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1362,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1773,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 230,
						"name": "HTMLAttributes.about"
					}
				},
				{
					"id": 1345,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1749,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 212,
						"name": "HTMLAttributes.accessKey"
					}
				},
				{
					"id": 1384,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1556,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 252,
						"name": "AriaAttributes.'aria-activedescendant'"
					}
				},
				{
					"id": 1385,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1558,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 253,
						"name": "AriaAttributes.'aria-atomic'"
					}
				},
				{
					"id": 1386,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1563,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "list"
							},
							{
								"type": "stringLiteral",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 254,
						"name": "AriaAttributes.'aria-autocomplete'"
					}
				},
				{
					"id": 1387,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1565,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 255,
						"name": "AriaAttributes.'aria-busy'"
					}
				},
				{
					"id": 1388,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-pressed @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1570,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "mixed"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 256,
						"name": "AriaAttributes.'aria-checked'"
					}
				},
				{
					"id": 1389,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1575,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 257,
						"name": "AriaAttributes.'aria-colcount'"
					}
				},
				{
					"id": 1390,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colcount @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1580,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 258,
						"name": "AriaAttributes.'aria-colindex'"
					}
				},
				{
					"id": 1391,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1585,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 259,
						"name": "AriaAttributes.'aria-colspan'"
					}
				},
				{
					"id": 1392,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-owns.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1590,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 260,
						"name": "AriaAttributes.'aria-controls'"
					}
				},
				{
					"id": 1393,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the element that represents the current item within a container or set of related elements."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1592,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "page"
							},
							{
								"type": "stringLiteral",
								"value": "step"
							},
							{
								"type": "stringLiteral",
								"value": "location"
							},
							{
								"type": "stringLiteral",
								"value": "date"
							},
							{
								"type": "stringLiteral",
								"value": "time"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 261,
						"name": "AriaAttributes.'aria-current'"
					}
				},
				{
					"id": 1394,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1597,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 262,
						"name": "AriaAttributes.'aria-describedby'"
					}
				},
				{
					"id": 1395,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides a detailed, extended description for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1602,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 263,
						"name": "AriaAttributes.'aria-details'"
					}
				},
				{
					"id": 1396,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-hidden @see aria-readonly.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1607,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 264,
						"name": "AriaAttributes.'aria-disabled'"
					}
				},
				{
					"id": 1397,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1612,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "copy"
							},
							{
								"type": "stringLiteral",
								"value": "execute"
							},
							{
								"type": "stringLiteral",
								"value": "link"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 265,
						"name": "AriaAttributes.'aria-dropeffect'"
					}
				},
				{
					"id": 1398,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides an error message for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-invalid @see aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1617,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 266,
						"name": "AriaAttributes.'aria-errormessage'"
					}
				},
				{
					"id": 1399,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1619,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 267,
						"name": "AriaAttributes.'aria-expanded'"
					}
				},
				{
					"id": 1400,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1624,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 268,
						"name": "AriaAttributes.'aria-flowto'"
					}
				},
				{
					"id": 1401,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1629,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 269,
						"name": "AriaAttributes.'aria-grabbed'"
					}
				},
				{
					"id": 1402,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1631,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "menu"
							},
							{
								"type": "stringLiteral",
								"value": "listbox"
							},
							{
								"type": "stringLiteral",
								"value": "tree"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "dialog"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 270,
						"name": "AriaAttributes.'aria-haspopup'"
					}
				},
				{
					"id": 1403,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element is exposed to an accessibility API.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1636,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 271,
						"name": "AriaAttributes.'aria-hidden'"
					}
				},
				{
					"id": 1404,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the entered value does not conform to the format expected by the application.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-errormessage.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1641,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "grammar"
							},
							{
								"type": "stringLiteral",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 272,
						"name": "AriaAttributes.'aria-invalid'"
					}
				},
				{
					"id": 1405,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1643,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 273,
						"name": "AriaAttributes.'aria-keyshortcuts'"
					}
				},
				{
					"id": 1406,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1648,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 274,
						"name": "AriaAttributes.'aria-label'"
					}
				},
				{
					"id": 1407,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1653,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 275,
						"name": "AriaAttributes.'aria-labelledby'"
					}
				},
				{
					"id": 1408,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the hierarchical level of an element within a structure."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1655,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 276,
						"name": "AriaAttributes.'aria-level'"
					}
				},
				{
					"id": 1409,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1657,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "off"
							},
							{
								"type": "stringLiteral",
								"value": "assertive"
							},
							{
								"type": "stringLiteral",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 277,
						"name": "AriaAttributes.'aria-live'"
					}
				},
				{
					"id": 1410,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether an element is modal when displayed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1659,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 278,
						"name": "AriaAttributes.'aria-modal'"
					}
				},
				{
					"id": 1411,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1661,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 279,
						"name": "AriaAttributes.'aria-multiline'"
					}
				},
				{
					"id": 1412,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1663,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 280,
						"name": "AriaAttributes.'aria-multiselectable'"
					}
				},
				{
					"id": 1413,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1665,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "horizontal"
							},
							{
								"type": "stringLiteral",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 281,
						"name": "AriaAttributes.'aria-orientation'"
					}
				},
				{
					"id": 1414,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-controls.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1671,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 282,
						"name": "AriaAttributes.'aria-owns'"
					}
				},
				{
					"id": 1415,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1676,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 283,
						"name": "AriaAttributes.'aria-placeholder'"
					}
				},
				{
					"id": 1416,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-setsize.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1681,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 284,
						"name": "AriaAttributes.'aria-posinset'"
					}
				},
				{
					"id": 1417,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1686,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "mixed"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 285,
						"name": "AriaAttributes.'aria-pressed'"
					}
				},
				{
					"id": 1418,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is not editable, but is otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1691,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 286,
						"name": "AriaAttributes.'aria-readonly'"
					}
				},
				{
					"id": 1419,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-atomic.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1696,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "additions"
							},
							{
								"type": "stringLiteral",
								"value": "additions removals"
							},
							{
								"type": "stringLiteral",
								"value": "additions text"
							},
							{
								"type": "stringLiteral",
								"value": "all"
							},
							{
								"type": "stringLiteral",
								"value": "removals"
							},
							{
								"type": "stringLiteral",
								"value": "removals additions"
							},
							{
								"type": "stringLiteral",
								"value": "removals text"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "text additions"
							},
							{
								"type": "stringLiteral",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 287,
						"name": "AriaAttributes.'aria-relevant'"
					}
				},
				{
					"id": 1420,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that user input is required on the element before a form may be submitted."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1698,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 288,
						"name": "AriaAttributes.'aria-required'"
					}
				},
				{
					"id": 1421,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a human-readable, author-localized description for the role of an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1700,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 289,
						"name": "AriaAttributes.'aria-roledescription'"
					}
				},
				{
					"id": 1422,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1705,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 290,
						"name": "AriaAttributes.'aria-rowcount'"
					}
				},
				{
					"id": 1423,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowcount @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1710,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 291,
						"name": "AriaAttributes.'aria-rowindex'"
					}
				},
				{
					"id": 1424,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1715,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 292,
						"name": "AriaAttributes.'aria-rowspan'"
					}
				},
				{
					"id": 1425,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"selected\" state of various widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-pressed.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1720,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 293,
						"name": "AriaAttributes.'aria-selected'"
					}
				},
				{
					"id": 1426,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-posinset.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1725,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 294,
						"name": "AriaAttributes.'aria-setsize'"
					}
				},
				{
					"id": 1427,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1727,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "ascending"
							},
							{
								"type": "stringLiteral",
								"value": "descending"
							},
							{
								"type": "stringLiteral",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 295,
						"name": "AriaAttributes.'aria-sort'"
					}
				},
				{
					"id": 1428,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the maximum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1729,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 296,
						"name": "AriaAttributes.'aria-valuemax'"
					}
				},
				{
					"id": 1429,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the minimum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1731,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 297,
						"name": "AriaAttributes.'aria-valuemin'"
					}
				},
				{
					"id": 1430,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the current value for a range widget.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-valuetext.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1736,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 298,
						"name": "AriaAttributes.'aria-valuenow'"
					}
				},
				{
					"id": 1431,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1738,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 299,
						"name": "AriaAttributes.'aria-valuetext'"
					}
				},
				{
					"id": 1370,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1783,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 238,
						"name": "HTMLAttributes.autoCapitalize"
					}
				},
				{
					"id": 1371,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1784,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 239,
						"name": "HTMLAttributes.autoCorrect"
					}
				},
				{
					"id": 1372,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1785,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 240,
						"name": "HTMLAttributes.autoSave"
					}
				},
				{
					"id": 1337,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/TableBody/index.tsx",
							"line": 6,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "React.ReactNode"
					},
					"overwrites": {
						"type": "reference",
						"name": "DOMAttributes.children"
					}
				},
				{
					"id": 1338,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/TableBody/index.tsx",
							"line": 7,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"id": 213,
						"name": "HTMLAttributes.className"
					}
				},
				{
					"id": 1373,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1786,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 241,
						"name": "HTMLAttributes.color"
					}
				},
				{
					"id": 1346,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1751,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Booleanish"
							},
							{
								"type": "stringLiteral",
								"value": "inherit"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 214,
						"name": "HTMLAttributes.contentEditable"
					}
				},
				{
					"id": 1347,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1752,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 215,
						"name": "HTMLAttributes.contextMenu"
					}
				},
				{
					"id": 1432,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1347,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1433,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1434,
											"name": "__html",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 1348,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1434
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 300,
						"name": "DOMAttributes.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 1363,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1774,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 231,
						"name": "HTMLAttributes.datatype"
					}
				},
				{
					"id": 1341,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1743,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 208,
						"name": "HTMLAttributes.defaultChecked"
					}
				},
				{
					"id": 1342,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1744,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "ReadonlyArray"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 209,
						"name": "HTMLAttributes.defaultValue"
					}
				},
				{
					"id": 1348,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1753,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 216,
						"name": "HTMLAttributes.dir"
					}
				},
				{
					"id": 1349,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1754,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 217,
						"name": "HTMLAttributes.draggable"
					}
				},
				{
					"id": 1350,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1755,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 218,
						"name": "HTMLAttributes.hidden"
					}
				},
				{
					"id": 1351,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1756,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 219,
						"name": "HTMLAttributes.id"
					}
				},
				{
					"id": 1364,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1775,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 232,
						"name": "HTMLAttributes.inlist"
					}
				},
				{
					"id": 1382,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1801,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "tel"
							},
							{
								"type": "stringLiteral",
								"value": "url"
							},
							{
								"type": "stringLiteral",
								"value": "email"
							},
							{
								"type": "stringLiteral",
								"value": "numeric"
							},
							{
								"type": "stringLiteral",
								"value": "decimal"
							},
							{
								"type": "stringLiteral",
								"value": "search"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 250,
						"name": "HTMLAttributes.inputMode"
					}
				},
				{
					"id": 1383,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1806,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 251,
						"name": "HTMLAttributes.is"
					}
				},
				{
					"id": 1377,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1790,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 245,
						"name": "HTMLAttributes.itemID"
					}
				},
				{
					"id": 1374,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1787,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 242,
						"name": "HTMLAttributes.itemProp"
					}
				},
				{
					"id": 1378,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1791,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 246,
						"name": "HTMLAttributes.itemRef"
					}
				},
				{
					"id": 1375,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1788,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 243,
						"name": "HTMLAttributes.itemScope"
					}
				},
				{
					"id": 1376,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1789,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 244,
						"name": "HTMLAttributes.itemType"
					}
				},
				{
					"id": 1340,
					"name": "key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 133,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Key"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1077,
						"name": "Attributes.key"
					}
				},
				{
					"id": 1352,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1757,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 220,
						"name": "HTMLAttributes.lang"
					}
				},
				{
					"id": 1473,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1402,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 341,
						"name": "DOMAttributes.onAbort"
					}
				},
				{
					"id": 1474,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1403,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 342,
						"name": "DOMAttributes.onAbortCapture"
					}
				},
				{
					"id": 1589,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1532,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 457,
						"name": "DOMAttributes.onAnimationEnd"
					}
				},
				{
					"id": 1590,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1533,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 458,
						"name": "DOMAttributes.onAnimationEndCapture"
					}
				},
				{
					"id": 1591,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 459,
						"name": "DOMAttributes.onAnimationIteration"
					}
				},
				{
					"id": 1592,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 460,
						"name": "DOMAttributes.onAnimationIterationCapture"
					}
				},
				{
					"id": 1587,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1530,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 455,
						"name": "DOMAttributes.onAnimationStart"
					}
				},
				{
					"id": 1588,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 456,
						"name": "DOMAttributes.onAnimationStartCapture"
					}
				},
				{
					"id": 1517,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1448,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 385,
						"name": "DOMAttributes.onAuxClick"
					}
				},
				{
					"id": 1518,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 386,
						"name": "DOMAttributes.onAuxClickCapture"
					}
				},
				{
					"id": 1453,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 321,
						"name": "DOMAttributes.onBeforeInput"
					}
				},
				{
					"id": 1454,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 322,
						"name": "DOMAttributes.onBeforeInputCapture"
					}
				},
				{
					"id": 1449,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1370,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 317,
						"name": "DOMAttributes.onBlur"
					}
				},
				{
					"id": 1450,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1371,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 318,
						"name": "DOMAttributes.onBlurCapture"
					}
				},
				{
					"id": 1475,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 343,
						"name": "DOMAttributes.onCanPlay"
					}
				},
				{
					"id": 1476,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 344,
						"name": "DOMAttributes.onCanPlayCapture"
					}
				},
				{
					"id": 1477,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 345,
						"name": "DOMAttributes.onCanPlayThrough"
					}
				},
				{
					"id": 1478,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 346,
						"name": "DOMAttributes.onCanPlayThroughCapture"
					}
				},
				{
					"id": 1451,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1374,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 319,
						"name": "DOMAttributes.onChange"
					}
				},
				{
					"id": 1452,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1375,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 320,
						"name": "DOMAttributes.onChangeCapture"
					}
				},
				{
					"id": 1519,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 387,
						"name": "DOMAttributes.onClick"
					}
				},
				{
					"id": 1520,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 388,
						"name": "DOMAttributes.onClickCapture"
					}
				},
				{
					"id": 1441,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1360,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 309,
						"name": "DOMAttributes.onCompositionEnd"
					}
				},
				{
					"id": 1442,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1361,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 310,
						"name": "DOMAttributes.onCompositionEndCapture"
					}
				},
				{
					"id": 1443,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1362,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 311,
						"name": "DOMAttributes.onCompositionStart"
					}
				},
				{
					"id": 1444,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1363,
							"character": 33
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 312,
						"name": "DOMAttributes.onCompositionStartCapture"
					}
				},
				{
					"id": 1445,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1364,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 313,
						"name": "DOMAttributes.onCompositionUpdate"
					}
				},
				{
					"id": 1446,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1365,
							"character": 34
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 314,
						"name": "DOMAttributes.onCompositionUpdateCapture"
					}
				},
				{
					"id": 1521,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 389,
						"name": "DOMAttributes.onContextMenu"
					}
				},
				{
					"id": 1522,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 390,
						"name": "DOMAttributes.onContextMenuCapture"
					}
				},
				{
					"id": 1435,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1352,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 303,
						"name": "DOMAttributes.onCopy"
					}
				},
				{
					"id": 1436,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1353,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 304,
						"name": "DOMAttributes.onCopyCapture"
					}
				},
				{
					"id": 1437,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1354,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 305,
						"name": "DOMAttributes.onCut"
					}
				},
				{
					"id": 1438,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1355,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 306,
						"name": "DOMAttributes.onCutCapture"
					}
				},
				{
					"id": 1523,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 391,
						"name": "DOMAttributes.onDoubleClick"
					}
				},
				{
					"id": 1524,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 392,
						"name": "DOMAttributes.onDoubleClickCapture"
					}
				},
				{
					"id": 1525,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 393,
						"name": "DOMAttributes.onDrag"
					}
				},
				{
					"id": 1526,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 394,
						"name": "DOMAttributes.onDragCapture"
					}
				},
				{
					"id": 1527,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 395,
						"name": "DOMAttributes.onDragEnd"
					}
				},
				{
					"id": 1528,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 396,
						"name": "DOMAttributes.onDragEndCapture"
					}
				},
				{
					"id": 1529,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 397,
						"name": "DOMAttributes.onDragEnter"
					}
				},
				{
					"id": 1530,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 398,
						"name": "DOMAttributes.onDragEnterCapture"
					}
				},
				{
					"id": 1531,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 399,
						"name": "DOMAttributes.onDragExit"
					}
				},
				{
					"id": 1532,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 400,
						"name": "DOMAttributes.onDragExitCapture"
					}
				},
				{
					"id": 1533,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 401,
						"name": "DOMAttributes.onDragLeave"
					}
				},
				{
					"id": 1534,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 402,
						"name": "DOMAttributes.onDragLeaveCapture"
					}
				},
				{
					"id": 1535,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 403,
						"name": "DOMAttributes.onDragOver"
					}
				},
				{
					"id": 1536,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 404,
						"name": "DOMAttributes.onDragOverCapture"
					}
				},
				{
					"id": 1537,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 405,
						"name": "DOMAttributes.onDragStart"
					}
				},
				{
					"id": 1538,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 406,
						"name": "DOMAttributes.onDragStartCapture"
					}
				},
				{
					"id": 1539,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 407,
						"name": "DOMAttributes.onDrop"
					}
				},
				{
					"id": 1540,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 408,
						"name": "DOMAttributes.onDropCapture"
					}
				},
				{
					"id": 1479,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 347,
						"name": "DOMAttributes.onDurationChange"
					}
				},
				{
					"id": 1480,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 348,
						"name": "DOMAttributes.onDurationChangeCapture"
					}
				},
				{
					"id": 1481,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 349,
						"name": "DOMAttributes.onEmptied"
					}
				},
				{
					"id": 1482,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 350,
						"name": "DOMAttributes.onEmptiedCapture"
					}
				},
				{
					"id": 1483,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 351,
						"name": "DOMAttributes.onEncrypted"
					}
				},
				{
					"id": 1484,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 352,
						"name": "DOMAttributes.onEncryptedCapture"
					}
				},
				{
					"id": 1485,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 353,
						"name": "DOMAttributes.onEnded"
					}
				},
				{
					"id": 1486,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 354,
						"name": "DOMAttributes.onEndedCapture"
					}
				},
				{
					"id": 1465,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 333,
						"name": "DOMAttributes.onError"
					}
				},
				{
					"id": 1466,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 334,
						"name": "DOMAttributes.onErrorCapture"
					}
				},
				{
					"id": 1447,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1368,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 315,
						"name": "DOMAttributes.onFocus"
					}
				},
				{
					"id": 1448,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1369,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 316,
						"name": "DOMAttributes.onFocusCapture"
					}
				},
				{
					"id": 1579,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 447,
						"name": "DOMAttributes.onGotPointerCapture"
					}
				},
				{
					"id": 1580,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 34
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 448,
						"name": "DOMAttributes.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 1455,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1378,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 323,
						"name": "DOMAttributes.onInput"
					}
				},
				{
					"id": 1456,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1379,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 324,
						"name": "DOMAttributes.onInputCapture"
					}
				},
				{
					"id": 1461,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 329,
						"name": "DOMAttributes.onInvalid"
					}
				},
				{
					"id": 1462,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 330,
						"name": "DOMAttributes.onInvalidCapture"
					}
				},
				{
					"id": 1467,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1394,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 335,
						"name": "DOMAttributes.onKeyDown"
					}
				},
				{
					"id": 1468,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 336,
						"name": "DOMAttributes.onKeyDownCapture"
					}
				},
				{
					"id": 1469,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1396,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 337,
						"name": "DOMAttributes.onKeyPress"
					}
				},
				{
					"id": 1470,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1397,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 338,
						"name": "DOMAttributes.onKeyPressCapture"
					}
				},
				{
					"id": 1471,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 339,
						"name": "DOMAttributes.onKeyUp"
					}
				},
				{
					"id": 1472,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 340,
						"name": "DOMAttributes.onKeyUpCapture"
					}
				},
				{
					"id": 1463,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1388,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 331,
						"name": "DOMAttributes.onLoad"
					}
				},
				{
					"id": 1464,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1389,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 332,
						"name": "DOMAttributes.onLoadCapture"
					}
				},
				{
					"id": 1491,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 359,
						"name": "DOMAttributes.onLoadStart"
					}
				},
				{
					"id": 1492,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 360,
						"name": "DOMAttributes.onLoadStartCapture"
					}
				},
				{
					"id": 1487,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1416,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 355,
						"name": "DOMAttributes.onLoadedData"
					}
				},
				{
					"id": 1488,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1417,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 356,
						"name": "DOMAttributes.onLoadedDataCapture"
					}
				},
				{
					"id": 1489,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 357,
						"name": "DOMAttributes.onLoadedMetadata"
					}
				},
				{
					"id": 1490,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 358,
						"name": "DOMAttributes.onLoadedMetadataCapture"
					}
				},
				{
					"id": 1581,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1518,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 449,
						"name": "DOMAttributes.onLostPointerCapture"
					}
				},
				{
					"id": 1582,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1519,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 450,
						"name": "DOMAttributes.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 1541,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 409,
						"name": "DOMAttributes.onMouseDown"
					}
				},
				{
					"id": 1542,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 410,
						"name": "DOMAttributes.onMouseDownCapture"
					}
				},
				{
					"id": 1543,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 411,
						"name": "DOMAttributes.onMouseEnter"
					}
				},
				{
					"id": 1544,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 412,
						"name": "DOMAttributes.onMouseLeave"
					}
				},
				{
					"id": 1545,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 413,
						"name": "DOMAttributes.onMouseMove"
					}
				},
				{
					"id": 1546,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 414,
						"name": "DOMAttributes.onMouseMoveCapture"
					}
				},
				{
					"id": 1547,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 415,
						"name": "DOMAttributes.onMouseOut"
					}
				},
				{
					"id": 1548,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 416,
						"name": "DOMAttributes.onMouseOutCapture"
					}
				},
				{
					"id": 1549,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1480,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 417,
						"name": "DOMAttributes.onMouseOver"
					}
				},
				{
					"id": 1550,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1481,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 418,
						"name": "DOMAttributes.onMouseOverCapture"
					}
				},
				{
					"id": 1551,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 419,
						"name": "DOMAttributes.onMouseUp"
					}
				},
				{
					"id": 1552,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 420,
						"name": "DOMAttributes.onMouseUpCapture"
					}
				},
				{
					"id": 1439,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1356,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 307,
						"name": "DOMAttributes.onPaste"
					}
				},
				{
					"id": 1440,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1357,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 308,
						"name": "DOMAttributes.onPasteCapture"
					}
				},
				{
					"id": 1493,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1422,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 361,
						"name": "DOMAttributes.onPause"
					}
				},
				{
					"id": 1494,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1423,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 362,
						"name": "DOMAttributes.onPauseCapture"
					}
				},
				{
					"id": 1495,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 363,
						"name": "DOMAttributes.onPlay"
					}
				},
				{
					"id": 1496,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 364,
						"name": "DOMAttributes.onPlayCapture"
					}
				},
				{
					"id": 1497,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1426,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 365,
						"name": "DOMAttributes.onPlaying"
					}
				},
				{
					"id": 1498,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 366,
						"name": "DOMAttributes.onPlayingCapture"
					}
				},
				{
					"id": 1569,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 437,
						"name": "DOMAttributes.onPointerCancel"
					}
				},
				{
					"id": 1570,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 438,
						"name": "DOMAttributes.onPointerCancelCapture"
					}
				},
				{
					"id": 1563,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1500,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 431,
						"name": "DOMAttributes.onPointerDown"
					}
				},
				{
					"id": 1564,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 432,
						"name": "DOMAttributes.onPointerDownCapture"
					}
				},
				{
					"id": 1571,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 439,
						"name": "DOMAttributes.onPointerEnter"
					}
				},
				{
					"id": 1572,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 440,
						"name": "DOMAttributes.onPointerEnterCapture"
					}
				},
				{
					"id": 1573,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 441,
						"name": "DOMAttributes.onPointerLeave"
					}
				},
				{
					"id": 1574,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 442,
						"name": "DOMAttributes.onPointerLeaveCapture"
					}
				},
				{
					"id": 1565,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 433,
						"name": "DOMAttributes.onPointerMove"
					}
				},
				{
					"id": 1566,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 434,
						"name": "DOMAttributes.onPointerMoveCapture"
					}
				},
				{
					"id": 1577,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 445,
						"name": "DOMAttributes.onPointerOut"
					}
				},
				{
					"id": 1578,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 446,
						"name": "DOMAttributes.onPointerOutCapture"
					}
				},
				{
					"id": 1575,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 443,
						"name": "DOMAttributes.onPointerOver"
					}
				},
				{
					"id": 1576,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 444,
						"name": "DOMAttributes.onPointerOverCapture"
					}
				},
				{
					"id": 1567,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 435,
						"name": "DOMAttributes.onPointerUp"
					}
				},
				{
					"id": 1568,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 436,
						"name": "DOMAttributes.onPointerUpCapture"
					}
				},
				{
					"id": 1499,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1428,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 367,
						"name": "DOMAttributes.onProgress"
					}
				},
				{
					"id": 1500,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 368,
						"name": "DOMAttributes.onProgressCapture"
					}
				},
				{
					"id": 1501,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 369,
						"name": "DOMAttributes.onRateChange"
					}
				},
				{
					"id": 1502,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 370,
						"name": "DOMAttributes.onRateChangeCapture"
					}
				},
				{
					"id": 1457,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1380,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 325,
						"name": "DOMAttributes.onReset"
					}
				},
				{
					"id": 1458,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1381,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 326,
						"name": "DOMAttributes.onResetCapture"
					}
				},
				{
					"id": 1583,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1522,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 451,
						"name": "DOMAttributes.onScroll"
					}
				},
				{
					"id": 1584,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1523,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 452,
						"name": "DOMAttributes.onScrollCapture"
					}
				},
				{
					"id": 1503,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1432,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 371,
						"name": "DOMAttributes.onSeeked"
					}
				},
				{
					"id": 1504,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1433,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 372,
						"name": "DOMAttributes.onSeekedCapture"
					}
				},
				{
					"id": 1505,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 373,
						"name": "DOMAttributes.onSeeking"
					}
				},
				{
					"id": 1506,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 374,
						"name": "DOMAttributes.onSeekingCapture"
					}
				},
				{
					"id": 1553,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1486,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 421,
						"name": "DOMAttributes.onSelect"
					}
				},
				{
					"id": 1554,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 422,
						"name": "DOMAttributes.onSelectCapture"
					}
				},
				{
					"id": 1507,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 375,
						"name": "DOMAttributes.onStalled"
					}
				},
				{
					"id": 1508,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 376,
						"name": "DOMAttributes.onStalledCapture"
					}
				},
				{
					"id": 1459,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 327,
						"name": "DOMAttributes.onSubmit"
					}
				},
				{
					"id": 1460,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 328,
						"name": "DOMAttributes.onSubmitCapture"
					}
				},
				{
					"id": 1509,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 377,
						"name": "DOMAttributes.onSuspend"
					}
				},
				{
					"id": 1510,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 378,
						"name": "DOMAttributes.onSuspendCapture"
					}
				},
				{
					"id": 1511,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 379,
						"name": "DOMAttributes.onTimeUpdate"
					}
				},
				{
					"id": 1512,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 380,
						"name": "DOMAttributes.onTimeUpdateCapture"
					}
				},
				{
					"id": 1555,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1490,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 423,
						"name": "DOMAttributes.onTouchCancel"
					}
				},
				{
					"id": 1556,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 424,
						"name": "DOMAttributes.onTouchCancelCapture"
					}
				},
				{
					"id": 1557,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 425,
						"name": "DOMAttributes.onTouchEnd"
					}
				},
				{
					"id": 1558,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 426,
						"name": "DOMAttributes.onTouchEndCapture"
					}
				},
				{
					"id": 1559,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 427,
						"name": "DOMAttributes.onTouchMove"
					}
				},
				{
					"id": 1560,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 428,
						"name": "DOMAttributes.onTouchMoveCapture"
					}
				},
				{
					"id": 1561,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 429,
						"name": "DOMAttributes.onTouchStart"
					}
				},
				{
					"id": 1562,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 430,
						"name": "DOMAttributes.onTouchStartCapture"
					}
				},
				{
					"id": 1593,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1538,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 461,
						"name": "DOMAttributes.onTransitionEnd"
					}
				},
				{
					"id": 1594,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 462,
						"name": "DOMAttributes.onTransitionEndCapture"
					}
				},
				{
					"id": 1513,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 381,
						"name": "DOMAttributes.onVolumeChange"
					}
				},
				{
					"id": 1514,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 382,
						"name": "DOMAttributes.onVolumeChangeCapture"
					}
				},
				{
					"id": 1515,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 383,
						"name": "DOMAttributes.onWaiting"
					}
				},
				{
					"id": 1516,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 384,
						"name": "DOMAttributes.onWaitingCapture"
					}
				},
				{
					"id": 1585,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1526,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 453,
						"name": "DOMAttributes.onWheel"
					}
				},
				{
					"id": 1586,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 454,
						"name": "DOMAttributes.onWheelCapture"
					}
				},
				{
					"id": 1353,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1758,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 221,
						"name": "HTMLAttributes.placeholder"
					}
				},
				{
					"id": 1365,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1776,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 233,
						"name": "HTMLAttributes.prefix"
					}
				},
				{
					"id": 1366,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1777,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 234,
						"name": "HTMLAttributes.property"
					}
				},
				{
					"id": 1360,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1767,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 228,
						"name": "HTMLAttributes.radioGroup"
					}
				},
				{
					"id": 1339,
					"name": "ref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 139,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "LegacyRef"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1076,
						"name": "ClassAttributes.ref"
					}
				},
				{
					"id": 1367,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1778,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 235,
						"name": "HTMLAttributes.resource"
					}
				},
				{
					"id": 1379,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1792,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 247,
						"name": "HTMLAttributes.results"
					}
				},
				{
					"id": 1361,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1770,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 229,
						"name": "HTMLAttributes.role"
					}
				},
				{
					"id": 1380,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1793,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 248,
						"name": "HTMLAttributes.security"
					}
				},
				{
					"id": 1354,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1759,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 222,
						"name": "HTMLAttributes.slot"
					}
				},
				{
					"id": 1355,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1760,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 223,
						"name": "HTMLAttributes.spellCheck"
					}
				},
				{
					"id": 1356,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1761,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 224,
						"name": "HTMLAttributes.style"
					}
				},
				{
					"id": 1336,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/TableBody/index.tsx",
							"line": 5,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 1343,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1745,
							"character": 38
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 210,
						"name": "HTMLAttributes.suppressContentEditableWarning"
					}
				},
				{
					"id": 1344,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1746,
							"character": 32
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 211,
						"name": "HTMLAttributes.suppressHydrationWarning"
					}
				},
				{
					"id": 1357,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1762,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 225,
						"name": "HTMLAttributes.tabIndex"
					}
				},
				{
					"id": 1358,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1763,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 226,
						"name": "HTMLAttributes.title"
					}
				},
				{
					"id": 1359,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1764,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "yes"
							},
							{
								"type": "stringLiteral",
								"value": "no"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 227,
						"name": "HTMLAttributes.translate"
					}
				},
				{
					"id": 1368,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1779,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 236,
						"name": "HTMLAttributes.typeof"
					}
				},
				{
					"id": 1381,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1794,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "on"
							},
							{
								"type": "stringLiteral",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 249,
						"name": "HTMLAttributes.unselectable"
					}
				},
				{
					"id": 1369,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1780,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 237,
						"name": "HTMLAttributes.vocab"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1362,
						1345,
						1384,
						1385,
						1386,
						1387,
						1388,
						1389,
						1390,
						1391,
						1392,
						1393,
						1394,
						1395,
						1396,
						1397,
						1398,
						1399,
						1400,
						1401,
						1402,
						1403,
						1404,
						1405,
						1406,
						1407,
						1408,
						1409,
						1410,
						1411,
						1412,
						1413,
						1414,
						1415,
						1416,
						1417,
						1418,
						1419,
						1420,
						1421,
						1422,
						1423,
						1424,
						1425,
						1426,
						1427,
						1428,
						1429,
						1430,
						1431,
						1370,
						1371,
						1372,
						1337,
						1338,
						1373,
						1346,
						1347,
						1432,
						1363,
						1341,
						1342,
						1348,
						1349,
						1350,
						1351,
						1364,
						1382,
						1383,
						1377,
						1374,
						1378,
						1375,
						1376,
						1340,
						1352,
						1473,
						1474,
						1589,
						1590,
						1591,
						1592,
						1587,
						1588,
						1517,
						1518,
						1453,
						1454,
						1449,
						1450,
						1475,
						1476,
						1477,
						1478,
						1451,
						1452,
						1519,
						1520,
						1441,
						1442,
						1443,
						1444,
						1445,
						1446,
						1521,
						1522,
						1435,
						1436,
						1437,
						1438,
						1523,
						1524,
						1525,
						1526,
						1527,
						1528,
						1529,
						1530,
						1531,
						1532,
						1533,
						1534,
						1535,
						1536,
						1537,
						1538,
						1539,
						1540,
						1479,
						1480,
						1481,
						1482,
						1483,
						1484,
						1485,
						1486,
						1465,
						1466,
						1447,
						1448,
						1579,
						1580,
						1455,
						1456,
						1461,
						1462,
						1467,
						1468,
						1469,
						1470,
						1471,
						1472,
						1463,
						1464,
						1491,
						1492,
						1487,
						1488,
						1489,
						1490,
						1581,
						1582,
						1541,
						1542,
						1543,
						1544,
						1545,
						1546,
						1547,
						1548,
						1549,
						1550,
						1551,
						1552,
						1439,
						1440,
						1493,
						1494,
						1495,
						1496,
						1497,
						1498,
						1569,
						1570,
						1563,
						1564,
						1571,
						1572,
						1573,
						1574,
						1565,
						1566,
						1577,
						1578,
						1575,
						1576,
						1567,
						1568,
						1499,
						1500,
						1501,
						1502,
						1457,
						1458,
						1583,
						1584,
						1503,
						1504,
						1505,
						1506,
						1553,
						1554,
						1507,
						1508,
						1459,
						1460,
						1509,
						1510,
						1511,
						1512,
						1555,
						1556,
						1557,
						1558,
						1559,
						1560,
						1561,
						1562,
						1593,
						1594,
						1513,
						1514,
						1515,
						1516,
						1585,
						1586,
						1353,
						1365,
						1366,
						1360,
						1339,
						1367,
						1379,
						1361,
						1380,
						1354,
						1355,
						1356,
						1336,
						1343,
						1344,
						1357,
						1358,
						1359,
						1368,
						1381,
						1369
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/TableBody/index.tsx",
					"line": 4,
					"character": 19
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "HTMLTableSectionElement"
								}
							],
							"name": "ClassAttributes"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "HTMLTableSectionElement"
								}
							],
							"name": "HTMLAttributes"
						}
					]
				}
			]
		},
		{
			"id": 2128,
			"name": "TableDataCell",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2139,
					"name": "abbr",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2320,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2139,
						"name": "TdHTMLAttributes.abbr"
					}
				},
				{
					"id": 2164,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1773,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 230,
						"name": "HTMLAttributes.about"
					}
				},
				{
					"id": 2147,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1749,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 212,
						"name": "HTMLAttributes.accessKey"
					}
				},
				{
					"id": 2134,
					"name": "align",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2315,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "left"
							},
							{
								"type": "stringLiteral",
								"value": "center"
							},
							{
								"type": "stringLiteral",
								"value": "right"
							},
							{
								"type": "stringLiteral",
								"value": "justify"
							},
							{
								"type": "stringLiteral",
								"value": "char"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2134,
						"name": "TdHTMLAttributes.align"
					}
				},
				{
					"id": 2186,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1556,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 252,
						"name": "AriaAttributes.'aria-activedescendant'"
					}
				},
				{
					"id": 2187,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1558,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 253,
						"name": "AriaAttributes.'aria-atomic'"
					}
				},
				{
					"id": 2188,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1563,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "list"
							},
							{
								"type": "stringLiteral",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 254,
						"name": "AriaAttributes.'aria-autocomplete'"
					}
				},
				{
					"id": 2189,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1565,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 255,
						"name": "AriaAttributes.'aria-busy'"
					}
				},
				{
					"id": 2190,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-pressed @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1570,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "mixed"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 256,
						"name": "AriaAttributes.'aria-checked'"
					}
				},
				{
					"id": 2191,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1575,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 257,
						"name": "AriaAttributes.'aria-colcount'"
					}
				},
				{
					"id": 2192,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colcount @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1580,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 258,
						"name": "AriaAttributes.'aria-colindex'"
					}
				},
				{
					"id": 2193,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1585,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 259,
						"name": "AriaAttributes.'aria-colspan'"
					}
				},
				{
					"id": 2194,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-owns.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1590,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 260,
						"name": "AriaAttributes.'aria-controls'"
					}
				},
				{
					"id": 2195,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the element that represents the current item within a container or set of related elements."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1592,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "page"
							},
							{
								"type": "stringLiteral",
								"value": "step"
							},
							{
								"type": "stringLiteral",
								"value": "location"
							},
							{
								"type": "stringLiteral",
								"value": "date"
							},
							{
								"type": "stringLiteral",
								"value": "time"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 261,
						"name": "AriaAttributes.'aria-current'"
					}
				},
				{
					"id": 2196,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1597,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 262,
						"name": "AriaAttributes.'aria-describedby'"
					}
				},
				{
					"id": 2197,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides a detailed, extended description for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1602,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 263,
						"name": "AriaAttributes.'aria-details'"
					}
				},
				{
					"id": 2198,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-hidden @see aria-readonly.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1607,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 264,
						"name": "AriaAttributes.'aria-disabled'"
					}
				},
				{
					"id": 2199,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1612,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "copy"
							},
							{
								"type": "stringLiteral",
								"value": "execute"
							},
							{
								"type": "stringLiteral",
								"value": "link"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 265,
						"name": "AriaAttributes.'aria-dropeffect'"
					}
				},
				{
					"id": 2200,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides an error message for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-invalid @see aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1617,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 266,
						"name": "AriaAttributes.'aria-errormessage'"
					}
				},
				{
					"id": 2201,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1619,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 267,
						"name": "AriaAttributes.'aria-expanded'"
					}
				},
				{
					"id": 2202,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1624,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 268,
						"name": "AriaAttributes.'aria-flowto'"
					}
				},
				{
					"id": 2203,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1629,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 269,
						"name": "AriaAttributes.'aria-grabbed'"
					}
				},
				{
					"id": 2204,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1631,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "menu"
							},
							{
								"type": "stringLiteral",
								"value": "listbox"
							},
							{
								"type": "stringLiteral",
								"value": "tree"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "dialog"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 270,
						"name": "AriaAttributes.'aria-haspopup'"
					}
				},
				{
					"id": 2205,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element is exposed to an accessibility API.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1636,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 271,
						"name": "AriaAttributes.'aria-hidden'"
					}
				},
				{
					"id": 2206,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the entered value does not conform to the format expected by the application.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-errormessage.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1641,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "grammar"
							},
							{
								"type": "stringLiteral",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 272,
						"name": "AriaAttributes.'aria-invalid'"
					}
				},
				{
					"id": 2207,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1643,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 273,
						"name": "AriaAttributes.'aria-keyshortcuts'"
					}
				},
				{
					"id": 2208,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1648,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 274,
						"name": "AriaAttributes.'aria-label'"
					}
				},
				{
					"id": 2209,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1653,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 275,
						"name": "AriaAttributes.'aria-labelledby'"
					}
				},
				{
					"id": 2210,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the hierarchical level of an element within a structure."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1655,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 276,
						"name": "AriaAttributes.'aria-level'"
					}
				},
				{
					"id": 2211,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1657,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "off"
							},
							{
								"type": "stringLiteral",
								"value": "assertive"
							},
							{
								"type": "stringLiteral",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 277,
						"name": "AriaAttributes.'aria-live'"
					}
				},
				{
					"id": 2212,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether an element is modal when displayed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1659,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 278,
						"name": "AriaAttributes.'aria-modal'"
					}
				},
				{
					"id": 2213,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1661,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 279,
						"name": "AriaAttributes.'aria-multiline'"
					}
				},
				{
					"id": 2214,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1663,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 280,
						"name": "AriaAttributes.'aria-multiselectable'"
					}
				},
				{
					"id": 2215,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1665,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "horizontal"
							},
							{
								"type": "stringLiteral",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 281,
						"name": "AriaAttributes.'aria-orientation'"
					}
				},
				{
					"id": 2216,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-controls.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1671,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 282,
						"name": "AriaAttributes.'aria-owns'"
					}
				},
				{
					"id": 2217,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1676,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 283,
						"name": "AriaAttributes.'aria-placeholder'"
					}
				},
				{
					"id": 2218,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-setsize.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1681,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 284,
						"name": "AriaAttributes.'aria-posinset'"
					}
				},
				{
					"id": 2219,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1686,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "mixed"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 285,
						"name": "AriaAttributes.'aria-pressed'"
					}
				},
				{
					"id": 2220,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is not editable, but is otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1691,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 286,
						"name": "AriaAttributes.'aria-readonly'"
					}
				},
				{
					"id": 2221,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-atomic.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1696,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "additions"
							},
							{
								"type": "stringLiteral",
								"value": "additions removals"
							},
							{
								"type": "stringLiteral",
								"value": "additions text"
							},
							{
								"type": "stringLiteral",
								"value": "all"
							},
							{
								"type": "stringLiteral",
								"value": "removals"
							},
							{
								"type": "stringLiteral",
								"value": "removals additions"
							},
							{
								"type": "stringLiteral",
								"value": "removals text"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "text additions"
							},
							{
								"type": "stringLiteral",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 287,
						"name": "AriaAttributes.'aria-relevant'"
					}
				},
				{
					"id": 2222,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that user input is required on the element before a form may be submitted."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1698,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 288,
						"name": "AriaAttributes.'aria-required'"
					}
				},
				{
					"id": 2223,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a human-readable, author-localized description for the role of an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1700,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 289,
						"name": "AriaAttributes.'aria-roledescription'"
					}
				},
				{
					"id": 2224,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1705,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 290,
						"name": "AriaAttributes.'aria-rowcount'"
					}
				},
				{
					"id": 2225,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowcount @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1710,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 291,
						"name": "AriaAttributes.'aria-rowindex'"
					}
				},
				{
					"id": 2226,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1715,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 292,
						"name": "AriaAttributes.'aria-rowspan'"
					}
				},
				{
					"id": 2227,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"selected\" state of various widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-pressed.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1720,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 293,
						"name": "AriaAttributes.'aria-selected'"
					}
				},
				{
					"id": 2228,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-posinset.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1725,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 294,
						"name": "AriaAttributes.'aria-setsize'"
					}
				},
				{
					"id": 2229,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1727,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "ascending"
							},
							{
								"type": "stringLiteral",
								"value": "descending"
							},
							{
								"type": "stringLiteral",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 295,
						"name": "AriaAttributes.'aria-sort'"
					}
				},
				{
					"id": 2230,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the maximum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1729,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 296,
						"name": "AriaAttributes.'aria-valuemax'"
					}
				},
				{
					"id": 2231,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the minimum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1731,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 297,
						"name": "AriaAttributes.'aria-valuemin'"
					}
				},
				{
					"id": 2232,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the current value for a range widget.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-valuetext.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1736,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 298,
						"name": "AriaAttributes.'aria-valuenow'"
					}
				},
				{
					"id": 2233,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1738,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 299,
						"name": "AriaAttributes.'aria-valuetext'"
					}
				},
				{
					"id": 2172,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1783,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 238,
						"name": "HTMLAttributes.autoCapitalize"
					}
				},
				{
					"id": 2173,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1784,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 239,
						"name": "HTMLAttributes.autoCorrect"
					}
				},
				{
					"id": 2174,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1785,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 240,
						"name": "HTMLAttributes.autoSave"
					}
				},
				{
					"id": 2130,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/TableDataCell/index.tsx",
							"line": 7,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "React.ReactNode"
					},
					"overwrites": {
						"type": "reference",
						"name": "DOMAttributes.children"
					}
				},
				{
					"id": 2131,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/TableDataCell/index.tsx",
							"line": 8,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"id": 213,
						"name": "HTMLAttributes.className"
					}
				},
				{
					"id": 2135,
					"name": "colSpan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2316,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2135,
						"name": "TdHTMLAttributes.colSpan"
					}
				},
				{
					"id": 2175,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1786,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 241,
						"name": "HTMLAttributes.color"
					}
				},
				{
					"id": 2148,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1751,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Booleanish"
							},
							{
								"type": "stringLiteral",
								"value": "inherit"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 214,
						"name": "HTMLAttributes.contentEditable"
					}
				},
				{
					"id": 2149,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1752,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 215,
						"name": "HTMLAttributes.contextMenu"
					}
				},
				{
					"id": 2234,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1347,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2235,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2236,
											"name": "__html",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 1348,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2236
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 300,
						"name": "DOMAttributes.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 2165,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1774,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 231,
						"name": "HTMLAttributes.datatype"
					}
				},
				{
					"id": 2143,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1743,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 208,
						"name": "HTMLAttributes.defaultChecked"
					}
				},
				{
					"id": 2144,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1744,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "ReadonlyArray"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 209,
						"name": "HTMLAttributes.defaultValue"
					}
				},
				{
					"id": 2150,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1753,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 216,
						"name": "HTMLAttributes.dir"
					}
				},
				{
					"id": 2151,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1754,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 217,
						"name": "HTMLAttributes.draggable"
					}
				},
				{
					"id": 2136,
					"name": "headers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2317,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2136,
						"name": "TdHTMLAttributes.headers"
					}
				},
				{
					"id": 2140,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2321,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2140,
						"name": "TdHTMLAttributes.height"
					}
				},
				{
					"id": 2152,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1755,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 218,
						"name": "HTMLAttributes.hidden"
					}
				},
				{
					"id": 2153,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1756,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 219,
						"name": "HTMLAttributes.id"
					}
				},
				{
					"id": 2166,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1775,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 232,
						"name": "HTMLAttributes.inlist"
					}
				},
				{
					"id": 2184,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1801,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "tel"
							},
							{
								"type": "stringLiteral",
								"value": "url"
							},
							{
								"type": "stringLiteral",
								"value": "email"
							},
							{
								"type": "stringLiteral",
								"value": "numeric"
							},
							{
								"type": "stringLiteral",
								"value": "decimal"
							},
							{
								"type": "stringLiteral",
								"value": "search"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 250,
						"name": "HTMLAttributes.inputMode"
					}
				},
				{
					"id": 2185,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1806,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 251,
						"name": "HTMLAttributes.is"
					}
				},
				{
					"id": 2179,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1790,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 245,
						"name": "HTMLAttributes.itemID"
					}
				},
				{
					"id": 2176,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1787,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 242,
						"name": "HTMLAttributes.itemProp"
					}
				},
				{
					"id": 2180,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1791,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 246,
						"name": "HTMLAttributes.itemRef"
					}
				},
				{
					"id": 2177,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1788,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 243,
						"name": "HTMLAttributes.itemScope"
					}
				},
				{
					"id": 2178,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1789,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 244,
						"name": "HTMLAttributes.itemType"
					}
				},
				{
					"id": 2133,
					"name": "key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 133,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Key"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1077,
						"name": "Attributes.key"
					}
				},
				{
					"id": 2154,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1757,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 220,
						"name": "HTMLAttributes.lang"
					}
				},
				{
					"id": 2275,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1402,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 341,
						"name": "DOMAttributes.onAbort"
					}
				},
				{
					"id": 2276,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1403,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 342,
						"name": "DOMAttributes.onAbortCapture"
					}
				},
				{
					"id": 2391,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1532,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 457,
						"name": "DOMAttributes.onAnimationEnd"
					}
				},
				{
					"id": 2392,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1533,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 458,
						"name": "DOMAttributes.onAnimationEndCapture"
					}
				},
				{
					"id": 2393,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 459,
						"name": "DOMAttributes.onAnimationIteration"
					}
				},
				{
					"id": 2394,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 460,
						"name": "DOMAttributes.onAnimationIterationCapture"
					}
				},
				{
					"id": 2389,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1530,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 455,
						"name": "DOMAttributes.onAnimationStart"
					}
				},
				{
					"id": 2390,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 456,
						"name": "DOMAttributes.onAnimationStartCapture"
					}
				},
				{
					"id": 2319,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1448,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 385,
						"name": "DOMAttributes.onAuxClick"
					}
				},
				{
					"id": 2320,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 386,
						"name": "DOMAttributes.onAuxClickCapture"
					}
				},
				{
					"id": 2255,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 321,
						"name": "DOMAttributes.onBeforeInput"
					}
				},
				{
					"id": 2256,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 322,
						"name": "DOMAttributes.onBeforeInputCapture"
					}
				},
				{
					"id": 2251,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1370,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 317,
						"name": "DOMAttributes.onBlur"
					}
				},
				{
					"id": 2252,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1371,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 318,
						"name": "DOMAttributes.onBlurCapture"
					}
				},
				{
					"id": 2277,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 343,
						"name": "DOMAttributes.onCanPlay"
					}
				},
				{
					"id": 2278,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 344,
						"name": "DOMAttributes.onCanPlayCapture"
					}
				},
				{
					"id": 2279,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 345,
						"name": "DOMAttributes.onCanPlayThrough"
					}
				},
				{
					"id": 2280,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 346,
						"name": "DOMAttributes.onCanPlayThroughCapture"
					}
				},
				{
					"id": 2253,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1374,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 319,
						"name": "DOMAttributes.onChange"
					}
				},
				{
					"id": 2254,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1375,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 320,
						"name": "DOMAttributes.onChangeCapture"
					}
				},
				{
					"id": 2321,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 387,
						"name": "DOMAttributes.onClick"
					}
				},
				{
					"id": 2322,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 388,
						"name": "DOMAttributes.onClickCapture"
					}
				},
				{
					"id": 2243,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1360,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 309,
						"name": "DOMAttributes.onCompositionEnd"
					}
				},
				{
					"id": 2244,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1361,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 310,
						"name": "DOMAttributes.onCompositionEndCapture"
					}
				},
				{
					"id": 2245,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1362,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 311,
						"name": "DOMAttributes.onCompositionStart"
					}
				},
				{
					"id": 2246,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1363,
							"character": 33
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 312,
						"name": "DOMAttributes.onCompositionStartCapture"
					}
				},
				{
					"id": 2247,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1364,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 313,
						"name": "DOMAttributes.onCompositionUpdate"
					}
				},
				{
					"id": 2248,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1365,
							"character": 34
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 314,
						"name": "DOMAttributes.onCompositionUpdateCapture"
					}
				},
				{
					"id": 2323,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 389,
						"name": "DOMAttributes.onContextMenu"
					}
				},
				{
					"id": 2324,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 390,
						"name": "DOMAttributes.onContextMenuCapture"
					}
				},
				{
					"id": 2237,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1352,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 303,
						"name": "DOMAttributes.onCopy"
					}
				},
				{
					"id": 2238,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1353,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 304,
						"name": "DOMAttributes.onCopyCapture"
					}
				},
				{
					"id": 2239,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1354,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 305,
						"name": "DOMAttributes.onCut"
					}
				},
				{
					"id": 2240,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1355,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 306,
						"name": "DOMAttributes.onCutCapture"
					}
				},
				{
					"id": 2325,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 391,
						"name": "DOMAttributes.onDoubleClick"
					}
				},
				{
					"id": 2326,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 392,
						"name": "DOMAttributes.onDoubleClickCapture"
					}
				},
				{
					"id": 2327,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 393,
						"name": "DOMAttributes.onDrag"
					}
				},
				{
					"id": 2328,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 394,
						"name": "DOMAttributes.onDragCapture"
					}
				},
				{
					"id": 2329,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 395,
						"name": "DOMAttributes.onDragEnd"
					}
				},
				{
					"id": 2330,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 396,
						"name": "DOMAttributes.onDragEndCapture"
					}
				},
				{
					"id": 2331,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 397,
						"name": "DOMAttributes.onDragEnter"
					}
				},
				{
					"id": 2332,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 398,
						"name": "DOMAttributes.onDragEnterCapture"
					}
				},
				{
					"id": 2333,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 399,
						"name": "DOMAttributes.onDragExit"
					}
				},
				{
					"id": 2334,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 400,
						"name": "DOMAttributes.onDragExitCapture"
					}
				},
				{
					"id": 2335,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 401,
						"name": "DOMAttributes.onDragLeave"
					}
				},
				{
					"id": 2336,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 402,
						"name": "DOMAttributes.onDragLeaveCapture"
					}
				},
				{
					"id": 2337,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 403,
						"name": "DOMAttributes.onDragOver"
					}
				},
				{
					"id": 2338,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 404,
						"name": "DOMAttributes.onDragOverCapture"
					}
				},
				{
					"id": 2339,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 405,
						"name": "DOMAttributes.onDragStart"
					}
				},
				{
					"id": 2340,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 406,
						"name": "DOMAttributes.onDragStartCapture"
					}
				},
				{
					"id": 2341,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 407,
						"name": "DOMAttributes.onDrop"
					}
				},
				{
					"id": 2342,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 408,
						"name": "DOMAttributes.onDropCapture"
					}
				},
				{
					"id": 2281,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 347,
						"name": "DOMAttributes.onDurationChange"
					}
				},
				{
					"id": 2282,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 348,
						"name": "DOMAttributes.onDurationChangeCapture"
					}
				},
				{
					"id": 2283,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 349,
						"name": "DOMAttributes.onEmptied"
					}
				},
				{
					"id": 2284,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 350,
						"name": "DOMAttributes.onEmptiedCapture"
					}
				},
				{
					"id": 2285,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 351,
						"name": "DOMAttributes.onEncrypted"
					}
				},
				{
					"id": 2286,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 352,
						"name": "DOMAttributes.onEncryptedCapture"
					}
				},
				{
					"id": 2287,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 353,
						"name": "DOMAttributes.onEnded"
					}
				},
				{
					"id": 2288,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 354,
						"name": "DOMAttributes.onEndedCapture"
					}
				},
				{
					"id": 2267,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 333,
						"name": "DOMAttributes.onError"
					}
				},
				{
					"id": 2268,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 334,
						"name": "DOMAttributes.onErrorCapture"
					}
				},
				{
					"id": 2249,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1368,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 315,
						"name": "DOMAttributes.onFocus"
					}
				},
				{
					"id": 2250,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1369,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 316,
						"name": "DOMAttributes.onFocusCapture"
					}
				},
				{
					"id": 2381,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 447,
						"name": "DOMAttributes.onGotPointerCapture"
					}
				},
				{
					"id": 2382,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 34
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 448,
						"name": "DOMAttributes.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 2257,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1378,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 323,
						"name": "DOMAttributes.onInput"
					}
				},
				{
					"id": 2258,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1379,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 324,
						"name": "DOMAttributes.onInputCapture"
					}
				},
				{
					"id": 2263,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 329,
						"name": "DOMAttributes.onInvalid"
					}
				},
				{
					"id": 2264,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 330,
						"name": "DOMAttributes.onInvalidCapture"
					}
				},
				{
					"id": 2269,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1394,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 335,
						"name": "DOMAttributes.onKeyDown"
					}
				},
				{
					"id": 2270,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 336,
						"name": "DOMAttributes.onKeyDownCapture"
					}
				},
				{
					"id": 2271,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1396,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 337,
						"name": "DOMAttributes.onKeyPress"
					}
				},
				{
					"id": 2272,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1397,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 338,
						"name": "DOMAttributes.onKeyPressCapture"
					}
				},
				{
					"id": 2273,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 339,
						"name": "DOMAttributes.onKeyUp"
					}
				},
				{
					"id": 2274,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 340,
						"name": "DOMAttributes.onKeyUpCapture"
					}
				},
				{
					"id": 2265,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1388,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 331,
						"name": "DOMAttributes.onLoad"
					}
				},
				{
					"id": 2266,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1389,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 332,
						"name": "DOMAttributes.onLoadCapture"
					}
				},
				{
					"id": 2293,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 359,
						"name": "DOMAttributes.onLoadStart"
					}
				},
				{
					"id": 2294,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 360,
						"name": "DOMAttributes.onLoadStartCapture"
					}
				},
				{
					"id": 2289,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1416,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 355,
						"name": "DOMAttributes.onLoadedData"
					}
				},
				{
					"id": 2290,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1417,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 356,
						"name": "DOMAttributes.onLoadedDataCapture"
					}
				},
				{
					"id": 2291,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 357,
						"name": "DOMAttributes.onLoadedMetadata"
					}
				},
				{
					"id": 2292,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 358,
						"name": "DOMAttributes.onLoadedMetadataCapture"
					}
				},
				{
					"id": 2383,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1518,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 449,
						"name": "DOMAttributes.onLostPointerCapture"
					}
				},
				{
					"id": 2384,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1519,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 450,
						"name": "DOMAttributes.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 2343,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 409,
						"name": "DOMAttributes.onMouseDown"
					}
				},
				{
					"id": 2344,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 410,
						"name": "DOMAttributes.onMouseDownCapture"
					}
				},
				{
					"id": 2345,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 411,
						"name": "DOMAttributes.onMouseEnter"
					}
				},
				{
					"id": 2346,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 412,
						"name": "DOMAttributes.onMouseLeave"
					}
				},
				{
					"id": 2347,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 413,
						"name": "DOMAttributes.onMouseMove"
					}
				},
				{
					"id": 2348,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 414,
						"name": "DOMAttributes.onMouseMoveCapture"
					}
				},
				{
					"id": 2349,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 415,
						"name": "DOMAttributes.onMouseOut"
					}
				},
				{
					"id": 2350,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 416,
						"name": "DOMAttributes.onMouseOutCapture"
					}
				},
				{
					"id": 2351,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1480,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 417,
						"name": "DOMAttributes.onMouseOver"
					}
				},
				{
					"id": 2352,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1481,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 418,
						"name": "DOMAttributes.onMouseOverCapture"
					}
				},
				{
					"id": 2353,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 419,
						"name": "DOMAttributes.onMouseUp"
					}
				},
				{
					"id": 2354,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 420,
						"name": "DOMAttributes.onMouseUpCapture"
					}
				},
				{
					"id": 2241,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1356,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 307,
						"name": "DOMAttributes.onPaste"
					}
				},
				{
					"id": 2242,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1357,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 308,
						"name": "DOMAttributes.onPasteCapture"
					}
				},
				{
					"id": 2295,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1422,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 361,
						"name": "DOMAttributes.onPause"
					}
				},
				{
					"id": 2296,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1423,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 362,
						"name": "DOMAttributes.onPauseCapture"
					}
				},
				{
					"id": 2297,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 363,
						"name": "DOMAttributes.onPlay"
					}
				},
				{
					"id": 2298,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 364,
						"name": "DOMAttributes.onPlayCapture"
					}
				},
				{
					"id": 2299,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1426,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 365,
						"name": "DOMAttributes.onPlaying"
					}
				},
				{
					"id": 2300,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 366,
						"name": "DOMAttributes.onPlayingCapture"
					}
				},
				{
					"id": 2371,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 437,
						"name": "DOMAttributes.onPointerCancel"
					}
				},
				{
					"id": 2372,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 438,
						"name": "DOMAttributes.onPointerCancelCapture"
					}
				},
				{
					"id": 2365,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1500,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 431,
						"name": "DOMAttributes.onPointerDown"
					}
				},
				{
					"id": 2366,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 432,
						"name": "DOMAttributes.onPointerDownCapture"
					}
				},
				{
					"id": 2373,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 439,
						"name": "DOMAttributes.onPointerEnter"
					}
				},
				{
					"id": 2374,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 440,
						"name": "DOMAttributes.onPointerEnterCapture"
					}
				},
				{
					"id": 2375,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 441,
						"name": "DOMAttributes.onPointerLeave"
					}
				},
				{
					"id": 2376,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 442,
						"name": "DOMAttributes.onPointerLeaveCapture"
					}
				},
				{
					"id": 2367,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 433,
						"name": "DOMAttributes.onPointerMove"
					}
				},
				{
					"id": 2368,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 434,
						"name": "DOMAttributes.onPointerMoveCapture"
					}
				},
				{
					"id": 2379,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 445,
						"name": "DOMAttributes.onPointerOut"
					}
				},
				{
					"id": 2380,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 446,
						"name": "DOMAttributes.onPointerOutCapture"
					}
				},
				{
					"id": 2377,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 443,
						"name": "DOMAttributes.onPointerOver"
					}
				},
				{
					"id": 2378,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 444,
						"name": "DOMAttributes.onPointerOverCapture"
					}
				},
				{
					"id": 2369,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 435,
						"name": "DOMAttributes.onPointerUp"
					}
				},
				{
					"id": 2370,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 436,
						"name": "DOMAttributes.onPointerUpCapture"
					}
				},
				{
					"id": 2301,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1428,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 367,
						"name": "DOMAttributes.onProgress"
					}
				},
				{
					"id": 2302,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 368,
						"name": "DOMAttributes.onProgressCapture"
					}
				},
				{
					"id": 2303,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 369,
						"name": "DOMAttributes.onRateChange"
					}
				},
				{
					"id": 2304,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 370,
						"name": "DOMAttributes.onRateChangeCapture"
					}
				},
				{
					"id": 2259,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1380,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 325,
						"name": "DOMAttributes.onReset"
					}
				},
				{
					"id": 2260,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1381,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 326,
						"name": "DOMAttributes.onResetCapture"
					}
				},
				{
					"id": 2385,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1522,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 451,
						"name": "DOMAttributes.onScroll"
					}
				},
				{
					"id": 2386,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1523,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 452,
						"name": "DOMAttributes.onScrollCapture"
					}
				},
				{
					"id": 2305,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1432,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 371,
						"name": "DOMAttributes.onSeeked"
					}
				},
				{
					"id": 2306,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1433,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 372,
						"name": "DOMAttributes.onSeekedCapture"
					}
				},
				{
					"id": 2307,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 373,
						"name": "DOMAttributes.onSeeking"
					}
				},
				{
					"id": 2308,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 374,
						"name": "DOMAttributes.onSeekingCapture"
					}
				},
				{
					"id": 2355,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1486,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 421,
						"name": "DOMAttributes.onSelect"
					}
				},
				{
					"id": 2356,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 422,
						"name": "DOMAttributes.onSelectCapture"
					}
				},
				{
					"id": 2309,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 375,
						"name": "DOMAttributes.onStalled"
					}
				},
				{
					"id": 2310,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 376,
						"name": "DOMAttributes.onStalledCapture"
					}
				},
				{
					"id": 2261,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 327,
						"name": "DOMAttributes.onSubmit"
					}
				},
				{
					"id": 2262,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 328,
						"name": "DOMAttributes.onSubmitCapture"
					}
				},
				{
					"id": 2311,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 377,
						"name": "DOMAttributes.onSuspend"
					}
				},
				{
					"id": 2312,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 378,
						"name": "DOMAttributes.onSuspendCapture"
					}
				},
				{
					"id": 2313,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 379,
						"name": "DOMAttributes.onTimeUpdate"
					}
				},
				{
					"id": 2314,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 380,
						"name": "DOMAttributes.onTimeUpdateCapture"
					}
				},
				{
					"id": 2357,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1490,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 423,
						"name": "DOMAttributes.onTouchCancel"
					}
				},
				{
					"id": 2358,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 424,
						"name": "DOMAttributes.onTouchCancelCapture"
					}
				},
				{
					"id": 2359,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 425,
						"name": "DOMAttributes.onTouchEnd"
					}
				},
				{
					"id": 2360,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 426,
						"name": "DOMAttributes.onTouchEndCapture"
					}
				},
				{
					"id": 2361,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 427,
						"name": "DOMAttributes.onTouchMove"
					}
				},
				{
					"id": 2362,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 428,
						"name": "DOMAttributes.onTouchMoveCapture"
					}
				},
				{
					"id": 2363,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 429,
						"name": "DOMAttributes.onTouchStart"
					}
				},
				{
					"id": 2364,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 430,
						"name": "DOMAttributes.onTouchStartCapture"
					}
				},
				{
					"id": 2395,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1538,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 461,
						"name": "DOMAttributes.onTransitionEnd"
					}
				},
				{
					"id": 2396,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 462,
						"name": "DOMAttributes.onTransitionEndCapture"
					}
				},
				{
					"id": 2315,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 381,
						"name": "DOMAttributes.onVolumeChange"
					}
				},
				{
					"id": 2316,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 382,
						"name": "DOMAttributes.onVolumeChangeCapture"
					}
				},
				{
					"id": 2317,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 383,
						"name": "DOMAttributes.onWaiting"
					}
				},
				{
					"id": 2318,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 384,
						"name": "DOMAttributes.onWaitingCapture"
					}
				},
				{
					"id": 2387,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1526,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 453,
						"name": "DOMAttributes.onWheel"
					}
				},
				{
					"id": 2388,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 454,
						"name": "DOMAttributes.onWheelCapture"
					}
				},
				{
					"id": 2155,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1758,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 221,
						"name": "HTMLAttributes.placeholder"
					}
				},
				{
					"id": 2167,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1776,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 233,
						"name": "HTMLAttributes.prefix"
					}
				},
				{
					"id": 2168,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1777,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 234,
						"name": "HTMLAttributes.property"
					}
				},
				{
					"id": 2162,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1767,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 228,
						"name": "HTMLAttributes.radioGroup"
					}
				},
				{
					"id": 2132,
					"name": "ref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 139,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableDataCellElement"
									}
								],
								"name": "TdHTMLAttributes"
							}
						],
						"name": "LegacyRef"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1076,
						"name": "ClassAttributes.ref"
					}
				},
				{
					"id": 2169,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1778,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 235,
						"name": "HTMLAttributes.resource"
					}
				},
				{
					"id": 2181,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1792,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 247,
						"name": "HTMLAttributes.results"
					}
				},
				{
					"id": 2163,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1770,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 229,
						"name": "HTMLAttributes.role"
					}
				},
				{
					"id": 2137,
					"name": "rowSpan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2318,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2137,
						"name": "TdHTMLAttributes.rowSpan"
					}
				},
				{
					"id": 2138,
					"name": "scope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2319,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2138,
						"name": "TdHTMLAttributes.scope"
					}
				},
				{
					"id": 2182,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1793,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 248,
						"name": "HTMLAttributes.security"
					}
				},
				{
					"id": 2156,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1759,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 222,
						"name": "HTMLAttributes.slot"
					}
				},
				{
					"id": 2157,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1760,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 223,
						"name": "HTMLAttributes.spellCheck"
					}
				},
				{
					"id": 2158,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1761,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 224,
						"name": "HTMLAttributes.style"
					}
				},
				{
					"id": 2129,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/TableDataCell/index.tsx",
							"line": 6,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 2145,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1745,
							"character": 38
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 210,
						"name": "HTMLAttributes.suppressContentEditableWarning"
					}
				},
				{
					"id": 2146,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1746,
							"character": 32
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 211,
						"name": "HTMLAttributes.suppressHydrationWarning"
					}
				},
				{
					"id": 2159,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1762,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 225,
						"name": "HTMLAttributes.tabIndex"
					}
				},
				{
					"id": 2160,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1763,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 226,
						"name": "HTMLAttributes.title"
					}
				},
				{
					"id": 2161,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1764,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "yes"
							},
							{
								"type": "stringLiteral",
								"value": "no"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 227,
						"name": "HTMLAttributes.translate"
					}
				},
				{
					"id": 2170,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1779,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 236,
						"name": "HTMLAttributes.typeof"
					}
				},
				{
					"id": 2183,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1794,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "on"
							},
							{
								"type": "stringLiteral",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 249,
						"name": "HTMLAttributes.unselectable"
					}
				},
				{
					"id": 2142,
					"name": "valign",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2323,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "top"
							},
							{
								"type": "stringLiteral",
								"value": "middle"
							},
							{
								"type": "stringLiteral",
								"value": "bottom"
							},
							{
								"type": "stringLiteral",
								"value": "baseline"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2142,
						"name": "TdHTMLAttributes.valign"
					}
				},
				{
					"id": 2171,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1780,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 237,
						"name": "HTMLAttributes.vocab"
					}
				},
				{
					"id": 2141,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2322,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2141,
						"name": "TdHTMLAttributes.width"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2139,
						2164,
						2147,
						2134,
						2186,
						2187,
						2188,
						2189,
						2190,
						2191,
						2192,
						2193,
						2194,
						2195,
						2196,
						2197,
						2198,
						2199,
						2200,
						2201,
						2202,
						2203,
						2204,
						2205,
						2206,
						2207,
						2208,
						2209,
						2210,
						2211,
						2212,
						2213,
						2214,
						2215,
						2216,
						2217,
						2218,
						2219,
						2220,
						2221,
						2222,
						2223,
						2224,
						2225,
						2226,
						2227,
						2228,
						2229,
						2230,
						2231,
						2232,
						2233,
						2172,
						2173,
						2174,
						2130,
						2131,
						2135,
						2175,
						2148,
						2149,
						2234,
						2165,
						2143,
						2144,
						2150,
						2151,
						2136,
						2140,
						2152,
						2153,
						2166,
						2184,
						2185,
						2179,
						2176,
						2180,
						2177,
						2178,
						2133,
						2154,
						2275,
						2276,
						2391,
						2392,
						2393,
						2394,
						2389,
						2390,
						2319,
						2320,
						2255,
						2256,
						2251,
						2252,
						2277,
						2278,
						2279,
						2280,
						2253,
						2254,
						2321,
						2322,
						2243,
						2244,
						2245,
						2246,
						2247,
						2248,
						2323,
						2324,
						2237,
						2238,
						2239,
						2240,
						2325,
						2326,
						2327,
						2328,
						2329,
						2330,
						2331,
						2332,
						2333,
						2334,
						2335,
						2336,
						2337,
						2338,
						2339,
						2340,
						2341,
						2342,
						2281,
						2282,
						2283,
						2284,
						2285,
						2286,
						2287,
						2288,
						2267,
						2268,
						2249,
						2250,
						2381,
						2382,
						2257,
						2258,
						2263,
						2264,
						2269,
						2270,
						2271,
						2272,
						2273,
						2274,
						2265,
						2266,
						2293,
						2294,
						2289,
						2290,
						2291,
						2292,
						2383,
						2384,
						2343,
						2344,
						2345,
						2346,
						2347,
						2348,
						2349,
						2350,
						2351,
						2352,
						2353,
						2354,
						2241,
						2242,
						2295,
						2296,
						2297,
						2298,
						2299,
						2300,
						2371,
						2372,
						2365,
						2366,
						2373,
						2374,
						2375,
						2376,
						2367,
						2368,
						2379,
						2380,
						2377,
						2378,
						2369,
						2370,
						2301,
						2302,
						2303,
						2304,
						2259,
						2260,
						2385,
						2386,
						2305,
						2306,
						2307,
						2308,
						2355,
						2356,
						2309,
						2310,
						2261,
						2262,
						2311,
						2312,
						2313,
						2314,
						2357,
						2358,
						2359,
						2360,
						2361,
						2362,
						2363,
						2364,
						2395,
						2396,
						2315,
						2316,
						2317,
						2318,
						2387,
						2388,
						2155,
						2167,
						2168,
						2162,
						2132,
						2169,
						2181,
						2163,
						2137,
						2138,
						2182,
						2156,
						2157,
						2158,
						2129,
						2145,
						2146,
						2159,
						2160,
						2161,
						2170,
						2183,
						2142,
						2171,
						2141
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/TableDataCell/index.tsx",
					"line": 5,
					"character": 23
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "HTMLTableDataCellElement"
								}
							],
							"name": "ClassAttributes"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "HTMLTableDataCellElement"
								}
							],
							"name": "TdHTMLAttributes"
						}
					]
				}
			]
		},
		{
			"id": 1598,
			"name": "TableFoot",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1625,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1773,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 230,
						"name": "HTMLAttributes.about"
					}
				},
				{
					"id": 1608,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1749,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 212,
						"name": "HTMLAttributes.accessKey"
					}
				},
				{
					"id": 1647,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1556,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 252,
						"name": "AriaAttributes.'aria-activedescendant'"
					}
				},
				{
					"id": 1648,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1558,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 253,
						"name": "AriaAttributes.'aria-atomic'"
					}
				},
				{
					"id": 1649,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1563,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "list"
							},
							{
								"type": "stringLiteral",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 254,
						"name": "AriaAttributes.'aria-autocomplete'"
					}
				},
				{
					"id": 1650,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1565,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 255,
						"name": "AriaAttributes.'aria-busy'"
					}
				},
				{
					"id": 1651,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-pressed @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1570,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "mixed"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 256,
						"name": "AriaAttributes.'aria-checked'"
					}
				},
				{
					"id": 1652,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1575,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 257,
						"name": "AriaAttributes.'aria-colcount'"
					}
				},
				{
					"id": 1653,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colcount @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1580,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 258,
						"name": "AriaAttributes.'aria-colindex'"
					}
				},
				{
					"id": 1654,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1585,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 259,
						"name": "AriaAttributes.'aria-colspan'"
					}
				},
				{
					"id": 1655,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-owns.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1590,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 260,
						"name": "AriaAttributes.'aria-controls'"
					}
				},
				{
					"id": 1656,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the element that represents the current item within a container or set of related elements."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1592,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "page"
							},
							{
								"type": "stringLiteral",
								"value": "step"
							},
							{
								"type": "stringLiteral",
								"value": "location"
							},
							{
								"type": "stringLiteral",
								"value": "date"
							},
							{
								"type": "stringLiteral",
								"value": "time"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 261,
						"name": "AriaAttributes.'aria-current'"
					}
				},
				{
					"id": 1657,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1597,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 262,
						"name": "AriaAttributes.'aria-describedby'"
					}
				},
				{
					"id": 1658,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides a detailed, extended description for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1602,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 263,
						"name": "AriaAttributes.'aria-details'"
					}
				},
				{
					"id": 1659,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-hidden @see aria-readonly.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1607,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 264,
						"name": "AriaAttributes.'aria-disabled'"
					}
				},
				{
					"id": 1660,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1612,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "copy"
							},
							{
								"type": "stringLiteral",
								"value": "execute"
							},
							{
								"type": "stringLiteral",
								"value": "link"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 265,
						"name": "AriaAttributes.'aria-dropeffect'"
					}
				},
				{
					"id": 1661,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides an error message for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-invalid @see aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1617,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 266,
						"name": "AriaAttributes.'aria-errormessage'"
					}
				},
				{
					"id": 1662,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1619,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 267,
						"name": "AriaAttributes.'aria-expanded'"
					}
				},
				{
					"id": 1663,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1624,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 268,
						"name": "AriaAttributes.'aria-flowto'"
					}
				},
				{
					"id": 1664,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1629,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 269,
						"name": "AriaAttributes.'aria-grabbed'"
					}
				},
				{
					"id": 1665,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1631,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "menu"
							},
							{
								"type": "stringLiteral",
								"value": "listbox"
							},
							{
								"type": "stringLiteral",
								"value": "tree"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "dialog"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 270,
						"name": "AriaAttributes.'aria-haspopup'"
					}
				},
				{
					"id": 1666,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element is exposed to an accessibility API.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1636,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 271,
						"name": "AriaAttributes.'aria-hidden'"
					}
				},
				{
					"id": 1667,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the entered value does not conform to the format expected by the application.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-errormessage.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1641,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "grammar"
							},
							{
								"type": "stringLiteral",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 272,
						"name": "AriaAttributes.'aria-invalid'"
					}
				},
				{
					"id": 1668,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1643,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 273,
						"name": "AriaAttributes.'aria-keyshortcuts'"
					}
				},
				{
					"id": 1669,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1648,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 274,
						"name": "AriaAttributes.'aria-label'"
					}
				},
				{
					"id": 1670,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1653,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 275,
						"name": "AriaAttributes.'aria-labelledby'"
					}
				},
				{
					"id": 1671,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the hierarchical level of an element within a structure."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1655,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 276,
						"name": "AriaAttributes.'aria-level'"
					}
				},
				{
					"id": 1672,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1657,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "off"
							},
							{
								"type": "stringLiteral",
								"value": "assertive"
							},
							{
								"type": "stringLiteral",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 277,
						"name": "AriaAttributes.'aria-live'"
					}
				},
				{
					"id": 1673,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether an element is modal when displayed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1659,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 278,
						"name": "AriaAttributes.'aria-modal'"
					}
				},
				{
					"id": 1674,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1661,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 279,
						"name": "AriaAttributes.'aria-multiline'"
					}
				},
				{
					"id": 1675,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1663,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 280,
						"name": "AriaAttributes.'aria-multiselectable'"
					}
				},
				{
					"id": 1676,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1665,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "horizontal"
							},
							{
								"type": "stringLiteral",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 281,
						"name": "AriaAttributes.'aria-orientation'"
					}
				},
				{
					"id": 1677,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-controls.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1671,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 282,
						"name": "AriaAttributes.'aria-owns'"
					}
				},
				{
					"id": 1678,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1676,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 283,
						"name": "AriaAttributes.'aria-placeholder'"
					}
				},
				{
					"id": 1679,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-setsize.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1681,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 284,
						"name": "AriaAttributes.'aria-posinset'"
					}
				},
				{
					"id": 1680,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1686,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "mixed"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 285,
						"name": "AriaAttributes.'aria-pressed'"
					}
				},
				{
					"id": 1681,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is not editable, but is otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1691,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 286,
						"name": "AriaAttributes.'aria-readonly'"
					}
				},
				{
					"id": 1682,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-atomic.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1696,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "additions"
							},
							{
								"type": "stringLiteral",
								"value": "additions removals"
							},
							{
								"type": "stringLiteral",
								"value": "additions text"
							},
							{
								"type": "stringLiteral",
								"value": "all"
							},
							{
								"type": "stringLiteral",
								"value": "removals"
							},
							{
								"type": "stringLiteral",
								"value": "removals additions"
							},
							{
								"type": "stringLiteral",
								"value": "removals text"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "text additions"
							},
							{
								"type": "stringLiteral",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 287,
						"name": "AriaAttributes.'aria-relevant'"
					}
				},
				{
					"id": 1683,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that user input is required on the element before a form may be submitted."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1698,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 288,
						"name": "AriaAttributes.'aria-required'"
					}
				},
				{
					"id": 1684,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a human-readable, author-localized description for the role of an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1700,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 289,
						"name": "AriaAttributes.'aria-roledescription'"
					}
				},
				{
					"id": 1685,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1705,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 290,
						"name": "AriaAttributes.'aria-rowcount'"
					}
				},
				{
					"id": 1686,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowcount @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1710,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 291,
						"name": "AriaAttributes.'aria-rowindex'"
					}
				},
				{
					"id": 1687,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1715,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 292,
						"name": "AriaAttributes.'aria-rowspan'"
					}
				},
				{
					"id": 1688,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"selected\" state of various widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-pressed.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1720,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 293,
						"name": "AriaAttributes.'aria-selected'"
					}
				},
				{
					"id": 1689,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-posinset.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1725,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 294,
						"name": "AriaAttributes.'aria-setsize'"
					}
				},
				{
					"id": 1690,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1727,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "ascending"
							},
							{
								"type": "stringLiteral",
								"value": "descending"
							},
							{
								"type": "stringLiteral",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 295,
						"name": "AriaAttributes.'aria-sort'"
					}
				},
				{
					"id": 1691,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the maximum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1729,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 296,
						"name": "AriaAttributes.'aria-valuemax'"
					}
				},
				{
					"id": 1692,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the minimum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1731,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 297,
						"name": "AriaAttributes.'aria-valuemin'"
					}
				},
				{
					"id": 1693,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the current value for a range widget.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-valuetext.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1736,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 298,
						"name": "AriaAttributes.'aria-valuenow'"
					}
				},
				{
					"id": 1694,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1738,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 299,
						"name": "AriaAttributes.'aria-valuetext'"
					}
				},
				{
					"id": 1633,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1783,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 238,
						"name": "HTMLAttributes.autoCapitalize"
					}
				},
				{
					"id": 1634,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1784,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 239,
						"name": "HTMLAttributes.autoCorrect"
					}
				},
				{
					"id": 1635,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1785,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 240,
						"name": "HTMLAttributes.autoSave"
					}
				},
				{
					"id": 1600,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/TableFoot/index.tsx",
							"line": 6,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "React.ReactNode"
					},
					"overwrites": {
						"type": "reference",
						"name": "DOMAttributes.children"
					}
				},
				{
					"id": 1601,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/TableFoot/index.tsx",
							"line": 7,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"id": 213,
						"name": "HTMLAttributes.className"
					}
				},
				{
					"id": 1636,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1786,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 241,
						"name": "HTMLAttributes.color"
					}
				},
				{
					"id": 1609,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1751,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Booleanish"
							},
							{
								"type": "stringLiteral",
								"value": "inherit"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 214,
						"name": "HTMLAttributes.contentEditable"
					}
				},
				{
					"id": 1610,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1752,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 215,
						"name": "HTMLAttributes.contextMenu"
					}
				},
				{
					"id": 1695,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1347,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1696,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1697,
											"name": "__html",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 1348,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1697
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 300,
						"name": "DOMAttributes.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 1626,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1774,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 231,
						"name": "HTMLAttributes.datatype"
					}
				},
				{
					"id": 1604,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1743,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 208,
						"name": "HTMLAttributes.defaultChecked"
					}
				},
				{
					"id": 1605,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1744,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "ReadonlyArray"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 209,
						"name": "HTMLAttributes.defaultValue"
					}
				},
				{
					"id": 1611,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1753,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 216,
						"name": "HTMLAttributes.dir"
					}
				},
				{
					"id": 1612,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1754,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 217,
						"name": "HTMLAttributes.draggable"
					}
				},
				{
					"id": 1613,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1755,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 218,
						"name": "HTMLAttributes.hidden"
					}
				},
				{
					"id": 1614,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1756,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 219,
						"name": "HTMLAttributes.id"
					}
				},
				{
					"id": 1627,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1775,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 232,
						"name": "HTMLAttributes.inlist"
					}
				},
				{
					"id": 1645,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1801,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "tel"
							},
							{
								"type": "stringLiteral",
								"value": "url"
							},
							{
								"type": "stringLiteral",
								"value": "email"
							},
							{
								"type": "stringLiteral",
								"value": "numeric"
							},
							{
								"type": "stringLiteral",
								"value": "decimal"
							},
							{
								"type": "stringLiteral",
								"value": "search"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 250,
						"name": "HTMLAttributes.inputMode"
					}
				},
				{
					"id": 1646,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1806,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 251,
						"name": "HTMLAttributes.is"
					}
				},
				{
					"id": 1640,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1790,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 245,
						"name": "HTMLAttributes.itemID"
					}
				},
				{
					"id": 1637,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1787,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 242,
						"name": "HTMLAttributes.itemProp"
					}
				},
				{
					"id": 1641,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1791,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 246,
						"name": "HTMLAttributes.itemRef"
					}
				},
				{
					"id": 1638,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1788,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 243,
						"name": "HTMLAttributes.itemScope"
					}
				},
				{
					"id": 1639,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1789,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 244,
						"name": "HTMLAttributes.itemType"
					}
				},
				{
					"id": 1603,
					"name": "key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 133,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Key"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1077,
						"name": "Attributes.key"
					}
				},
				{
					"id": 1615,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1757,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 220,
						"name": "HTMLAttributes.lang"
					}
				},
				{
					"id": 1736,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1402,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 341,
						"name": "DOMAttributes.onAbort"
					}
				},
				{
					"id": 1737,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1403,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 342,
						"name": "DOMAttributes.onAbortCapture"
					}
				},
				{
					"id": 1852,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1532,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 457,
						"name": "DOMAttributes.onAnimationEnd"
					}
				},
				{
					"id": 1853,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1533,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 458,
						"name": "DOMAttributes.onAnimationEndCapture"
					}
				},
				{
					"id": 1854,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 459,
						"name": "DOMAttributes.onAnimationIteration"
					}
				},
				{
					"id": 1855,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 460,
						"name": "DOMAttributes.onAnimationIterationCapture"
					}
				},
				{
					"id": 1850,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1530,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 455,
						"name": "DOMAttributes.onAnimationStart"
					}
				},
				{
					"id": 1851,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 456,
						"name": "DOMAttributes.onAnimationStartCapture"
					}
				},
				{
					"id": 1780,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1448,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 385,
						"name": "DOMAttributes.onAuxClick"
					}
				},
				{
					"id": 1781,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 386,
						"name": "DOMAttributes.onAuxClickCapture"
					}
				},
				{
					"id": 1716,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 321,
						"name": "DOMAttributes.onBeforeInput"
					}
				},
				{
					"id": 1717,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 322,
						"name": "DOMAttributes.onBeforeInputCapture"
					}
				},
				{
					"id": 1712,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1370,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 317,
						"name": "DOMAttributes.onBlur"
					}
				},
				{
					"id": 1713,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1371,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 318,
						"name": "DOMAttributes.onBlurCapture"
					}
				},
				{
					"id": 1738,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 343,
						"name": "DOMAttributes.onCanPlay"
					}
				},
				{
					"id": 1739,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 344,
						"name": "DOMAttributes.onCanPlayCapture"
					}
				},
				{
					"id": 1740,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 345,
						"name": "DOMAttributes.onCanPlayThrough"
					}
				},
				{
					"id": 1741,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 346,
						"name": "DOMAttributes.onCanPlayThroughCapture"
					}
				},
				{
					"id": 1714,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1374,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 319,
						"name": "DOMAttributes.onChange"
					}
				},
				{
					"id": 1715,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1375,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 320,
						"name": "DOMAttributes.onChangeCapture"
					}
				},
				{
					"id": 1782,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 387,
						"name": "DOMAttributes.onClick"
					}
				},
				{
					"id": 1783,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 388,
						"name": "DOMAttributes.onClickCapture"
					}
				},
				{
					"id": 1704,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1360,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 309,
						"name": "DOMAttributes.onCompositionEnd"
					}
				},
				{
					"id": 1705,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1361,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 310,
						"name": "DOMAttributes.onCompositionEndCapture"
					}
				},
				{
					"id": 1706,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1362,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 311,
						"name": "DOMAttributes.onCompositionStart"
					}
				},
				{
					"id": 1707,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1363,
							"character": 33
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 312,
						"name": "DOMAttributes.onCompositionStartCapture"
					}
				},
				{
					"id": 1708,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1364,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 313,
						"name": "DOMAttributes.onCompositionUpdate"
					}
				},
				{
					"id": 1709,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1365,
							"character": 34
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 314,
						"name": "DOMAttributes.onCompositionUpdateCapture"
					}
				},
				{
					"id": 1784,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 389,
						"name": "DOMAttributes.onContextMenu"
					}
				},
				{
					"id": 1785,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 390,
						"name": "DOMAttributes.onContextMenuCapture"
					}
				},
				{
					"id": 1698,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1352,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 303,
						"name": "DOMAttributes.onCopy"
					}
				},
				{
					"id": 1699,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1353,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 304,
						"name": "DOMAttributes.onCopyCapture"
					}
				},
				{
					"id": 1700,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1354,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 305,
						"name": "DOMAttributes.onCut"
					}
				},
				{
					"id": 1701,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1355,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 306,
						"name": "DOMAttributes.onCutCapture"
					}
				},
				{
					"id": 1786,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 391,
						"name": "DOMAttributes.onDoubleClick"
					}
				},
				{
					"id": 1787,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 392,
						"name": "DOMAttributes.onDoubleClickCapture"
					}
				},
				{
					"id": 1788,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 393,
						"name": "DOMAttributes.onDrag"
					}
				},
				{
					"id": 1789,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 394,
						"name": "DOMAttributes.onDragCapture"
					}
				},
				{
					"id": 1790,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 395,
						"name": "DOMAttributes.onDragEnd"
					}
				},
				{
					"id": 1791,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 396,
						"name": "DOMAttributes.onDragEndCapture"
					}
				},
				{
					"id": 1792,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 397,
						"name": "DOMAttributes.onDragEnter"
					}
				},
				{
					"id": 1793,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 398,
						"name": "DOMAttributes.onDragEnterCapture"
					}
				},
				{
					"id": 1794,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 399,
						"name": "DOMAttributes.onDragExit"
					}
				},
				{
					"id": 1795,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 400,
						"name": "DOMAttributes.onDragExitCapture"
					}
				},
				{
					"id": 1796,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 401,
						"name": "DOMAttributes.onDragLeave"
					}
				},
				{
					"id": 1797,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 402,
						"name": "DOMAttributes.onDragLeaveCapture"
					}
				},
				{
					"id": 1798,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 403,
						"name": "DOMAttributes.onDragOver"
					}
				},
				{
					"id": 1799,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 404,
						"name": "DOMAttributes.onDragOverCapture"
					}
				},
				{
					"id": 1800,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 405,
						"name": "DOMAttributes.onDragStart"
					}
				},
				{
					"id": 1801,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 406,
						"name": "DOMAttributes.onDragStartCapture"
					}
				},
				{
					"id": 1802,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 407,
						"name": "DOMAttributes.onDrop"
					}
				},
				{
					"id": 1803,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 408,
						"name": "DOMAttributes.onDropCapture"
					}
				},
				{
					"id": 1742,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 347,
						"name": "DOMAttributes.onDurationChange"
					}
				},
				{
					"id": 1743,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 348,
						"name": "DOMAttributes.onDurationChangeCapture"
					}
				},
				{
					"id": 1744,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 349,
						"name": "DOMAttributes.onEmptied"
					}
				},
				{
					"id": 1745,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 350,
						"name": "DOMAttributes.onEmptiedCapture"
					}
				},
				{
					"id": 1746,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 351,
						"name": "DOMAttributes.onEncrypted"
					}
				},
				{
					"id": 1747,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 352,
						"name": "DOMAttributes.onEncryptedCapture"
					}
				},
				{
					"id": 1748,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 353,
						"name": "DOMAttributes.onEnded"
					}
				},
				{
					"id": 1749,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 354,
						"name": "DOMAttributes.onEndedCapture"
					}
				},
				{
					"id": 1728,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 333,
						"name": "DOMAttributes.onError"
					}
				},
				{
					"id": 1729,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 334,
						"name": "DOMAttributes.onErrorCapture"
					}
				},
				{
					"id": 1710,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1368,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 315,
						"name": "DOMAttributes.onFocus"
					}
				},
				{
					"id": 1711,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1369,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 316,
						"name": "DOMAttributes.onFocusCapture"
					}
				},
				{
					"id": 1842,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 447,
						"name": "DOMAttributes.onGotPointerCapture"
					}
				},
				{
					"id": 1843,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 34
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 448,
						"name": "DOMAttributes.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 1718,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1378,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 323,
						"name": "DOMAttributes.onInput"
					}
				},
				{
					"id": 1719,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1379,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 324,
						"name": "DOMAttributes.onInputCapture"
					}
				},
				{
					"id": 1724,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 329,
						"name": "DOMAttributes.onInvalid"
					}
				},
				{
					"id": 1725,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 330,
						"name": "DOMAttributes.onInvalidCapture"
					}
				},
				{
					"id": 1730,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1394,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 335,
						"name": "DOMAttributes.onKeyDown"
					}
				},
				{
					"id": 1731,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 336,
						"name": "DOMAttributes.onKeyDownCapture"
					}
				},
				{
					"id": 1732,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1396,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 337,
						"name": "DOMAttributes.onKeyPress"
					}
				},
				{
					"id": 1733,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1397,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 338,
						"name": "DOMAttributes.onKeyPressCapture"
					}
				},
				{
					"id": 1734,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 339,
						"name": "DOMAttributes.onKeyUp"
					}
				},
				{
					"id": 1735,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 340,
						"name": "DOMAttributes.onKeyUpCapture"
					}
				},
				{
					"id": 1726,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1388,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 331,
						"name": "DOMAttributes.onLoad"
					}
				},
				{
					"id": 1727,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1389,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 332,
						"name": "DOMAttributes.onLoadCapture"
					}
				},
				{
					"id": 1754,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 359,
						"name": "DOMAttributes.onLoadStart"
					}
				},
				{
					"id": 1755,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 360,
						"name": "DOMAttributes.onLoadStartCapture"
					}
				},
				{
					"id": 1750,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1416,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 355,
						"name": "DOMAttributes.onLoadedData"
					}
				},
				{
					"id": 1751,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1417,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 356,
						"name": "DOMAttributes.onLoadedDataCapture"
					}
				},
				{
					"id": 1752,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 357,
						"name": "DOMAttributes.onLoadedMetadata"
					}
				},
				{
					"id": 1753,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 358,
						"name": "DOMAttributes.onLoadedMetadataCapture"
					}
				},
				{
					"id": 1844,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1518,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 449,
						"name": "DOMAttributes.onLostPointerCapture"
					}
				},
				{
					"id": 1845,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1519,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 450,
						"name": "DOMAttributes.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 1804,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 409,
						"name": "DOMAttributes.onMouseDown"
					}
				},
				{
					"id": 1805,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 410,
						"name": "DOMAttributes.onMouseDownCapture"
					}
				},
				{
					"id": 1806,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 411,
						"name": "DOMAttributes.onMouseEnter"
					}
				},
				{
					"id": 1807,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 412,
						"name": "DOMAttributes.onMouseLeave"
					}
				},
				{
					"id": 1808,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 413,
						"name": "DOMAttributes.onMouseMove"
					}
				},
				{
					"id": 1809,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 414,
						"name": "DOMAttributes.onMouseMoveCapture"
					}
				},
				{
					"id": 1810,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 415,
						"name": "DOMAttributes.onMouseOut"
					}
				},
				{
					"id": 1811,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 416,
						"name": "DOMAttributes.onMouseOutCapture"
					}
				},
				{
					"id": 1812,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1480,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 417,
						"name": "DOMAttributes.onMouseOver"
					}
				},
				{
					"id": 1813,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1481,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 418,
						"name": "DOMAttributes.onMouseOverCapture"
					}
				},
				{
					"id": 1814,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 419,
						"name": "DOMAttributes.onMouseUp"
					}
				},
				{
					"id": 1815,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 420,
						"name": "DOMAttributes.onMouseUpCapture"
					}
				},
				{
					"id": 1702,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1356,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 307,
						"name": "DOMAttributes.onPaste"
					}
				},
				{
					"id": 1703,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1357,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 308,
						"name": "DOMAttributes.onPasteCapture"
					}
				},
				{
					"id": 1756,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1422,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 361,
						"name": "DOMAttributes.onPause"
					}
				},
				{
					"id": 1757,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1423,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 362,
						"name": "DOMAttributes.onPauseCapture"
					}
				},
				{
					"id": 1758,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 363,
						"name": "DOMAttributes.onPlay"
					}
				},
				{
					"id": 1759,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 364,
						"name": "DOMAttributes.onPlayCapture"
					}
				},
				{
					"id": 1760,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1426,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 365,
						"name": "DOMAttributes.onPlaying"
					}
				},
				{
					"id": 1761,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 366,
						"name": "DOMAttributes.onPlayingCapture"
					}
				},
				{
					"id": 1832,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 437,
						"name": "DOMAttributes.onPointerCancel"
					}
				},
				{
					"id": 1833,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 438,
						"name": "DOMAttributes.onPointerCancelCapture"
					}
				},
				{
					"id": 1826,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1500,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 431,
						"name": "DOMAttributes.onPointerDown"
					}
				},
				{
					"id": 1827,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 432,
						"name": "DOMAttributes.onPointerDownCapture"
					}
				},
				{
					"id": 1834,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 439,
						"name": "DOMAttributes.onPointerEnter"
					}
				},
				{
					"id": 1835,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 440,
						"name": "DOMAttributes.onPointerEnterCapture"
					}
				},
				{
					"id": 1836,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 441,
						"name": "DOMAttributes.onPointerLeave"
					}
				},
				{
					"id": 1837,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 442,
						"name": "DOMAttributes.onPointerLeaveCapture"
					}
				},
				{
					"id": 1828,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 433,
						"name": "DOMAttributes.onPointerMove"
					}
				},
				{
					"id": 1829,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 434,
						"name": "DOMAttributes.onPointerMoveCapture"
					}
				},
				{
					"id": 1840,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 445,
						"name": "DOMAttributes.onPointerOut"
					}
				},
				{
					"id": 1841,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 446,
						"name": "DOMAttributes.onPointerOutCapture"
					}
				},
				{
					"id": 1838,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 443,
						"name": "DOMAttributes.onPointerOver"
					}
				},
				{
					"id": 1839,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 444,
						"name": "DOMAttributes.onPointerOverCapture"
					}
				},
				{
					"id": 1830,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 435,
						"name": "DOMAttributes.onPointerUp"
					}
				},
				{
					"id": 1831,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 436,
						"name": "DOMAttributes.onPointerUpCapture"
					}
				},
				{
					"id": 1762,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1428,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 367,
						"name": "DOMAttributes.onProgress"
					}
				},
				{
					"id": 1763,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 368,
						"name": "DOMAttributes.onProgressCapture"
					}
				},
				{
					"id": 1764,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 369,
						"name": "DOMAttributes.onRateChange"
					}
				},
				{
					"id": 1765,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 370,
						"name": "DOMAttributes.onRateChangeCapture"
					}
				},
				{
					"id": 1720,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1380,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 325,
						"name": "DOMAttributes.onReset"
					}
				},
				{
					"id": 1721,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1381,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 326,
						"name": "DOMAttributes.onResetCapture"
					}
				},
				{
					"id": 1846,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1522,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 451,
						"name": "DOMAttributes.onScroll"
					}
				},
				{
					"id": 1847,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1523,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 452,
						"name": "DOMAttributes.onScrollCapture"
					}
				},
				{
					"id": 1766,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1432,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 371,
						"name": "DOMAttributes.onSeeked"
					}
				},
				{
					"id": 1767,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1433,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 372,
						"name": "DOMAttributes.onSeekedCapture"
					}
				},
				{
					"id": 1768,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 373,
						"name": "DOMAttributes.onSeeking"
					}
				},
				{
					"id": 1769,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 374,
						"name": "DOMAttributes.onSeekingCapture"
					}
				},
				{
					"id": 1816,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1486,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 421,
						"name": "DOMAttributes.onSelect"
					}
				},
				{
					"id": 1817,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 422,
						"name": "DOMAttributes.onSelectCapture"
					}
				},
				{
					"id": 1770,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 375,
						"name": "DOMAttributes.onStalled"
					}
				},
				{
					"id": 1771,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 376,
						"name": "DOMAttributes.onStalledCapture"
					}
				},
				{
					"id": 1722,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 327,
						"name": "DOMAttributes.onSubmit"
					}
				},
				{
					"id": 1723,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 328,
						"name": "DOMAttributes.onSubmitCapture"
					}
				},
				{
					"id": 1772,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 377,
						"name": "DOMAttributes.onSuspend"
					}
				},
				{
					"id": 1773,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 378,
						"name": "DOMAttributes.onSuspendCapture"
					}
				},
				{
					"id": 1774,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 379,
						"name": "DOMAttributes.onTimeUpdate"
					}
				},
				{
					"id": 1775,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 380,
						"name": "DOMAttributes.onTimeUpdateCapture"
					}
				},
				{
					"id": 1818,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1490,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 423,
						"name": "DOMAttributes.onTouchCancel"
					}
				},
				{
					"id": 1819,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 424,
						"name": "DOMAttributes.onTouchCancelCapture"
					}
				},
				{
					"id": 1820,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 425,
						"name": "DOMAttributes.onTouchEnd"
					}
				},
				{
					"id": 1821,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 426,
						"name": "DOMAttributes.onTouchEndCapture"
					}
				},
				{
					"id": 1822,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 427,
						"name": "DOMAttributes.onTouchMove"
					}
				},
				{
					"id": 1823,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 428,
						"name": "DOMAttributes.onTouchMoveCapture"
					}
				},
				{
					"id": 1824,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 429,
						"name": "DOMAttributes.onTouchStart"
					}
				},
				{
					"id": 1825,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 430,
						"name": "DOMAttributes.onTouchStartCapture"
					}
				},
				{
					"id": 1856,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1538,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 461,
						"name": "DOMAttributes.onTransitionEnd"
					}
				},
				{
					"id": 1857,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 462,
						"name": "DOMAttributes.onTransitionEndCapture"
					}
				},
				{
					"id": 1776,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 381,
						"name": "DOMAttributes.onVolumeChange"
					}
				},
				{
					"id": 1777,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 382,
						"name": "DOMAttributes.onVolumeChangeCapture"
					}
				},
				{
					"id": 1778,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 383,
						"name": "DOMAttributes.onWaiting"
					}
				},
				{
					"id": 1779,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 384,
						"name": "DOMAttributes.onWaitingCapture"
					}
				},
				{
					"id": 1848,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1526,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 453,
						"name": "DOMAttributes.onWheel"
					}
				},
				{
					"id": 1849,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 454,
						"name": "DOMAttributes.onWheelCapture"
					}
				},
				{
					"id": 1616,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1758,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 221,
						"name": "HTMLAttributes.placeholder"
					}
				},
				{
					"id": 1628,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1776,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 233,
						"name": "HTMLAttributes.prefix"
					}
				},
				{
					"id": 1629,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1777,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 234,
						"name": "HTMLAttributes.property"
					}
				},
				{
					"id": 1623,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1767,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 228,
						"name": "HTMLAttributes.radioGroup"
					}
				},
				{
					"id": 1602,
					"name": "ref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 139,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "LegacyRef"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1076,
						"name": "ClassAttributes.ref"
					}
				},
				{
					"id": 1630,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1778,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 235,
						"name": "HTMLAttributes.resource"
					}
				},
				{
					"id": 1642,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1792,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 247,
						"name": "HTMLAttributes.results"
					}
				},
				{
					"id": 1624,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1770,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 229,
						"name": "HTMLAttributes.role"
					}
				},
				{
					"id": 1643,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1793,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 248,
						"name": "HTMLAttributes.security"
					}
				},
				{
					"id": 1617,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1759,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 222,
						"name": "HTMLAttributes.slot"
					}
				},
				{
					"id": 1618,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1760,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 223,
						"name": "HTMLAttributes.spellCheck"
					}
				},
				{
					"id": 1619,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1761,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 224,
						"name": "HTMLAttributes.style"
					}
				},
				{
					"id": 1599,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/TableFoot/index.tsx",
							"line": 5,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 1606,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1745,
							"character": 38
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 210,
						"name": "HTMLAttributes.suppressContentEditableWarning"
					}
				},
				{
					"id": 1607,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1746,
							"character": 32
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 211,
						"name": "HTMLAttributes.suppressHydrationWarning"
					}
				},
				{
					"id": 1620,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1762,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 225,
						"name": "HTMLAttributes.tabIndex"
					}
				},
				{
					"id": 1621,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1763,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 226,
						"name": "HTMLAttributes.title"
					}
				},
				{
					"id": 1622,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1764,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "yes"
							},
							{
								"type": "stringLiteral",
								"value": "no"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 227,
						"name": "HTMLAttributes.translate"
					}
				},
				{
					"id": 1631,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1779,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 236,
						"name": "HTMLAttributes.typeof"
					}
				},
				{
					"id": 1644,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1794,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "on"
							},
							{
								"type": "stringLiteral",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 249,
						"name": "HTMLAttributes.unselectable"
					}
				},
				{
					"id": 1632,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1780,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 237,
						"name": "HTMLAttributes.vocab"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1625,
						1608,
						1647,
						1648,
						1649,
						1650,
						1651,
						1652,
						1653,
						1654,
						1655,
						1656,
						1657,
						1658,
						1659,
						1660,
						1661,
						1662,
						1663,
						1664,
						1665,
						1666,
						1667,
						1668,
						1669,
						1670,
						1671,
						1672,
						1673,
						1674,
						1675,
						1676,
						1677,
						1678,
						1679,
						1680,
						1681,
						1682,
						1683,
						1684,
						1685,
						1686,
						1687,
						1688,
						1689,
						1690,
						1691,
						1692,
						1693,
						1694,
						1633,
						1634,
						1635,
						1600,
						1601,
						1636,
						1609,
						1610,
						1695,
						1626,
						1604,
						1605,
						1611,
						1612,
						1613,
						1614,
						1627,
						1645,
						1646,
						1640,
						1637,
						1641,
						1638,
						1639,
						1603,
						1615,
						1736,
						1737,
						1852,
						1853,
						1854,
						1855,
						1850,
						1851,
						1780,
						1781,
						1716,
						1717,
						1712,
						1713,
						1738,
						1739,
						1740,
						1741,
						1714,
						1715,
						1782,
						1783,
						1704,
						1705,
						1706,
						1707,
						1708,
						1709,
						1784,
						1785,
						1698,
						1699,
						1700,
						1701,
						1786,
						1787,
						1788,
						1789,
						1790,
						1791,
						1792,
						1793,
						1794,
						1795,
						1796,
						1797,
						1798,
						1799,
						1800,
						1801,
						1802,
						1803,
						1742,
						1743,
						1744,
						1745,
						1746,
						1747,
						1748,
						1749,
						1728,
						1729,
						1710,
						1711,
						1842,
						1843,
						1718,
						1719,
						1724,
						1725,
						1730,
						1731,
						1732,
						1733,
						1734,
						1735,
						1726,
						1727,
						1754,
						1755,
						1750,
						1751,
						1752,
						1753,
						1844,
						1845,
						1804,
						1805,
						1806,
						1807,
						1808,
						1809,
						1810,
						1811,
						1812,
						1813,
						1814,
						1815,
						1702,
						1703,
						1756,
						1757,
						1758,
						1759,
						1760,
						1761,
						1832,
						1833,
						1826,
						1827,
						1834,
						1835,
						1836,
						1837,
						1828,
						1829,
						1840,
						1841,
						1838,
						1839,
						1830,
						1831,
						1762,
						1763,
						1764,
						1765,
						1720,
						1721,
						1846,
						1847,
						1766,
						1767,
						1768,
						1769,
						1816,
						1817,
						1770,
						1771,
						1722,
						1723,
						1772,
						1773,
						1774,
						1775,
						1818,
						1819,
						1820,
						1821,
						1822,
						1823,
						1824,
						1825,
						1856,
						1857,
						1776,
						1777,
						1778,
						1779,
						1848,
						1849,
						1616,
						1628,
						1629,
						1623,
						1602,
						1630,
						1642,
						1624,
						1643,
						1617,
						1618,
						1619,
						1599,
						1606,
						1607,
						1620,
						1621,
						1622,
						1631,
						1644,
						1632
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/TableFoot/index.tsx",
					"line": 4,
					"character": 19
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "HTMLTableSectionElement"
								}
							],
							"name": "ClassAttributes"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "HTMLTableSectionElement"
								}
							],
							"name": "HTMLAttributes"
						}
					]
				}
			]
		},
		{
			"id": 1072,
			"name": "TableHead",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1099,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1773,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 230,
						"name": "HTMLAttributes.about"
					}
				},
				{
					"id": 1082,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1749,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 212,
						"name": "HTMLAttributes.accessKey"
					}
				},
				{
					"id": 1121,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1556,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 252,
						"name": "AriaAttributes.'aria-activedescendant'"
					}
				},
				{
					"id": 1122,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1558,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 253,
						"name": "AriaAttributes.'aria-atomic'"
					}
				},
				{
					"id": 1123,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1563,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "list"
							},
							{
								"type": "stringLiteral",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 254,
						"name": "AriaAttributes.'aria-autocomplete'"
					}
				},
				{
					"id": 1124,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1565,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 255,
						"name": "AriaAttributes.'aria-busy'"
					}
				},
				{
					"id": 1125,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-pressed @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1570,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "mixed"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 256,
						"name": "AriaAttributes.'aria-checked'"
					}
				},
				{
					"id": 1126,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1575,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 257,
						"name": "AriaAttributes.'aria-colcount'"
					}
				},
				{
					"id": 1127,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colcount @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1580,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 258,
						"name": "AriaAttributes.'aria-colindex'"
					}
				},
				{
					"id": 1128,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1585,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 259,
						"name": "AriaAttributes.'aria-colspan'"
					}
				},
				{
					"id": 1129,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-owns.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1590,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 260,
						"name": "AriaAttributes.'aria-controls'"
					}
				},
				{
					"id": 1130,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the element that represents the current item within a container or set of related elements."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1592,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "page"
							},
							{
								"type": "stringLiteral",
								"value": "step"
							},
							{
								"type": "stringLiteral",
								"value": "location"
							},
							{
								"type": "stringLiteral",
								"value": "date"
							},
							{
								"type": "stringLiteral",
								"value": "time"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 261,
						"name": "AriaAttributes.'aria-current'"
					}
				},
				{
					"id": 1131,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1597,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 262,
						"name": "AriaAttributes.'aria-describedby'"
					}
				},
				{
					"id": 1132,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides a detailed, extended description for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1602,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 263,
						"name": "AriaAttributes.'aria-details'"
					}
				},
				{
					"id": 1133,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-hidden @see aria-readonly.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1607,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 264,
						"name": "AriaAttributes.'aria-disabled'"
					}
				},
				{
					"id": 1134,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1612,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "copy"
							},
							{
								"type": "stringLiteral",
								"value": "execute"
							},
							{
								"type": "stringLiteral",
								"value": "link"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 265,
						"name": "AriaAttributes.'aria-dropeffect'"
					}
				},
				{
					"id": 1135,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides an error message for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-invalid @see aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1617,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 266,
						"name": "AriaAttributes.'aria-errormessage'"
					}
				},
				{
					"id": 1136,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1619,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 267,
						"name": "AriaAttributes.'aria-expanded'"
					}
				},
				{
					"id": 1137,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1624,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 268,
						"name": "AriaAttributes.'aria-flowto'"
					}
				},
				{
					"id": 1138,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1629,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 269,
						"name": "AriaAttributes.'aria-grabbed'"
					}
				},
				{
					"id": 1139,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1631,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "menu"
							},
							{
								"type": "stringLiteral",
								"value": "listbox"
							},
							{
								"type": "stringLiteral",
								"value": "tree"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "dialog"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 270,
						"name": "AriaAttributes.'aria-haspopup'"
					}
				},
				{
					"id": 1140,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element is exposed to an accessibility API.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1636,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 271,
						"name": "AriaAttributes.'aria-hidden'"
					}
				},
				{
					"id": 1141,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the entered value does not conform to the format expected by the application.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-errormessage.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1641,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "grammar"
							},
							{
								"type": "stringLiteral",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 272,
						"name": "AriaAttributes.'aria-invalid'"
					}
				},
				{
					"id": 1142,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1643,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 273,
						"name": "AriaAttributes.'aria-keyshortcuts'"
					}
				},
				{
					"id": 1143,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1648,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 274,
						"name": "AriaAttributes.'aria-label'"
					}
				},
				{
					"id": 1144,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1653,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 275,
						"name": "AriaAttributes.'aria-labelledby'"
					}
				},
				{
					"id": 1145,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the hierarchical level of an element within a structure."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1655,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 276,
						"name": "AriaAttributes.'aria-level'"
					}
				},
				{
					"id": 1146,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1657,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "off"
							},
							{
								"type": "stringLiteral",
								"value": "assertive"
							},
							{
								"type": "stringLiteral",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 277,
						"name": "AriaAttributes.'aria-live'"
					}
				},
				{
					"id": 1147,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether an element is modal when displayed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1659,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 278,
						"name": "AriaAttributes.'aria-modal'"
					}
				},
				{
					"id": 1148,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1661,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 279,
						"name": "AriaAttributes.'aria-multiline'"
					}
				},
				{
					"id": 1149,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1663,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 280,
						"name": "AriaAttributes.'aria-multiselectable'"
					}
				},
				{
					"id": 1150,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1665,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "horizontal"
							},
							{
								"type": "stringLiteral",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 281,
						"name": "AriaAttributes.'aria-orientation'"
					}
				},
				{
					"id": 1151,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-controls.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1671,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 282,
						"name": "AriaAttributes.'aria-owns'"
					}
				},
				{
					"id": 1152,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1676,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 283,
						"name": "AriaAttributes.'aria-placeholder'"
					}
				},
				{
					"id": 1153,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-setsize.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1681,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 284,
						"name": "AriaAttributes.'aria-posinset'"
					}
				},
				{
					"id": 1154,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1686,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "mixed"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 285,
						"name": "AriaAttributes.'aria-pressed'"
					}
				},
				{
					"id": 1155,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is not editable, but is otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1691,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 286,
						"name": "AriaAttributes.'aria-readonly'"
					}
				},
				{
					"id": 1156,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-atomic.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1696,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "additions"
							},
							{
								"type": "stringLiteral",
								"value": "additions removals"
							},
							{
								"type": "stringLiteral",
								"value": "additions text"
							},
							{
								"type": "stringLiteral",
								"value": "all"
							},
							{
								"type": "stringLiteral",
								"value": "removals"
							},
							{
								"type": "stringLiteral",
								"value": "removals additions"
							},
							{
								"type": "stringLiteral",
								"value": "removals text"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "text additions"
							},
							{
								"type": "stringLiteral",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 287,
						"name": "AriaAttributes.'aria-relevant'"
					}
				},
				{
					"id": 1157,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that user input is required on the element before a form may be submitted."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1698,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 288,
						"name": "AriaAttributes.'aria-required'"
					}
				},
				{
					"id": 1158,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a human-readable, author-localized description for the role of an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1700,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 289,
						"name": "AriaAttributes.'aria-roledescription'"
					}
				},
				{
					"id": 1159,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1705,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 290,
						"name": "AriaAttributes.'aria-rowcount'"
					}
				},
				{
					"id": 1160,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowcount @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1710,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 291,
						"name": "AriaAttributes.'aria-rowindex'"
					}
				},
				{
					"id": 1161,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1715,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 292,
						"name": "AriaAttributes.'aria-rowspan'"
					}
				},
				{
					"id": 1162,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"selected\" state of various widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-pressed.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1720,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 293,
						"name": "AriaAttributes.'aria-selected'"
					}
				},
				{
					"id": 1163,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-posinset.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1725,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 294,
						"name": "AriaAttributes.'aria-setsize'"
					}
				},
				{
					"id": 1164,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1727,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "ascending"
							},
							{
								"type": "stringLiteral",
								"value": "descending"
							},
							{
								"type": "stringLiteral",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 295,
						"name": "AriaAttributes.'aria-sort'"
					}
				},
				{
					"id": 1165,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the maximum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1729,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 296,
						"name": "AriaAttributes.'aria-valuemax'"
					}
				},
				{
					"id": 1166,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the minimum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1731,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 297,
						"name": "AriaAttributes.'aria-valuemin'"
					}
				},
				{
					"id": 1167,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the current value for a range widget.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-valuetext.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1736,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 298,
						"name": "AriaAttributes.'aria-valuenow'"
					}
				},
				{
					"id": 1168,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1738,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 299,
						"name": "AriaAttributes.'aria-valuetext'"
					}
				},
				{
					"id": 1107,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1783,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 238,
						"name": "HTMLAttributes.autoCapitalize"
					}
				},
				{
					"id": 1108,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1784,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 239,
						"name": "HTMLAttributes.autoCorrect"
					}
				},
				{
					"id": 1109,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1785,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 240,
						"name": "HTMLAttributes.autoSave"
					}
				},
				{
					"id": 1074,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/TableHead/index.tsx",
							"line": 6,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "React.ReactNode"
					},
					"overwrites": {
						"type": "reference",
						"name": "DOMAttributes.children"
					}
				},
				{
					"id": 1075,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/TableHead/index.tsx",
							"line": 7,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"id": 213,
						"name": "HTMLAttributes.className"
					}
				},
				{
					"id": 1110,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1786,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 241,
						"name": "HTMLAttributes.color"
					}
				},
				{
					"id": 1083,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1751,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Booleanish"
							},
							{
								"type": "stringLiteral",
								"value": "inherit"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 214,
						"name": "HTMLAttributes.contentEditable"
					}
				},
				{
					"id": 1084,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1752,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 215,
						"name": "HTMLAttributes.contextMenu"
					}
				},
				{
					"id": 1169,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1347,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1170,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1171,
											"name": "__html",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 1348,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1171
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 300,
						"name": "DOMAttributes.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 1100,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1774,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 231,
						"name": "HTMLAttributes.datatype"
					}
				},
				{
					"id": 1078,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1743,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 208,
						"name": "HTMLAttributes.defaultChecked"
					}
				},
				{
					"id": 1079,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1744,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "ReadonlyArray"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 209,
						"name": "HTMLAttributes.defaultValue"
					}
				},
				{
					"id": 1085,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1753,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 216,
						"name": "HTMLAttributes.dir"
					}
				},
				{
					"id": 1086,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1754,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 217,
						"name": "HTMLAttributes.draggable"
					}
				},
				{
					"id": 1087,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1755,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 218,
						"name": "HTMLAttributes.hidden"
					}
				},
				{
					"id": 1088,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1756,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 219,
						"name": "HTMLAttributes.id"
					}
				},
				{
					"id": 1101,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1775,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 232,
						"name": "HTMLAttributes.inlist"
					}
				},
				{
					"id": 1119,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1801,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "tel"
							},
							{
								"type": "stringLiteral",
								"value": "url"
							},
							{
								"type": "stringLiteral",
								"value": "email"
							},
							{
								"type": "stringLiteral",
								"value": "numeric"
							},
							{
								"type": "stringLiteral",
								"value": "decimal"
							},
							{
								"type": "stringLiteral",
								"value": "search"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 250,
						"name": "HTMLAttributes.inputMode"
					}
				},
				{
					"id": 1120,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1806,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 251,
						"name": "HTMLAttributes.is"
					}
				},
				{
					"id": 1114,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1790,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 245,
						"name": "HTMLAttributes.itemID"
					}
				},
				{
					"id": 1111,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1787,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 242,
						"name": "HTMLAttributes.itemProp"
					}
				},
				{
					"id": 1115,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1791,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 246,
						"name": "HTMLAttributes.itemRef"
					}
				},
				{
					"id": 1112,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1788,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 243,
						"name": "HTMLAttributes.itemScope"
					}
				},
				{
					"id": 1113,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1789,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 244,
						"name": "HTMLAttributes.itemType"
					}
				},
				{
					"id": 1077,
					"name": "key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 133,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Key"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1077,
						"name": "Attributes.key"
					}
				},
				{
					"id": 1089,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1757,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 220,
						"name": "HTMLAttributes.lang"
					}
				},
				{
					"id": 1210,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1402,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 341,
						"name": "DOMAttributes.onAbort"
					}
				},
				{
					"id": 1211,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1403,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 342,
						"name": "DOMAttributes.onAbortCapture"
					}
				},
				{
					"id": 1326,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1532,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 457,
						"name": "DOMAttributes.onAnimationEnd"
					}
				},
				{
					"id": 1327,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1533,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 458,
						"name": "DOMAttributes.onAnimationEndCapture"
					}
				},
				{
					"id": 1328,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 459,
						"name": "DOMAttributes.onAnimationIteration"
					}
				},
				{
					"id": 1329,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 460,
						"name": "DOMAttributes.onAnimationIterationCapture"
					}
				},
				{
					"id": 1324,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1530,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 455,
						"name": "DOMAttributes.onAnimationStart"
					}
				},
				{
					"id": 1325,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 456,
						"name": "DOMAttributes.onAnimationStartCapture"
					}
				},
				{
					"id": 1254,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1448,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 385,
						"name": "DOMAttributes.onAuxClick"
					}
				},
				{
					"id": 1255,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 386,
						"name": "DOMAttributes.onAuxClickCapture"
					}
				},
				{
					"id": 1190,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 321,
						"name": "DOMAttributes.onBeforeInput"
					}
				},
				{
					"id": 1191,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 322,
						"name": "DOMAttributes.onBeforeInputCapture"
					}
				},
				{
					"id": 1186,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1370,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 317,
						"name": "DOMAttributes.onBlur"
					}
				},
				{
					"id": 1187,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1371,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 318,
						"name": "DOMAttributes.onBlurCapture"
					}
				},
				{
					"id": 1212,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 343,
						"name": "DOMAttributes.onCanPlay"
					}
				},
				{
					"id": 1213,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 344,
						"name": "DOMAttributes.onCanPlayCapture"
					}
				},
				{
					"id": 1214,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 345,
						"name": "DOMAttributes.onCanPlayThrough"
					}
				},
				{
					"id": 1215,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 346,
						"name": "DOMAttributes.onCanPlayThroughCapture"
					}
				},
				{
					"id": 1188,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1374,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 319,
						"name": "DOMAttributes.onChange"
					}
				},
				{
					"id": 1189,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1375,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 320,
						"name": "DOMAttributes.onChangeCapture"
					}
				},
				{
					"id": 1256,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 387,
						"name": "DOMAttributes.onClick"
					}
				},
				{
					"id": 1257,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 388,
						"name": "DOMAttributes.onClickCapture"
					}
				},
				{
					"id": 1178,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1360,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 309,
						"name": "DOMAttributes.onCompositionEnd"
					}
				},
				{
					"id": 1179,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1361,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 310,
						"name": "DOMAttributes.onCompositionEndCapture"
					}
				},
				{
					"id": 1180,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1362,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 311,
						"name": "DOMAttributes.onCompositionStart"
					}
				},
				{
					"id": 1181,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1363,
							"character": 33
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 312,
						"name": "DOMAttributes.onCompositionStartCapture"
					}
				},
				{
					"id": 1182,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1364,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 313,
						"name": "DOMAttributes.onCompositionUpdate"
					}
				},
				{
					"id": 1183,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1365,
							"character": 34
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 314,
						"name": "DOMAttributes.onCompositionUpdateCapture"
					}
				},
				{
					"id": 1258,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 389,
						"name": "DOMAttributes.onContextMenu"
					}
				},
				{
					"id": 1259,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 390,
						"name": "DOMAttributes.onContextMenuCapture"
					}
				},
				{
					"id": 1172,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1352,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 303,
						"name": "DOMAttributes.onCopy"
					}
				},
				{
					"id": 1173,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1353,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 304,
						"name": "DOMAttributes.onCopyCapture"
					}
				},
				{
					"id": 1174,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1354,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 305,
						"name": "DOMAttributes.onCut"
					}
				},
				{
					"id": 1175,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1355,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 306,
						"name": "DOMAttributes.onCutCapture"
					}
				},
				{
					"id": 1260,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 391,
						"name": "DOMAttributes.onDoubleClick"
					}
				},
				{
					"id": 1261,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 392,
						"name": "DOMAttributes.onDoubleClickCapture"
					}
				},
				{
					"id": 1262,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 393,
						"name": "DOMAttributes.onDrag"
					}
				},
				{
					"id": 1263,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 394,
						"name": "DOMAttributes.onDragCapture"
					}
				},
				{
					"id": 1264,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 395,
						"name": "DOMAttributes.onDragEnd"
					}
				},
				{
					"id": 1265,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 396,
						"name": "DOMAttributes.onDragEndCapture"
					}
				},
				{
					"id": 1266,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 397,
						"name": "DOMAttributes.onDragEnter"
					}
				},
				{
					"id": 1267,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 398,
						"name": "DOMAttributes.onDragEnterCapture"
					}
				},
				{
					"id": 1268,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 399,
						"name": "DOMAttributes.onDragExit"
					}
				},
				{
					"id": 1269,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 400,
						"name": "DOMAttributes.onDragExitCapture"
					}
				},
				{
					"id": 1270,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 401,
						"name": "DOMAttributes.onDragLeave"
					}
				},
				{
					"id": 1271,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 402,
						"name": "DOMAttributes.onDragLeaveCapture"
					}
				},
				{
					"id": 1272,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 403,
						"name": "DOMAttributes.onDragOver"
					}
				},
				{
					"id": 1273,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 404,
						"name": "DOMAttributes.onDragOverCapture"
					}
				},
				{
					"id": 1274,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 405,
						"name": "DOMAttributes.onDragStart"
					}
				},
				{
					"id": 1275,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 406,
						"name": "DOMAttributes.onDragStartCapture"
					}
				},
				{
					"id": 1276,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 407,
						"name": "DOMAttributes.onDrop"
					}
				},
				{
					"id": 1277,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 408,
						"name": "DOMAttributes.onDropCapture"
					}
				},
				{
					"id": 1216,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 347,
						"name": "DOMAttributes.onDurationChange"
					}
				},
				{
					"id": 1217,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 348,
						"name": "DOMAttributes.onDurationChangeCapture"
					}
				},
				{
					"id": 1218,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 349,
						"name": "DOMAttributes.onEmptied"
					}
				},
				{
					"id": 1219,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 350,
						"name": "DOMAttributes.onEmptiedCapture"
					}
				},
				{
					"id": 1220,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 351,
						"name": "DOMAttributes.onEncrypted"
					}
				},
				{
					"id": 1221,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 352,
						"name": "DOMAttributes.onEncryptedCapture"
					}
				},
				{
					"id": 1222,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 353,
						"name": "DOMAttributes.onEnded"
					}
				},
				{
					"id": 1223,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 354,
						"name": "DOMAttributes.onEndedCapture"
					}
				},
				{
					"id": 1202,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 333,
						"name": "DOMAttributes.onError"
					}
				},
				{
					"id": 1203,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 334,
						"name": "DOMAttributes.onErrorCapture"
					}
				},
				{
					"id": 1184,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1368,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 315,
						"name": "DOMAttributes.onFocus"
					}
				},
				{
					"id": 1185,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1369,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 316,
						"name": "DOMAttributes.onFocusCapture"
					}
				},
				{
					"id": 1316,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 447,
						"name": "DOMAttributes.onGotPointerCapture"
					}
				},
				{
					"id": 1317,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 34
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 448,
						"name": "DOMAttributes.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 1192,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1378,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 323,
						"name": "DOMAttributes.onInput"
					}
				},
				{
					"id": 1193,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1379,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 324,
						"name": "DOMAttributes.onInputCapture"
					}
				},
				{
					"id": 1198,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 329,
						"name": "DOMAttributes.onInvalid"
					}
				},
				{
					"id": 1199,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 330,
						"name": "DOMAttributes.onInvalidCapture"
					}
				},
				{
					"id": 1204,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1394,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 335,
						"name": "DOMAttributes.onKeyDown"
					}
				},
				{
					"id": 1205,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 336,
						"name": "DOMAttributes.onKeyDownCapture"
					}
				},
				{
					"id": 1206,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1396,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 337,
						"name": "DOMAttributes.onKeyPress"
					}
				},
				{
					"id": 1207,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1397,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 338,
						"name": "DOMAttributes.onKeyPressCapture"
					}
				},
				{
					"id": 1208,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 339,
						"name": "DOMAttributes.onKeyUp"
					}
				},
				{
					"id": 1209,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 340,
						"name": "DOMAttributes.onKeyUpCapture"
					}
				},
				{
					"id": 1200,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1388,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 331,
						"name": "DOMAttributes.onLoad"
					}
				},
				{
					"id": 1201,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1389,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 332,
						"name": "DOMAttributes.onLoadCapture"
					}
				},
				{
					"id": 1228,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 359,
						"name": "DOMAttributes.onLoadStart"
					}
				},
				{
					"id": 1229,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 360,
						"name": "DOMAttributes.onLoadStartCapture"
					}
				},
				{
					"id": 1224,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1416,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 355,
						"name": "DOMAttributes.onLoadedData"
					}
				},
				{
					"id": 1225,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1417,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 356,
						"name": "DOMAttributes.onLoadedDataCapture"
					}
				},
				{
					"id": 1226,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 357,
						"name": "DOMAttributes.onLoadedMetadata"
					}
				},
				{
					"id": 1227,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 358,
						"name": "DOMAttributes.onLoadedMetadataCapture"
					}
				},
				{
					"id": 1318,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1518,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 449,
						"name": "DOMAttributes.onLostPointerCapture"
					}
				},
				{
					"id": 1319,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1519,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 450,
						"name": "DOMAttributes.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 1278,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 409,
						"name": "DOMAttributes.onMouseDown"
					}
				},
				{
					"id": 1279,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 410,
						"name": "DOMAttributes.onMouseDownCapture"
					}
				},
				{
					"id": 1280,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 411,
						"name": "DOMAttributes.onMouseEnter"
					}
				},
				{
					"id": 1281,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 412,
						"name": "DOMAttributes.onMouseLeave"
					}
				},
				{
					"id": 1282,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 413,
						"name": "DOMAttributes.onMouseMove"
					}
				},
				{
					"id": 1283,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 414,
						"name": "DOMAttributes.onMouseMoveCapture"
					}
				},
				{
					"id": 1284,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 415,
						"name": "DOMAttributes.onMouseOut"
					}
				},
				{
					"id": 1285,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 416,
						"name": "DOMAttributes.onMouseOutCapture"
					}
				},
				{
					"id": 1286,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1480,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 417,
						"name": "DOMAttributes.onMouseOver"
					}
				},
				{
					"id": 1287,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1481,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 418,
						"name": "DOMAttributes.onMouseOverCapture"
					}
				},
				{
					"id": 1288,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 419,
						"name": "DOMAttributes.onMouseUp"
					}
				},
				{
					"id": 1289,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 420,
						"name": "DOMAttributes.onMouseUpCapture"
					}
				},
				{
					"id": 1176,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1356,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 307,
						"name": "DOMAttributes.onPaste"
					}
				},
				{
					"id": 1177,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1357,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 308,
						"name": "DOMAttributes.onPasteCapture"
					}
				},
				{
					"id": 1230,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1422,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 361,
						"name": "DOMAttributes.onPause"
					}
				},
				{
					"id": 1231,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1423,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 362,
						"name": "DOMAttributes.onPauseCapture"
					}
				},
				{
					"id": 1232,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 363,
						"name": "DOMAttributes.onPlay"
					}
				},
				{
					"id": 1233,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 364,
						"name": "DOMAttributes.onPlayCapture"
					}
				},
				{
					"id": 1234,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1426,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 365,
						"name": "DOMAttributes.onPlaying"
					}
				},
				{
					"id": 1235,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 366,
						"name": "DOMAttributes.onPlayingCapture"
					}
				},
				{
					"id": 1306,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 437,
						"name": "DOMAttributes.onPointerCancel"
					}
				},
				{
					"id": 1307,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 438,
						"name": "DOMAttributes.onPointerCancelCapture"
					}
				},
				{
					"id": 1300,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1500,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 431,
						"name": "DOMAttributes.onPointerDown"
					}
				},
				{
					"id": 1301,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 432,
						"name": "DOMAttributes.onPointerDownCapture"
					}
				},
				{
					"id": 1308,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 439,
						"name": "DOMAttributes.onPointerEnter"
					}
				},
				{
					"id": 1309,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 440,
						"name": "DOMAttributes.onPointerEnterCapture"
					}
				},
				{
					"id": 1310,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 441,
						"name": "DOMAttributes.onPointerLeave"
					}
				},
				{
					"id": 1311,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 442,
						"name": "DOMAttributes.onPointerLeaveCapture"
					}
				},
				{
					"id": 1302,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 433,
						"name": "DOMAttributes.onPointerMove"
					}
				},
				{
					"id": 1303,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 434,
						"name": "DOMAttributes.onPointerMoveCapture"
					}
				},
				{
					"id": 1314,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 445,
						"name": "DOMAttributes.onPointerOut"
					}
				},
				{
					"id": 1315,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 446,
						"name": "DOMAttributes.onPointerOutCapture"
					}
				},
				{
					"id": 1312,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 443,
						"name": "DOMAttributes.onPointerOver"
					}
				},
				{
					"id": 1313,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 444,
						"name": "DOMAttributes.onPointerOverCapture"
					}
				},
				{
					"id": 1304,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 435,
						"name": "DOMAttributes.onPointerUp"
					}
				},
				{
					"id": 1305,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 436,
						"name": "DOMAttributes.onPointerUpCapture"
					}
				},
				{
					"id": 1236,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1428,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 367,
						"name": "DOMAttributes.onProgress"
					}
				},
				{
					"id": 1237,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 368,
						"name": "DOMAttributes.onProgressCapture"
					}
				},
				{
					"id": 1238,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 369,
						"name": "DOMAttributes.onRateChange"
					}
				},
				{
					"id": 1239,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 370,
						"name": "DOMAttributes.onRateChangeCapture"
					}
				},
				{
					"id": 1194,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1380,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 325,
						"name": "DOMAttributes.onReset"
					}
				},
				{
					"id": 1195,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1381,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 326,
						"name": "DOMAttributes.onResetCapture"
					}
				},
				{
					"id": 1320,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1522,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 451,
						"name": "DOMAttributes.onScroll"
					}
				},
				{
					"id": 1321,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1523,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 452,
						"name": "DOMAttributes.onScrollCapture"
					}
				},
				{
					"id": 1240,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1432,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 371,
						"name": "DOMAttributes.onSeeked"
					}
				},
				{
					"id": 1241,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1433,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 372,
						"name": "DOMAttributes.onSeekedCapture"
					}
				},
				{
					"id": 1242,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 373,
						"name": "DOMAttributes.onSeeking"
					}
				},
				{
					"id": 1243,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 374,
						"name": "DOMAttributes.onSeekingCapture"
					}
				},
				{
					"id": 1290,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1486,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 421,
						"name": "DOMAttributes.onSelect"
					}
				},
				{
					"id": 1291,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 422,
						"name": "DOMAttributes.onSelectCapture"
					}
				},
				{
					"id": 1244,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 375,
						"name": "DOMAttributes.onStalled"
					}
				},
				{
					"id": 1245,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 376,
						"name": "DOMAttributes.onStalledCapture"
					}
				},
				{
					"id": 1196,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 327,
						"name": "DOMAttributes.onSubmit"
					}
				},
				{
					"id": 1197,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 328,
						"name": "DOMAttributes.onSubmitCapture"
					}
				},
				{
					"id": 1246,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 377,
						"name": "DOMAttributes.onSuspend"
					}
				},
				{
					"id": 1247,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 378,
						"name": "DOMAttributes.onSuspendCapture"
					}
				},
				{
					"id": 1248,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 379,
						"name": "DOMAttributes.onTimeUpdate"
					}
				},
				{
					"id": 1249,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 380,
						"name": "DOMAttributes.onTimeUpdateCapture"
					}
				},
				{
					"id": 1292,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1490,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 423,
						"name": "DOMAttributes.onTouchCancel"
					}
				},
				{
					"id": 1293,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 424,
						"name": "DOMAttributes.onTouchCancelCapture"
					}
				},
				{
					"id": 1294,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 425,
						"name": "DOMAttributes.onTouchEnd"
					}
				},
				{
					"id": 1295,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 426,
						"name": "DOMAttributes.onTouchEndCapture"
					}
				},
				{
					"id": 1296,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 427,
						"name": "DOMAttributes.onTouchMove"
					}
				},
				{
					"id": 1297,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 428,
						"name": "DOMAttributes.onTouchMoveCapture"
					}
				},
				{
					"id": 1298,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 429,
						"name": "DOMAttributes.onTouchStart"
					}
				},
				{
					"id": 1299,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 430,
						"name": "DOMAttributes.onTouchStartCapture"
					}
				},
				{
					"id": 1330,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1538,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 461,
						"name": "DOMAttributes.onTransitionEnd"
					}
				},
				{
					"id": 1331,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 462,
						"name": "DOMAttributes.onTransitionEndCapture"
					}
				},
				{
					"id": 1250,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 381,
						"name": "DOMAttributes.onVolumeChange"
					}
				},
				{
					"id": 1251,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 382,
						"name": "DOMAttributes.onVolumeChangeCapture"
					}
				},
				{
					"id": 1252,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 383,
						"name": "DOMAttributes.onWaiting"
					}
				},
				{
					"id": 1253,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 384,
						"name": "DOMAttributes.onWaitingCapture"
					}
				},
				{
					"id": 1322,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1526,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 453,
						"name": "DOMAttributes.onWheel"
					}
				},
				{
					"id": 1323,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 454,
						"name": "DOMAttributes.onWheelCapture"
					}
				},
				{
					"id": 1090,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1758,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 221,
						"name": "HTMLAttributes.placeholder"
					}
				},
				{
					"id": 1102,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1776,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 233,
						"name": "HTMLAttributes.prefix"
					}
				},
				{
					"id": 1103,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1777,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 234,
						"name": "HTMLAttributes.property"
					}
				},
				{
					"id": 1097,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1767,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 228,
						"name": "HTMLAttributes.radioGroup"
					}
				},
				{
					"id": 1076,
					"name": "ref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 139,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "LegacyRef"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1076,
						"name": "ClassAttributes.ref"
					}
				},
				{
					"id": 1104,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1778,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 235,
						"name": "HTMLAttributes.resource"
					}
				},
				{
					"id": 1116,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1792,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 247,
						"name": "HTMLAttributes.results"
					}
				},
				{
					"id": 1098,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1770,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 229,
						"name": "HTMLAttributes.role"
					}
				},
				{
					"id": 1117,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1793,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 248,
						"name": "HTMLAttributes.security"
					}
				},
				{
					"id": 1091,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1759,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 222,
						"name": "HTMLAttributes.slot"
					}
				},
				{
					"id": 1092,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1760,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 223,
						"name": "HTMLAttributes.spellCheck"
					}
				},
				{
					"id": 1093,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1761,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 224,
						"name": "HTMLAttributes.style"
					}
				},
				{
					"id": 1073,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/TableHead/index.tsx",
							"line": 5,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 1080,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1745,
							"character": 38
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 210,
						"name": "HTMLAttributes.suppressContentEditableWarning"
					}
				},
				{
					"id": 1081,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1746,
							"character": 32
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 211,
						"name": "HTMLAttributes.suppressHydrationWarning"
					}
				},
				{
					"id": 1094,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1762,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 225,
						"name": "HTMLAttributes.tabIndex"
					}
				},
				{
					"id": 1095,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1763,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 226,
						"name": "HTMLAttributes.title"
					}
				},
				{
					"id": 1096,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1764,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "yes"
							},
							{
								"type": "stringLiteral",
								"value": "no"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 227,
						"name": "HTMLAttributes.translate"
					}
				},
				{
					"id": 1105,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1779,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 236,
						"name": "HTMLAttributes.typeof"
					}
				},
				{
					"id": 1118,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1794,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "on"
							},
							{
								"type": "stringLiteral",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 249,
						"name": "HTMLAttributes.unselectable"
					}
				},
				{
					"id": 1106,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1780,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 237,
						"name": "HTMLAttributes.vocab"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1099,
						1082,
						1121,
						1122,
						1123,
						1124,
						1125,
						1126,
						1127,
						1128,
						1129,
						1130,
						1131,
						1132,
						1133,
						1134,
						1135,
						1136,
						1137,
						1138,
						1139,
						1140,
						1141,
						1142,
						1143,
						1144,
						1145,
						1146,
						1147,
						1148,
						1149,
						1150,
						1151,
						1152,
						1153,
						1154,
						1155,
						1156,
						1157,
						1158,
						1159,
						1160,
						1161,
						1162,
						1163,
						1164,
						1165,
						1166,
						1167,
						1168,
						1107,
						1108,
						1109,
						1074,
						1075,
						1110,
						1083,
						1084,
						1169,
						1100,
						1078,
						1079,
						1085,
						1086,
						1087,
						1088,
						1101,
						1119,
						1120,
						1114,
						1111,
						1115,
						1112,
						1113,
						1077,
						1089,
						1210,
						1211,
						1326,
						1327,
						1328,
						1329,
						1324,
						1325,
						1254,
						1255,
						1190,
						1191,
						1186,
						1187,
						1212,
						1213,
						1214,
						1215,
						1188,
						1189,
						1256,
						1257,
						1178,
						1179,
						1180,
						1181,
						1182,
						1183,
						1258,
						1259,
						1172,
						1173,
						1174,
						1175,
						1260,
						1261,
						1262,
						1263,
						1264,
						1265,
						1266,
						1267,
						1268,
						1269,
						1270,
						1271,
						1272,
						1273,
						1274,
						1275,
						1276,
						1277,
						1216,
						1217,
						1218,
						1219,
						1220,
						1221,
						1222,
						1223,
						1202,
						1203,
						1184,
						1185,
						1316,
						1317,
						1192,
						1193,
						1198,
						1199,
						1204,
						1205,
						1206,
						1207,
						1208,
						1209,
						1200,
						1201,
						1228,
						1229,
						1224,
						1225,
						1226,
						1227,
						1318,
						1319,
						1278,
						1279,
						1280,
						1281,
						1282,
						1283,
						1284,
						1285,
						1286,
						1287,
						1288,
						1289,
						1176,
						1177,
						1230,
						1231,
						1232,
						1233,
						1234,
						1235,
						1306,
						1307,
						1300,
						1301,
						1308,
						1309,
						1310,
						1311,
						1302,
						1303,
						1314,
						1315,
						1312,
						1313,
						1304,
						1305,
						1236,
						1237,
						1238,
						1239,
						1194,
						1195,
						1320,
						1321,
						1240,
						1241,
						1242,
						1243,
						1290,
						1291,
						1244,
						1245,
						1196,
						1197,
						1246,
						1247,
						1248,
						1249,
						1292,
						1293,
						1294,
						1295,
						1296,
						1297,
						1298,
						1299,
						1330,
						1331,
						1250,
						1251,
						1252,
						1253,
						1322,
						1323,
						1090,
						1102,
						1103,
						1097,
						1076,
						1104,
						1116,
						1098,
						1117,
						1091,
						1092,
						1093,
						1073,
						1080,
						1081,
						1094,
						1095,
						1096,
						1105,
						1118,
						1106
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/TableHead/index.tsx",
					"line": 4,
					"character": 19
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "HTMLTableSectionElement"
								}
							],
							"name": "ClassAttributes"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "HTMLTableSectionElement"
								}
							],
							"name": "HTMLAttributes"
						}
					]
				}
			]
		},
		{
			"id": 2400,
			"name": "TableHeadCell",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2427,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1773,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 230,
						"name": "HTMLAttributes.about"
					}
				},
				{
					"id": 2410,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1749,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 212,
						"name": "HTMLAttributes.accessKey"
					}
				},
				{
					"id": 2449,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1556,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 252,
						"name": "AriaAttributes.'aria-activedescendant'"
					}
				},
				{
					"id": 2450,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1558,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 253,
						"name": "AriaAttributes.'aria-atomic'"
					}
				},
				{
					"id": 2451,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1563,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "list"
							},
							{
								"type": "stringLiteral",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 254,
						"name": "AriaAttributes.'aria-autocomplete'"
					}
				},
				{
					"id": 2452,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1565,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 255,
						"name": "AriaAttributes.'aria-busy'"
					}
				},
				{
					"id": 2453,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-pressed @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1570,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "mixed"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 256,
						"name": "AriaAttributes.'aria-checked'"
					}
				},
				{
					"id": 2454,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1575,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 257,
						"name": "AriaAttributes.'aria-colcount'"
					}
				},
				{
					"id": 2455,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colcount @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1580,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 258,
						"name": "AriaAttributes.'aria-colindex'"
					}
				},
				{
					"id": 2456,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1585,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 259,
						"name": "AriaAttributes.'aria-colspan'"
					}
				},
				{
					"id": 2457,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-owns.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1590,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 260,
						"name": "AriaAttributes.'aria-controls'"
					}
				},
				{
					"id": 2458,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the element that represents the current item within a container or set of related elements."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1592,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "page"
							},
							{
								"type": "stringLiteral",
								"value": "step"
							},
							{
								"type": "stringLiteral",
								"value": "location"
							},
							{
								"type": "stringLiteral",
								"value": "date"
							},
							{
								"type": "stringLiteral",
								"value": "time"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 261,
						"name": "AriaAttributes.'aria-current'"
					}
				},
				{
					"id": 2459,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1597,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 262,
						"name": "AriaAttributes.'aria-describedby'"
					}
				},
				{
					"id": 2460,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides a detailed, extended description for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1602,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 263,
						"name": "AriaAttributes.'aria-details'"
					}
				},
				{
					"id": 2461,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-hidden @see aria-readonly.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1607,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 264,
						"name": "AriaAttributes.'aria-disabled'"
					}
				},
				{
					"id": 2462,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1612,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "copy"
							},
							{
								"type": "stringLiteral",
								"value": "execute"
							},
							{
								"type": "stringLiteral",
								"value": "link"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 265,
						"name": "AriaAttributes.'aria-dropeffect'"
					}
				},
				{
					"id": 2463,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides an error message for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-invalid @see aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1617,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 266,
						"name": "AriaAttributes.'aria-errormessage'"
					}
				},
				{
					"id": 2464,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1619,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 267,
						"name": "AriaAttributes.'aria-expanded'"
					}
				},
				{
					"id": 2465,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1624,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 268,
						"name": "AriaAttributes.'aria-flowto'"
					}
				},
				{
					"id": 2466,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1629,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 269,
						"name": "AriaAttributes.'aria-grabbed'"
					}
				},
				{
					"id": 2467,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1631,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "menu"
							},
							{
								"type": "stringLiteral",
								"value": "listbox"
							},
							{
								"type": "stringLiteral",
								"value": "tree"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "dialog"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 270,
						"name": "AriaAttributes.'aria-haspopup'"
					}
				},
				{
					"id": 2468,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element is exposed to an accessibility API.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1636,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 271,
						"name": "AriaAttributes.'aria-hidden'"
					}
				},
				{
					"id": 2469,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the entered value does not conform to the format expected by the application.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-errormessage.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1641,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "grammar"
							},
							{
								"type": "stringLiteral",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 272,
						"name": "AriaAttributes.'aria-invalid'"
					}
				},
				{
					"id": 2470,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1643,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 273,
						"name": "AriaAttributes.'aria-keyshortcuts'"
					}
				},
				{
					"id": 2471,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1648,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 274,
						"name": "AriaAttributes.'aria-label'"
					}
				},
				{
					"id": 2472,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1653,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 275,
						"name": "AriaAttributes.'aria-labelledby'"
					}
				},
				{
					"id": 2473,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the hierarchical level of an element within a structure."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1655,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 276,
						"name": "AriaAttributes.'aria-level'"
					}
				},
				{
					"id": 2474,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1657,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "off"
							},
							{
								"type": "stringLiteral",
								"value": "assertive"
							},
							{
								"type": "stringLiteral",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 277,
						"name": "AriaAttributes.'aria-live'"
					}
				},
				{
					"id": 2475,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether an element is modal when displayed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1659,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 278,
						"name": "AriaAttributes.'aria-modal'"
					}
				},
				{
					"id": 2476,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1661,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 279,
						"name": "AriaAttributes.'aria-multiline'"
					}
				},
				{
					"id": 2477,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1663,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 280,
						"name": "AriaAttributes.'aria-multiselectable'"
					}
				},
				{
					"id": 2478,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1665,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "horizontal"
							},
							{
								"type": "stringLiteral",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 281,
						"name": "AriaAttributes.'aria-orientation'"
					}
				},
				{
					"id": 2479,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-controls.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1671,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 282,
						"name": "AriaAttributes.'aria-owns'"
					}
				},
				{
					"id": 2480,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1676,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 283,
						"name": "AriaAttributes.'aria-placeholder'"
					}
				},
				{
					"id": 2481,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-setsize.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1681,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 284,
						"name": "AriaAttributes.'aria-posinset'"
					}
				},
				{
					"id": 2482,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1686,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "mixed"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 285,
						"name": "AriaAttributes.'aria-pressed'"
					}
				},
				{
					"id": 2483,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is not editable, but is otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1691,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 286,
						"name": "AriaAttributes.'aria-readonly'"
					}
				},
				{
					"id": 2484,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-atomic.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1696,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "additions"
							},
							{
								"type": "stringLiteral",
								"value": "additions removals"
							},
							{
								"type": "stringLiteral",
								"value": "additions text"
							},
							{
								"type": "stringLiteral",
								"value": "all"
							},
							{
								"type": "stringLiteral",
								"value": "removals"
							},
							{
								"type": "stringLiteral",
								"value": "removals additions"
							},
							{
								"type": "stringLiteral",
								"value": "removals text"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "text additions"
							},
							{
								"type": "stringLiteral",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 287,
						"name": "AriaAttributes.'aria-relevant'"
					}
				},
				{
					"id": 2485,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that user input is required on the element before a form may be submitted."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1698,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 288,
						"name": "AriaAttributes.'aria-required'"
					}
				},
				{
					"id": 2486,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a human-readable, author-localized description for the role of an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1700,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 289,
						"name": "AriaAttributes.'aria-roledescription'"
					}
				},
				{
					"id": 2487,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1705,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 290,
						"name": "AriaAttributes.'aria-rowcount'"
					}
				},
				{
					"id": 2488,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowcount @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1710,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 291,
						"name": "AriaAttributes.'aria-rowindex'"
					}
				},
				{
					"id": 2489,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1715,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 292,
						"name": "AriaAttributes.'aria-rowspan'"
					}
				},
				{
					"id": 2490,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"selected\" state of various widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-pressed.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1720,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 293,
						"name": "AriaAttributes.'aria-selected'"
					}
				},
				{
					"id": 2491,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-posinset.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1725,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 294,
						"name": "AriaAttributes.'aria-setsize'"
					}
				},
				{
					"id": 2492,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1727,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "ascending"
							},
							{
								"type": "stringLiteral",
								"value": "descending"
							},
							{
								"type": "stringLiteral",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 295,
						"name": "AriaAttributes.'aria-sort'"
					}
				},
				{
					"id": 2493,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the maximum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1729,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 296,
						"name": "AriaAttributes.'aria-valuemax'"
					}
				},
				{
					"id": 2494,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the minimum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1731,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 297,
						"name": "AriaAttributes.'aria-valuemin'"
					}
				},
				{
					"id": 2495,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the current value for a range widget.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-valuetext.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1736,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 298,
						"name": "AriaAttributes.'aria-valuenow'"
					}
				},
				{
					"id": 2496,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1738,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 299,
						"name": "AriaAttributes.'aria-valuetext'"
					}
				},
				{
					"id": 2435,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1783,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 238,
						"name": "HTMLAttributes.autoCapitalize"
					}
				},
				{
					"id": 2436,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1784,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 239,
						"name": "HTMLAttributes.autoCorrect"
					}
				},
				{
					"id": 2437,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1785,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 240,
						"name": "HTMLAttributes.autoSave"
					}
				},
				{
					"id": 2402,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/TableHeadCell/index.tsx",
							"line": 7,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "React.ReactNode"
					},
					"overwrites": {
						"type": "reference",
						"name": "DOMAttributes.children"
					}
				},
				{
					"id": 2403,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/TableHeadCell/index.tsx",
							"line": 8,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"id": 213,
						"name": "HTMLAttributes.className"
					}
				},
				{
					"id": 2438,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1786,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 241,
						"name": "HTMLAttributes.color"
					}
				},
				{
					"id": 2411,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1751,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Booleanish"
							},
							{
								"type": "stringLiteral",
								"value": "inherit"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 214,
						"name": "HTMLAttributes.contentEditable"
					}
				},
				{
					"id": 2412,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1752,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 215,
						"name": "HTMLAttributes.contextMenu"
					}
				},
				{
					"id": 2497,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1347,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2498,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2499,
											"name": "__html",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 1348,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2499
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 300,
						"name": "DOMAttributes.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 2428,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1774,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 231,
						"name": "HTMLAttributes.datatype"
					}
				},
				{
					"id": 2406,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1743,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 208,
						"name": "HTMLAttributes.defaultChecked"
					}
				},
				{
					"id": 2407,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1744,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "ReadonlyArray"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 209,
						"name": "HTMLAttributes.defaultValue"
					}
				},
				{
					"id": 2413,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1753,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 216,
						"name": "HTMLAttributes.dir"
					}
				},
				{
					"id": 2414,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1754,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 217,
						"name": "HTMLAttributes.draggable"
					}
				},
				{
					"id": 2415,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1755,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 218,
						"name": "HTMLAttributes.hidden"
					}
				},
				{
					"id": 2416,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1756,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 219,
						"name": "HTMLAttributes.id"
					}
				},
				{
					"id": 2429,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1775,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 232,
						"name": "HTMLAttributes.inlist"
					}
				},
				{
					"id": 2447,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1801,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "tel"
							},
							{
								"type": "stringLiteral",
								"value": "url"
							},
							{
								"type": "stringLiteral",
								"value": "email"
							},
							{
								"type": "stringLiteral",
								"value": "numeric"
							},
							{
								"type": "stringLiteral",
								"value": "decimal"
							},
							{
								"type": "stringLiteral",
								"value": "search"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 250,
						"name": "HTMLAttributes.inputMode"
					}
				},
				{
					"id": 2448,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1806,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 251,
						"name": "HTMLAttributes.is"
					}
				},
				{
					"id": 2442,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1790,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 245,
						"name": "HTMLAttributes.itemID"
					}
				},
				{
					"id": 2439,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1787,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 242,
						"name": "HTMLAttributes.itemProp"
					}
				},
				{
					"id": 2443,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1791,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 246,
						"name": "HTMLAttributes.itemRef"
					}
				},
				{
					"id": 2440,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1788,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 243,
						"name": "HTMLAttributes.itemScope"
					}
				},
				{
					"id": 2441,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1789,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 244,
						"name": "HTMLAttributes.itemType"
					}
				},
				{
					"id": 2405,
					"name": "key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 133,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Key"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1077,
						"name": "Attributes.key"
					}
				},
				{
					"id": 2417,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1757,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 220,
						"name": "HTMLAttributes.lang"
					}
				},
				{
					"id": 2538,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1402,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 341,
						"name": "DOMAttributes.onAbort"
					}
				},
				{
					"id": 2539,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1403,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 342,
						"name": "DOMAttributes.onAbortCapture"
					}
				},
				{
					"id": 2654,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1532,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 457,
						"name": "DOMAttributes.onAnimationEnd"
					}
				},
				{
					"id": 2655,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1533,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 458,
						"name": "DOMAttributes.onAnimationEndCapture"
					}
				},
				{
					"id": 2656,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 459,
						"name": "DOMAttributes.onAnimationIteration"
					}
				},
				{
					"id": 2657,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 460,
						"name": "DOMAttributes.onAnimationIterationCapture"
					}
				},
				{
					"id": 2652,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1530,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 455,
						"name": "DOMAttributes.onAnimationStart"
					}
				},
				{
					"id": 2653,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 456,
						"name": "DOMAttributes.onAnimationStartCapture"
					}
				},
				{
					"id": 2582,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1448,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 385,
						"name": "DOMAttributes.onAuxClick"
					}
				},
				{
					"id": 2583,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 386,
						"name": "DOMAttributes.onAuxClickCapture"
					}
				},
				{
					"id": 2518,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 321,
						"name": "DOMAttributes.onBeforeInput"
					}
				},
				{
					"id": 2519,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 322,
						"name": "DOMAttributes.onBeforeInputCapture"
					}
				},
				{
					"id": 2514,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1370,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 317,
						"name": "DOMAttributes.onBlur"
					}
				},
				{
					"id": 2515,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1371,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 318,
						"name": "DOMAttributes.onBlurCapture"
					}
				},
				{
					"id": 2540,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 343,
						"name": "DOMAttributes.onCanPlay"
					}
				},
				{
					"id": 2541,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 344,
						"name": "DOMAttributes.onCanPlayCapture"
					}
				},
				{
					"id": 2542,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 345,
						"name": "DOMAttributes.onCanPlayThrough"
					}
				},
				{
					"id": 2543,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 346,
						"name": "DOMAttributes.onCanPlayThroughCapture"
					}
				},
				{
					"id": 2516,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1374,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 319,
						"name": "DOMAttributes.onChange"
					}
				},
				{
					"id": 2517,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1375,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 320,
						"name": "DOMAttributes.onChangeCapture"
					}
				},
				{
					"id": 2584,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 387,
						"name": "DOMAttributes.onClick"
					}
				},
				{
					"id": 2585,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 388,
						"name": "DOMAttributes.onClickCapture"
					}
				},
				{
					"id": 2506,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1360,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 309,
						"name": "DOMAttributes.onCompositionEnd"
					}
				},
				{
					"id": 2507,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1361,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 310,
						"name": "DOMAttributes.onCompositionEndCapture"
					}
				},
				{
					"id": 2508,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1362,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 311,
						"name": "DOMAttributes.onCompositionStart"
					}
				},
				{
					"id": 2509,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1363,
							"character": 33
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 312,
						"name": "DOMAttributes.onCompositionStartCapture"
					}
				},
				{
					"id": 2510,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1364,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 313,
						"name": "DOMAttributes.onCompositionUpdate"
					}
				},
				{
					"id": 2511,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1365,
							"character": 34
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 314,
						"name": "DOMAttributes.onCompositionUpdateCapture"
					}
				},
				{
					"id": 2586,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 389,
						"name": "DOMAttributes.onContextMenu"
					}
				},
				{
					"id": 2587,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 390,
						"name": "DOMAttributes.onContextMenuCapture"
					}
				},
				{
					"id": 2500,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1352,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 303,
						"name": "DOMAttributes.onCopy"
					}
				},
				{
					"id": 2501,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1353,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 304,
						"name": "DOMAttributes.onCopyCapture"
					}
				},
				{
					"id": 2502,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1354,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 305,
						"name": "DOMAttributes.onCut"
					}
				},
				{
					"id": 2503,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1355,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 306,
						"name": "DOMAttributes.onCutCapture"
					}
				},
				{
					"id": 2588,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 391,
						"name": "DOMAttributes.onDoubleClick"
					}
				},
				{
					"id": 2589,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 392,
						"name": "DOMAttributes.onDoubleClickCapture"
					}
				},
				{
					"id": 2590,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 393,
						"name": "DOMAttributes.onDrag"
					}
				},
				{
					"id": 2591,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 394,
						"name": "DOMAttributes.onDragCapture"
					}
				},
				{
					"id": 2592,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 395,
						"name": "DOMAttributes.onDragEnd"
					}
				},
				{
					"id": 2593,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 396,
						"name": "DOMAttributes.onDragEndCapture"
					}
				},
				{
					"id": 2594,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 397,
						"name": "DOMAttributes.onDragEnter"
					}
				},
				{
					"id": 2595,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 398,
						"name": "DOMAttributes.onDragEnterCapture"
					}
				},
				{
					"id": 2596,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 399,
						"name": "DOMAttributes.onDragExit"
					}
				},
				{
					"id": 2597,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 400,
						"name": "DOMAttributes.onDragExitCapture"
					}
				},
				{
					"id": 2598,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 401,
						"name": "DOMAttributes.onDragLeave"
					}
				},
				{
					"id": 2599,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 402,
						"name": "DOMAttributes.onDragLeaveCapture"
					}
				},
				{
					"id": 2600,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 403,
						"name": "DOMAttributes.onDragOver"
					}
				},
				{
					"id": 2601,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 404,
						"name": "DOMAttributes.onDragOverCapture"
					}
				},
				{
					"id": 2602,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 405,
						"name": "DOMAttributes.onDragStart"
					}
				},
				{
					"id": 2603,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 406,
						"name": "DOMAttributes.onDragStartCapture"
					}
				},
				{
					"id": 2604,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 407,
						"name": "DOMAttributes.onDrop"
					}
				},
				{
					"id": 2605,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 408,
						"name": "DOMAttributes.onDropCapture"
					}
				},
				{
					"id": 2544,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 347,
						"name": "DOMAttributes.onDurationChange"
					}
				},
				{
					"id": 2545,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 348,
						"name": "DOMAttributes.onDurationChangeCapture"
					}
				},
				{
					"id": 2546,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 349,
						"name": "DOMAttributes.onEmptied"
					}
				},
				{
					"id": 2547,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 350,
						"name": "DOMAttributes.onEmptiedCapture"
					}
				},
				{
					"id": 2548,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 351,
						"name": "DOMAttributes.onEncrypted"
					}
				},
				{
					"id": 2549,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 352,
						"name": "DOMAttributes.onEncryptedCapture"
					}
				},
				{
					"id": 2550,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 353,
						"name": "DOMAttributes.onEnded"
					}
				},
				{
					"id": 2551,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 354,
						"name": "DOMAttributes.onEndedCapture"
					}
				},
				{
					"id": 2530,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 333,
						"name": "DOMAttributes.onError"
					}
				},
				{
					"id": 2531,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 334,
						"name": "DOMAttributes.onErrorCapture"
					}
				},
				{
					"id": 2512,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1368,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 315,
						"name": "DOMAttributes.onFocus"
					}
				},
				{
					"id": 2513,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1369,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 316,
						"name": "DOMAttributes.onFocusCapture"
					}
				},
				{
					"id": 2644,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 447,
						"name": "DOMAttributes.onGotPointerCapture"
					}
				},
				{
					"id": 2645,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 34
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 448,
						"name": "DOMAttributes.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 2520,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1378,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 323,
						"name": "DOMAttributes.onInput"
					}
				},
				{
					"id": 2521,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1379,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 324,
						"name": "DOMAttributes.onInputCapture"
					}
				},
				{
					"id": 2526,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 329,
						"name": "DOMAttributes.onInvalid"
					}
				},
				{
					"id": 2527,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 330,
						"name": "DOMAttributes.onInvalidCapture"
					}
				},
				{
					"id": 2532,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1394,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 335,
						"name": "DOMAttributes.onKeyDown"
					}
				},
				{
					"id": 2533,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 336,
						"name": "DOMAttributes.onKeyDownCapture"
					}
				},
				{
					"id": 2534,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1396,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 337,
						"name": "DOMAttributes.onKeyPress"
					}
				},
				{
					"id": 2535,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1397,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 338,
						"name": "DOMAttributes.onKeyPressCapture"
					}
				},
				{
					"id": 2536,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 339,
						"name": "DOMAttributes.onKeyUp"
					}
				},
				{
					"id": 2537,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 340,
						"name": "DOMAttributes.onKeyUpCapture"
					}
				},
				{
					"id": 2528,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1388,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 331,
						"name": "DOMAttributes.onLoad"
					}
				},
				{
					"id": 2529,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1389,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 332,
						"name": "DOMAttributes.onLoadCapture"
					}
				},
				{
					"id": 2556,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 359,
						"name": "DOMAttributes.onLoadStart"
					}
				},
				{
					"id": 2557,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 360,
						"name": "DOMAttributes.onLoadStartCapture"
					}
				},
				{
					"id": 2552,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1416,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 355,
						"name": "DOMAttributes.onLoadedData"
					}
				},
				{
					"id": 2553,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1417,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 356,
						"name": "DOMAttributes.onLoadedDataCapture"
					}
				},
				{
					"id": 2554,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 357,
						"name": "DOMAttributes.onLoadedMetadata"
					}
				},
				{
					"id": 2555,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 358,
						"name": "DOMAttributes.onLoadedMetadataCapture"
					}
				},
				{
					"id": 2646,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1518,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 449,
						"name": "DOMAttributes.onLostPointerCapture"
					}
				},
				{
					"id": 2647,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1519,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 450,
						"name": "DOMAttributes.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 2606,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 409,
						"name": "DOMAttributes.onMouseDown"
					}
				},
				{
					"id": 2607,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 410,
						"name": "DOMAttributes.onMouseDownCapture"
					}
				},
				{
					"id": 2608,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 411,
						"name": "DOMAttributes.onMouseEnter"
					}
				},
				{
					"id": 2609,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 412,
						"name": "DOMAttributes.onMouseLeave"
					}
				},
				{
					"id": 2610,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 413,
						"name": "DOMAttributes.onMouseMove"
					}
				},
				{
					"id": 2611,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 414,
						"name": "DOMAttributes.onMouseMoveCapture"
					}
				},
				{
					"id": 2612,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 415,
						"name": "DOMAttributes.onMouseOut"
					}
				},
				{
					"id": 2613,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 416,
						"name": "DOMAttributes.onMouseOutCapture"
					}
				},
				{
					"id": 2614,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1480,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 417,
						"name": "DOMAttributes.onMouseOver"
					}
				},
				{
					"id": 2615,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1481,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 418,
						"name": "DOMAttributes.onMouseOverCapture"
					}
				},
				{
					"id": 2616,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 419,
						"name": "DOMAttributes.onMouseUp"
					}
				},
				{
					"id": 2617,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 420,
						"name": "DOMAttributes.onMouseUpCapture"
					}
				},
				{
					"id": 2504,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1356,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 307,
						"name": "DOMAttributes.onPaste"
					}
				},
				{
					"id": 2505,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1357,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 308,
						"name": "DOMAttributes.onPasteCapture"
					}
				},
				{
					"id": 2558,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1422,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 361,
						"name": "DOMAttributes.onPause"
					}
				},
				{
					"id": 2559,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1423,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 362,
						"name": "DOMAttributes.onPauseCapture"
					}
				},
				{
					"id": 2560,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 363,
						"name": "DOMAttributes.onPlay"
					}
				},
				{
					"id": 2561,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 364,
						"name": "DOMAttributes.onPlayCapture"
					}
				},
				{
					"id": 2562,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1426,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 365,
						"name": "DOMAttributes.onPlaying"
					}
				},
				{
					"id": 2563,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 366,
						"name": "DOMAttributes.onPlayingCapture"
					}
				},
				{
					"id": 2634,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 437,
						"name": "DOMAttributes.onPointerCancel"
					}
				},
				{
					"id": 2635,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 438,
						"name": "DOMAttributes.onPointerCancelCapture"
					}
				},
				{
					"id": 2628,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1500,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 431,
						"name": "DOMAttributes.onPointerDown"
					}
				},
				{
					"id": 2629,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 432,
						"name": "DOMAttributes.onPointerDownCapture"
					}
				},
				{
					"id": 2636,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 439,
						"name": "DOMAttributes.onPointerEnter"
					}
				},
				{
					"id": 2637,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 440,
						"name": "DOMAttributes.onPointerEnterCapture"
					}
				},
				{
					"id": 2638,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 441,
						"name": "DOMAttributes.onPointerLeave"
					}
				},
				{
					"id": 2639,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 442,
						"name": "DOMAttributes.onPointerLeaveCapture"
					}
				},
				{
					"id": 2630,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 433,
						"name": "DOMAttributes.onPointerMove"
					}
				},
				{
					"id": 2631,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 434,
						"name": "DOMAttributes.onPointerMoveCapture"
					}
				},
				{
					"id": 2642,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 445,
						"name": "DOMAttributes.onPointerOut"
					}
				},
				{
					"id": 2643,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 446,
						"name": "DOMAttributes.onPointerOutCapture"
					}
				},
				{
					"id": 2640,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 443,
						"name": "DOMAttributes.onPointerOver"
					}
				},
				{
					"id": 2641,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 444,
						"name": "DOMAttributes.onPointerOverCapture"
					}
				},
				{
					"id": 2632,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 435,
						"name": "DOMAttributes.onPointerUp"
					}
				},
				{
					"id": 2633,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 436,
						"name": "DOMAttributes.onPointerUpCapture"
					}
				},
				{
					"id": 2564,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1428,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 367,
						"name": "DOMAttributes.onProgress"
					}
				},
				{
					"id": 2565,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 368,
						"name": "DOMAttributes.onProgressCapture"
					}
				},
				{
					"id": 2566,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 369,
						"name": "DOMAttributes.onRateChange"
					}
				},
				{
					"id": 2567,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 370,
						"name": "DOMAttributes.onRateChangeCapture"
					}
				},
				{
					"id": 2522,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1380,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 325,
						"name": "DOMAttributes.onReset"
					}
				},
				{
					"id": 2523,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1381,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 326,
						"name": "DOMAttributes.onResetCapture"
					}
				},
				{
					"id": 2648,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1522,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 451,
						"name": "DOMAttributes.onScroll"
					}
				},
				{
					"id": 2649,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1523,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 452,
						"name": "DOMAttributes.onScrollCapture"
					}
				},
				{
					"id": 2568,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1432,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 371,
						"name": "DOMAttributes.onSeeked"
					}
				},
				{
					"id": 2569,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1433,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 372,
						"name": "DOMAttributes.onSeekedCapture"
					}
				},
				{
					"id": 2570,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 373,
						"name": "DOMAttributes.onSeeking"
					}
				},
				{
					"id": 2571,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 374,
						"name": "DOMAttributes.onSeekingCapture"
					}
				},
				{
					"id": 2618,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1486,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 421,
						"name": "DOMAttributes.onSelect"
					}
				},
				{
					"id": 2619,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 422,
						"name": "DOMAttributes.onSelectCapture"
					}
				},
				{
					"id": 2572,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 375,
						"name": "DOMAttributes.onStalled"
					}
				},
				{
					"id": 2573,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 376,
						"name": "DOMAttributes.onStalledCapture"
					}
				},
				{
					"id": 2524,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 327,
						"name": "DOMAttributes.onSubmit"
					}
				},
				{
					"id": 2525,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 328,
						"name": "DOMAttributes.onSubmitCapture"
					}
				},
				{
					"id": 2574,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 377,
						"name": "DOMAttributes.onSuspend"
					}
				},
				{
					"id": 2575,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 378,
						"name": "DOMAttributes.onSuspendCapture"
					}
				},
				{
					"id": 2576,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 379,
						"name": "DOMAttributes.onTimeUpdate"
					}
				},
				{
					"id": 2577,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 380,
						"name": "DOMAttributes.onTimeUpdateCapture"
					}
				},
				{
					"id": 2620,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1490,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 423,
						"name": "DOMAttributes.onTouchCancel"
					}
				},
				{
					"id": 2621,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 424,
						"name": "DOMAttributes.onTouchCancelCapture"
					}
				},
				{
					"id": 2622,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 425,
						"name": "DOMAttributes.onTouchEnd"
					}
				},
				{
					"id": 2623,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 426,
						"name": "DOMAttributes.onTouchEndCapture"
					}
				},
				{
					"id": 2624,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 427,
						"name": "DOMAttributes.onTouchMove"
					}
				},
				{
					"id": 2625,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 428,
						"name": "DOMAttributes.onTouchMoveCapture"
					}
				},
				{
					"id": 2626,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 429,
						"name": "DOMAttributes.onTouchStart"
					}
				},
				{
					"id": 2627,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 430,
						"name": "DOMAttributes.onTouchStartCapture"
					}
				},
				{
					"id": 2658,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1538,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 461,
						"name": "DOMAttributes.onTransitionEnd"
					}
				},
				{
					"id": 2659,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 462,
						"name": "DOMAttributes.onTransitionEndCapture"
					}
				},
				{
					"id": 2578,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 381,
						"name": "DOMAttributes.onVolumeChange"
					}
				},
				{
					"id": 2579,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 382,
						"name": "DOMAttributes.onVolumeChangeCapture"
					}
				},
				{
					"id": 2580,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 383,
						"name": "DOMAttributes.onWaiting"
					}
				},
				{
					"id": 2581,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 384,
						"name": "DOMAttributes.onWaitingCapture"
					}
				},
				{
					"id": 2650,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1526,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 453,
						"name": "DOMAttributes.onWheel"
					}
				},
				{
					"id": 2651,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 454,
						"name": "DOMAttributes.onWheelCapture"
					}
				},
				{
					"id": 2418,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1758,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 221,
						"name": "HTMLAttributes.placeholder"
					}
				},
				{
					"id": 2430,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1776,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 233,
						"name": "HTMLAttributes.prefix"
					}
				},
				{
					"id": 2431,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1777,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 234,
						"name": "HTMLAttributes.property"
					}
				},
				{
					"id": 2425,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1767,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 228,
						"name": "HTMLAttributes.radioGroup"
					}
				},
				{
					"id": 2404,
					"name": "ref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 139,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableHeaderCellElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "LegacyRef"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1076,
						"name": "ClassAttributes.ref"
					}
				},
				{
					"id": 2432,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1778,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 235,
						"name": "HTMLAttributes.resource"
					}
				},
				{
					"id": 2444,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1792,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 247,
						"name": "HTMLAttributes.results"
					}
				},
				{
					"id": 2426,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1770,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 229,
						"name": "HTMLAttributes.role"
					}
				},
				{
					"id": 2445,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1793,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 248,
						"name": "HTMLAttributes.security"
					}
				},
				{
					"id": 2419,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1759,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 222,
						"name": "HTMLAttributes.slot"
					}
				},
				{
					"id": 2420,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1760,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 223,
						"name": "HTMLAttributes.spellCheck"
					}
				},
				{
					"id": 2421,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1761,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 224,
						"name": "HTMLAttributes.style"
					}
				},
				{
					"id": 2401,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/TableHeadCell/index.tsx",
							"line": 6,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 2408,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1745,
							"character": 38
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 210,
						"name": "HTMLAttributes.suppressContentEditableWarning"
					}
				},
				{
					"id": 2409,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1746,
							"character": 32
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 211,
						"name": "HTMLAttributes.suppressHydrationWarning"
					}
				},
				{
					"id": 2422,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1762,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 225,
						"name": "HTMLAttributes.tabIndex"
					}
				},
				{
					"id": 2423,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1763,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 226,
						"name": "HTMLAttributes.title"
					}
				},
				{
					"id": 2424,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1764,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "yes"
							},
							{
								"type": "stringLiteral",
								"value": "no"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 227,
						"name": "HTMLAttributes.translate"
					}
				},
				{
					"id": 2433,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1779,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 236,
						"name": "HTMLAttributes.typeof"
					}
				},
				{
					"id": 2446,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1794,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "on"
							},
							{
								"type": "stringLiteral",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 249,
						"name": "HTMLAttributes.unselectable"
					}
				},
				{
					"id": 2434,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1780,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 237,
						"name": "HTMLAttributes.vocab"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2427,
						2410,
						2449,
						2450,
						2451,
						2452,
						2453,
						2454,
						2455,
						2456,
						2457,
						2458,
						2459,
						2460,
						2461,
						2462,
						2463,
						2464,
						2465,
						2466,
						2467,
						2468,
						2469,
						2470,
						2471,
						2472,
						2473,
						2474,
						2475,
						2476,
						2477,
						2478,
						2479,
						2480,
						2481,
						2482,
						2483,
						2484,
						2485,
						2486,
						2487,
						2488,
						2489,
						2490,
						2491,
						2492,
						2493,
						2494,
						2495,
						2496,
						2435,
						2436,
						2437,
						2402,
						2403,
						2438,
						2411,
						2412,
						2497,
						2428,
						2406,
						2407,
						2413,
						2414,
						2415,
						2416,
						2429,
						2447,
						2448,
						2442,
						2439,
						2443,
						2440,
						2441,
						2405,
						2417,
						2538,
						2539,
						2654,
						2655,
						2656,
						2657,
						2652,
						2653,
						2582,
						2583,
						2518,
						2519,
						2514,
						2515,
						2540,
						2541,
						2542,
						2543,
						2516,
						2517,
						2584,
						2585,
						2506,
						2507,
						2508,
						2509,
						2510,
						2511,
						2586,
						2587,
						2500,
						2501,
						2502,
						2503,
						2588,
						2589,
						2590,
						2591,
						2592,
						2593,
						2594,
						2595,
						2596,
						2597,
						2598,
						2599,
						2600,
						2601,
						2602,
						2603,
						2604,
						2605,
						2544,
						2545,
						2546,
						2547,
						2548,
						2549,
						2550,
						2551,
						2530,
						2531,
						2512,
						2513,
						2644,
						2645,
						2520,
						2521,
						2526,
						2527,
						2532,
						2533,
						2534,
						2535,
						2536,
						2537,
						2528,
						2529,
						2556,
						2557,
						2552,
						2553,
						2554,
						2555,
						2646,
						2647,
						2606,
						2607,
						2608,
						2609,
						2610,
						2611,
						2612,
						2613,
						2614,
						2615,
						2616,
						2617,
						2504,
						2505,
						2558,
						2559,
						2560,
						2561,
						2562,
						2563,
						2634,
						2635,
						2628,
						2629,
						2636,
						2637,
						2638,
						2639,
						2630,
						2631,
						2642,
						2643,
						2640,
						2641,
						2632,
						2633,
						2564,
						2565,
						2566,
						2567,
						2522,
						2523,
						2648,
						2649,
						2568,
						2569,
						2570,
						2571,
						2618,
						2619,
						2572,
						2573,
						2524,
						2525,
						2574,
						2575,
						2576,
						2577,
						2620,
						2621,
						2622,
						2623,
						2624,
						2625,
						2626,
						2627,
						2658,
						2659,
						2578,
						2579,
						2580,
						2581,
						2650,
						2651,
						2418,
						2430,
						2431,
						2425,
						2404,
						2432,
						2444,
						2426,
						2445,
						2419,
						2420,
						2421,
						2401,
						2408,
						2409,
						2422,
						2423,
						2424,
						2433,
						2446,
						2434
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/TableHeadCell/index.tsx",
					"line": 5,
					"character": 23
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "HTMLTableHeaderCellElement"
								}
							],
							"name": "ClassAttributes"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "HTMLTableHeaderCellElement"
								}
							],
							"name": "HTMLAttributes"
						}
					]
				}
			]
		},
		{
			"id": 1861,
			"name": "TableRow",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1888,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1773,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 230,
						"name": "HTMLAttributes.about"
					}
				},
				{
					"id": 1871,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1749,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 212,
						"name": "HTMLAttributes.accessKey"
					}
				},
				{
					"id": 1910,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1556,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 252,
						"name": "AriaAttributes.'aria-activedescendant'"
					}
				},
				{
					"id": 1911,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1558,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 253,
						"name": "AriaAttributes.'aria-atomic'"
					}
				},
				{
					"id": 1912,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1563,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "list"
							},
							{
								"type": "stringLiteral",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 254,
						"name": "AriaAttributes.'aria-autocomplete'"
					}
				},
				{
					"id": 1913,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1565,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 255,
						"name": "AriaAttributes.'aria-busy'"
					}
				},
				{
					"id": 1914,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-pressed @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1570,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "mixed"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 256,
						"name": "AriaAttributes.'aria-checked'"
					}
				},
				{
					"id": 1915,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1575,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 257,
						"name": "AriaAttributes.'aria-colcount'"
					}
				},
				{
					"id": 1916,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colcount @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1580,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 258,
						"name": "AriaAttributes.'aria-colindex'"
					}
				},
				{
					"id": 1917,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1585,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 259,
						"name": "AriaAttributes.'aria-colspan'"
					}
				},
				{
					"id": 1918,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-owns.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1590,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 260,
						"name": "AriaAttributes.'aria-controls'"
					}
				},
				{
					"id": 1919,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the element that represents the current item within a container or set of related elements."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1592,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "page"
							},
							{
								"type": "stringLiteral",
								"value": "step"
							},
							{
								"type": "stringLiteral",
								"value": "location"
							},
							{
								"type": "stringLiteral",
								"value": "date"
							},
							{
								"type": "stringLiteral",
								"value": "time"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 261,
						"name": "AriaAttributes.'aria-current'"
					}
				},
				{
					"id": 1920,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1597,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 262,
						"name": "AriaAttributes.'aria-describedby'"
					}
				},
				{
					"id": 1921,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides a detailed, extended description for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1602,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 263,
						"name": "AriaAttributes.'aria-details'"
					}
				},
				{
					"id": 1922,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-hidden @see aria-readonly.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1607,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 264,
						"name": "AriaAttributes.'aria-disabled'"
					}
				},
				{
					"id": 1923,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1612,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "copy"
							},
							{
								"type": "stringLiteral",
								"value": "execute"
							},
							{
								"type": "stringLiteral",
								"value": "link"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 265,
						"name": "AriaAttributes.'aria-dropeffect'"
					}
				},
				{
					"id": 1924,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides an error message for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-invalid @see aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1617,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 266,
						"name": "AriaAttributes.'aria-errormessage'"
					}
				},
				{
					"id": 1925,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1619,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 267,
						"name": "AriaAttributes.'aria-expanded'"
					}
				},
				{
					"id": 1926,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1624,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 268,
						"name": "AriaAttributes.'aria-flowto'"
					}
				},
				{
					"id": 1927,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1629,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 269,
						"name": "AriaAttributes.'aria-grabbed'"
					}
				},
				{
					"id": 1928,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1631,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "menu"
							},
							{
								"type": "stringLiteral",
								"value": "listbox"
							},
							{
								"type": "stringLiteral",
								"value": "tree"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "dialog"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 270,
						"name": "AriaAttributes.'aria-haspopup'"
					}
				},
				{
					"id": 1929,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element is exposed to an accessibility API.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1636,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 271,
						"name": "AriaAttributes.'aria-hidden'"
					}
				},
				{
					"id": 1930,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the entered value does not conform to the format expected by the application.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-errormessage.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1641,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							},
							{
								"type": "stringLiteral",
								"value": "grammar"
							},
							{
								"type": "stringLiteral",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 272,
						"name": "AriaAttributes.'aria-invalid'"
					}
				},
				{
					"id": 1931,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1643,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 273,
						"name": "AriaAttributes.'aria-keyshortcuts'"
					}
				},
				{
					"id": 1932,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1648,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 274,
						"name": "AriaAttributes.'aria-label'"
					}
				},
				{
					"id": 1933,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1653,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 275,
						"name": "AriaAttributes.'aria-labelledby'"
					}
				},
				{
					"id": 1934,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the hierarchical level of an element within a structure."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1655,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 276,
						"name": "AriaAttributes.'aria-level'"
					}
				},
				{
					"id": 1935,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1657,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "off"
							},
							{
								"type": "stringLiteral",
								"value": "assertive"
							},
							{
								"type": "stringLiteral",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 277,
						"name": "AriaAttributes.'aria-live'"
					}
				},
				{
					"id": 1936,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether an element is modal when displayed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1659,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 278,
						"name": "AriaAttributes.'aria-modal'"
					}
				},
				{
					"id": 1937,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1661,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 279,
						"name": "AriaAttributes.'aria-multiline'"
					}
				},
				{
					"id": 1938,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1663,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 280,
						"name": "AriaAttributes.'aria-multiselectable'"
					}
				},
				{
					"id": 1939,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1665,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "horizontal"
							},
							{
								"type": "stringLiteral",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 281,
						"name": "AriaAttributes.'aria-orientation'"
					}
				},
				{
					"id": 1940,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-controls.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1671,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 282,
						"name": "AriaAttributes.'aria-owns'"
					}
				},
				{
					"id": 1941,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1676,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 283,
						"name": "AriaAttributes.'aria-placeholder'"
					}
				},
				{
					"id": 1942,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-setsize.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1681,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 284,
						"name": "AriaAttributes.'aria-posinset'"
					}
				},
				{
					"id": 1943,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1686,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "mixed"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 285,
						"name": "AriaAttributes.'aria-pressed'"
					}
				},
				{
					"id": 1944,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is not editable, but is otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1691,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 286,
						"name": "AriaAttributes.'aria-readonly'"
					}
				},
				{
					"id": 1945,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-atomic.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1696,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "additions"
							},
							{
								"type": "stringLiteral",
								"value": "additions removals"
							},
							{
								"type": "stringLiteral",
								"value": "additions text"
							},
							{
								"type": "stringLiteral",
								"value": "all"
							},
							{
								"type": "stringLiteral",
								"value": "removals"
							},
							{
								"type": "stringLiteral",
								"value": "removals additions"
							},
							{
								"type": "stringLiteral",
								"value": "removals text"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "text additions"
							},
							{
								"type": "stringLiteral",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 287,
						"name": "AriaAttributes.'aria-relevant'"
					}
				},
				{
					"id": 1946,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that user input is required on the element before a form may be submitted."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1698,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 288,
						"name": "AriaAttributes.'aria-required'"
					}
				},
				{
					"id": 1947,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a human-readable, author-localized description for the role of an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1700,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 289,
						"name": "AriaAttributes.'aria-roledescription'"
					}
				},
				{
					"id": 1948,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1705,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 290,
						"name": "AriaAttributes.'aria-rowcount'"
					}
				},
				{
					"id": 1949,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowcount @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1710,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 291,
						"name": "AriaAttributes.'aria-rowindex'"
					}
				},
				{
					"id": 1950,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1715,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 292,
						"name": "AriaAttributes.'aria-rowspan'"
					}
				},
				{
					"id": 1951,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"selected\" state of various widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-pressed.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1720,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "stringLiteral",
								"value": "false"
							},
							{
								"type": "stringLiteral",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 293,
						"name": "AriaAttributes.'aria-selected'"
					}
				},
				{
					"id": 1952,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-posinset.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1725,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 294,
						"name": "AriaAttributes.'aria-setsize'"
					}
				},
				{
					"id": 1953,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1727,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "ascending"
							},
							{
								"type": "stringLiteral",
								"value": "descending"
							},
							{
								"type": "stringLiteral",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 295,
						"name": "AriaAttributes.'aria-sort'"
					}
				},
				{
					"id": 1954,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the maximum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1729,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 296,
						"name": "AriaAttributes.'aria-valuemax'"
					}
				},
				{
					"id": 1955,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the minimum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1731,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 297,
						"name": "AriaAttributes.'aria-valuemin'"
					}
				},
				{
					"id": 1956,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the current value for a range widget.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-valuetext.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1736,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 298,
						"name": "AriaAttributes.'aria-valuenow'"
					}
				},
				{
					"id": 1957,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1738,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 299,
						"name": "AriaAttributes.'aria-valuetext'"
					}
				},
				{
					"id": 1896,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1783,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 238,
						"name": "HTMLAttributes.autoCapitalize"
					}
				},
				{
					"id": 1897,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1784,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 239,
						"name": "HTMLAttributes.autoCorrect"
					}
				},
				{
					"id": 1898,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1785,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 240,
						"name": "HTMLAttributes.autoSave"
					}
				},
				{
					"id": 1863,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/TableRow/index.tsx",
							"line": 7,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "React.ReactNode"
					},
					"overwrites": {
						"type": "reference",
						"name": "DOMAttributes.children"
					}
				},
				{
					"id": 1864,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/TableRow/index.tsx",
							"line": 8,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"id": 213,
						"name": "HTMLAttributes.className"
					}
				},
				{
					"id": 1899,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1786,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 241,
						"name": "HTMLAttributes.color"
					}
				},
				{
					"id": 1872,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1751,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Booleanish"
							},
							{
								"type": "stringLiteral",
								"value": "inherit"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 214,
						"name": "HTMLAttributes.contentEditable"
					}
				},
				{
					"id": 1873,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1752,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 215,
						"name": "HTMLAttributes.contextMenu"
					}
				},
				{
					"id": 1958,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1347,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1959,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1960,
											"name": "__html",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 1348,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1960
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 300,
						"name": "DOMAttributes.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 1889,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1774,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 231,
						"name": "HTMLAttributes.datatype"
					}
				},
				{
					"id": 1867,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1743,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 208,
						"name": "HTMLAttributes.defaultChecked"
					}
				},
				{
					"id": 1868,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1744,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "ReadonlyArray"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 209,
						"name": "HTMLAttributes.defaultValue"
					}
				},
				{
					"id": 1874,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1753,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 216,
						"name": "HTMLAttributes.dir"
					}
				},
				{
					"id": 1875,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1754,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 217,
						"name": "HTMLAttributes.draggable"
					}
				},
				{
					"id": 1876,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1755,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 218,
						"name": "HTMLAttributes.hidden"
					}
				},
				{
					"id": 1877,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1756,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 219,
						"name": "HTMLAttributes.id"
					}
				},
				{
					"id": 1890,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1775,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 232,
						"name": "HTMLAttributes.inlist"
					}
				},
				{
					"id": 1908,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1801,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "tel"
							},
							{
								"type": "stringLiteral",
								"value": "url"
							},
							{
								"type": "stringLiteral",
								"value": "email"
							},
							{
								"type": "stringLiteral",
								"value": "numeric"
							},
							{
								"type": "stringLiteral",
								"value": "decimal"
							},
							{
								"type": "stringLiteral",
								"value": "search"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 250,
						"name": "HTMLAttributes.inputMode"
					}
				},
				{
					"id": 1909,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1806,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 251,
						"name": "HTMLAttributes.is"
					}
				},
				{
					"id": 1903,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1790,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 245,
						"name": "HTMLAttributes.itemID"
					}
				},
				{
					"id": 1900,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1787,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 242,
						"name": "HTMLAttributes.itemProp"
					}
				},
				{
					"id": 1904,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1791,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 246,
						"name": "HTMLAttributes.itemRef"
					}
				},
				{
					"id": 1901,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1788,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 243,
						"name": "HTMLAttributes.itemScope"
					}
				},
				{
					"id": 1902,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1789,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 244,
						"name": "HTMLAttributes.itemType"
					}
				},
				{
					"id": 1866,
					"name": "key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 133,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Key"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1077,
						"name": "Attributes.key"
					}
				},
				{
					"id": 1878,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1757,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 220,
						"name": "HTMLAttributes.lang"
					}
				},
				{
					"id": 1999,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1402,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 341,
						"name": "DOMAttributes.onAbort"
					}
				},
				{
					"id": 2000,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1403,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 342,
						"name": "DOMAttributes.onAbortCapture"
					}
				},
				{
					"id": 2115,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1532,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 457,
						"name": "DOMAttributes.onAnimationEnd"
					}
				},
				{
					"id": 2116,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1533,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 458,
						"name": "DOMAttributes.onAnimationEndCapture"
					}
				},
				{
					"id": 2117,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 459,
						"name": "DOMAttributes.onAnimationIteration"
					}
				},
				{
					"id": 2118,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 460,
						"name": "DOMAttributes.onAnimationIterationCapture"
					}
				},
				{
					"id": 2113,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1530,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 455,
						"name": "DOMAttributes.onAnimationStart"
					}
				},
				{
					"id": 2114,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 456,
						"name": "DOMAttributes.onAnimationStartCapture"
					}
				},
				{
					"id": 2043,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1448,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 385,
						"name": "DOMAttributes.onAuxClick"
					}
				},
				{
					"id": 2044,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 386,
						"name": "DOMAttributes.onAuxClickCapture"
					}
				},
				{
					"id": 1979,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 321,
						"name": "DOMAttributes.onBeforeInput"
					}
				},
				{
					"id": 1980,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 322,
						"name": "DOMAttributes.onBeforeInputCapture"
					}
				},
				{
					"id": 1975,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1370,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 317,
						"name": "DOMAttributes.onBlur"
					}
				},
				{
					"id": 1976,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1371,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 318,
						"name": "DOMAttributes.onBlurCapture"
					}
				},
				{
					"id": 2001,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 343,
						"name": "DOMAttributes.onCanPlay"
					}
				},
				{
					"id": 2002,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 344,
						"name": "DOMAttributes.onCanPlayCapture"
					}
				},
				{
					"id": 2003,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 345,
						"name": "DOMAttributes.onCanPlayThrough"
					}
				},
				{
					"id": 2004,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 346,
						"name": "DOMAttributes.onCanPlayThroughCapture"
					}
				},
				{
					"id": 1977,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1374,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 319,
						"name": "DOMAttributes.onChange"
					}
				},
				{
					"id": 1978,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1375,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 320,
						"name": "DOMAttributes.onChangeCapture"
					}
				},
				{
					"id": 2045,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 387,
						"name": "DOMAttributes.onClick"
					}
				},
				{
					"id": 2046,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 388,
						"name": "DOMAttributes.onClickCapture"
					}
				},
				{
					"id": 1967,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1360,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 309,
						"name": "DOMAttributes.onCompositionEnd"
					}
				},
				{
					"id": 1968,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1361,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 310,
						"name": "DOMAttributes.onCompositionEndCapture"
					}
				},
				{
					"id": 1969,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1362,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 311,
						"name": "DOMAttributes.onCompositionStart"
					}
				},
				{
					"id": 1970,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1363,
							"character": 33
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 312,
						"name": "DOMAttributes.onCompositionStartCapture"
					}
				},
				{
					"id": 1971,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1364,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 313,
						"name": "DOMAttributes.onCompositionUpdate"
					}
				},
				{
					"id": 1972,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1365,
							"character": 34
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 314,
						"name": "DOMAttributes.onCompositionUpdateCapture"
					}
				},
				{
					"id": 2047,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 389,
						"name": "DOMAttributes.onContextMenu"
					}
				},
				{
					"id": 2048,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 390,
						"name": "DOMAttributes.onContextMenuCapture"
					}
				},
				{
					"id": 1961,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1352,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 303,
						"name": "DOMAttributes.onCopy"
					}
				},
				{
					"id": 1962,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1353,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 304,
						"name": "DOMAttributes.onCopyCapture"
					}
				},
				{
					"id": 1963,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1354,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 305,
						"name": "DOMAttributes.onCut"
					}
				},
				{
					"id": 1964,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1355,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 306,
						"name": "DOMAttributes.onCutCapture"
					}
				},
				{
					"id": 2049,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 391,
						"name": "DOMAttributes.onDoubleClick"
					}
				},
				{
					"id": 2050,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 392,
						"name": "DOMAttributes.onDoubleClickCapture"
					}
				},
				{
					"id": 2051,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 393,
						"name": "DOMAttributes.onDrag"
					}
				},
				{
					"id": 2052,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 394,
						"name": "DOMAttributes.onDragCapture"
					}
				},
				{
					"id": 2053,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 395,
						"name": "DOMAttributes.onDragEnd"
					}
				},
				{
					"id": 2054,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 396,
						"name": "DOMAttributes.onDragEndCapture"
					}
				},
				{
					"id": 2055,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 397,
						"name": "DOMAttributes.onDragEnter"
					}
				},
				{
					"id": 2056,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 398,
						"name": "DOMAttributes.onDragEnterCapture"
					}
				},
				{
					"id": 2057,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 399,
						"name": "DOMAttributes.onDragExit"
					}
				},
				{
					"id": 2058,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 400,
						"name": "DOMAttributes.onDragExitCapture"
					}
				},
				{
					"id": 2059,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 401,
						"name": "DOMAttributes.onDragLeave"
					}
				},
				{
					"id": 2060,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 402,
						"name": "DOMAttributes.onDragLeaveCapture"
					}
				},
				{
					"id": 2061,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 403,
						"name": "DOMAttributes.onDragOver"
					}
				},
				{
					"id": 2062,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 404,
						"name": "DOMAttributes.onDragOverCapture"
					}
				},
				{
					"id": 2063,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 405,
						"name": "DOMAttributes.onDragStart"
					}
				},
				{
					"id": 2064,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 406,
						"name": "DOMAttributes.onDragStartCapture"
					}
				},
				{
					"id": 2065,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 407,
						"name": "DOMAttributes.onDrop"
					}
				},
				{
					"id": 2066,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 408,
						"name": "DOMAttributes.onDropCapture"
					}
				},
				{
					"id": 2005,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 347,
						"name": "DOMAttributes.onDurationChange"
					}
				},
				{
					"id": 2006,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 348,
						"name": "DOMAttributes.onDurationChangeCapture"
					}
				},
				{
					"id": 2007,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 349,
						"name": "DOMAttributes.onEmptied"
					}
				},
				{
					"id": 2008,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 350,
						"name": "DOMAttributes.onEmptiedCapture"
					}
				},
				{
					"id": 2009,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 351,
						"name": "DOMAttributes.onEncrypted"
					}
				},
				{
					"id": 2010,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 352,
						"name": "DOMAttributes.onEncryptedCapture"
					}
				},
				{
					"id": 2011,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 353,
						"name": "DOMAttributes.onEnded"
					}
				},
				{
					"id": 2012,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 354,
						"name": "DOMAttributes.onEndedCapture"
					}
				},
				{
					"id": 1991,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 333,
						"name": "DOMAttributes.onError"
					}
				},
				{
					"id": 1992,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 334,
						"name": "DOMAttributes.onErrorCapture"
					}
				},
				{
					"id": 1973,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1368,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 315,
						"name": "DOMAttributes.onFocus"
					}
				},
				{
					"id": 1974,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1369,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 316,
						"name": "DOMAttributes.onFocusCapture"
					}
				},
				{
					"id": 2105,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 447,
						"name": "DOMAttributes.onGotPointerCapture"
					}
				},
				{
					"id": 2106,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 34
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 448,
						"name": "DOMAttributes.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 1981,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1378,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 323,
						"name": "DOMAttributes.onInput"
					}
				},
				{
					"id": 1982,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1379,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 324,
						"name": "DOMAttributes.onInputCapture"
					}
				},
				{
					"id": 1987,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 329,
						"name": "DOMAttributes.onInvalid"
					}
				},
				{
					"id": 1988,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 330,
						"name": "DOMAttributes.onInvalidCapture"
					}
				},
				{
					"id": 1993,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1394,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 335,
						"name": "DOMAttributes.onKeyDown"
					}
				},
				{
					"id": 1994,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 336,
						"name": "DOMAttributes.onKeyDownCapture"
					}
				},
				{
					"id": 1995,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1396,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 337,
						"name": "DOMAttributes.onKeyPress"
					}
				},
				{
					"id": 1996,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1397,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 338,
						"name": "DOMAttributes.onKeyPressCapture"
					}
				},
				{
					"id": 1997,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 339,
						"name": "DOMAttributes.onKeyUp"
					}
				},
				{
					"id": 1998,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 340,
						"name": "DOMAttributes.onKeyUpCapture"
					}
				},
				{
					"id": 1989,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1388,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 331,
						"name": "DOMAttributes.onLoad"
					}
				},
				{
					"id": 1990,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1389,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 332,
						"name": "DOMAttributes.onLoadCapture"
					}
				},
				{
					"id": 2017,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 359,
						"name": "DOMAttributes.onLoadStart"
					}
				},
				{
					"id": 2018,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 360,
						"name": "DOMAttributes.onLoadStartCapture"
					}
				},
				{
					"id": 2013,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1416,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 355,
						"name": "DOMAttributes.onLoadedData"
					}
				},
				{
					"id": 2014,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1417,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 356,
						"name": "DOMAttributes.onLoadedDataCapture"
					}
				},
				{
					"id": 2015,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 357,
						"name": "DOMAttributes.onLoadedMetadata"
					}
				},
				{
					"id": 2016,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 358,
						"name": "DOMAttributes.onLoadedMetadataCapture"
					}
				},
				{
					"id": 2107,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1518,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 449,
						"name": "DOMAttributes.onLostPointerCapture"
					}
				},
				{
					"id": 2108,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1519,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 450,
						"name": "DOMAttributes.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 2067,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 409,
						"name": "DOMAttributes.onMouseDown"
					}
				},
				{
					"id": 2068,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 410,
						"name": "DOMAttributes.onMouseDownCapture"
					}
				},
				{
					"id": 2069,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 411,
						"name": "DOMAttributes.onMouseEnter"
					}
				},
				{
					"id": 2070,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 412,
						"name": "DOMAttributes.onMouseLeave"
					}
				},
				{
					"id": 2071,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 413,
						"name": "DOMAttributes.onMouseMove"
					}
				},
				{
					"id": 2072,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 414,
						"name": "DOMAttributes.onMouseMoveCapture"
					}
				},
				{
					"id": 2073,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 415,
						"name": "DOMAttributes.onMouseOut"
					}
				},
				{
					"id": 2074,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 416,
						"name": "DOMAttributes.onMouseOutCapture"
					}
				},
				{
					"id": 2075,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1480,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 417,
						"name": "DOMAttributes.onMouseOver"
					}
				},
				{
					"id": 2076,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1481,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 418,
						"name": "DOMAttributes.onMouseOverCapture"
					}
				},
				{
					"id": 2077,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 419,
						"name": "DOMAttributes.onMouseUp"
					}
				},
				{
					"id": 2078,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 420,
						"name": "DOMAttributes.onMouseUpCapture"
					}
				},
				{
					"id": 1965,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1356,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 307,
						"name": "DOMAttributes.onPaste"
					}
				},
				{
					"id": 1966,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1357,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 308,
						"name": "DOMAttributes.onPasteCapture"
					}
				},
				{
					"id": 2019,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1422,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 361,
						"name": "DOMAttributes.onPause"
					}
				},
				{
					"id": 2020,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1423,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 362,
						"name": "DOMAttributes.onPauseCapture"
					}
				},
				{
					"id": 2021,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 363,
						"name": "DOMAttributes.onPlay"
					}
				},
				{
					"id": 2022,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 364,
						"name": "DOMAttributes.onPlayCapture"
					}
				},
				{
					"id": 2023,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1426,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 365,
						"name": "DOMAttributes.onPlaying"
					}
				},
				{
					"id": 2024,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 366,
						"name": "DOMAttributes.onPlayingCapture"
					}
				},
				{
					"id": 2095,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 437,
						"name": "DOMAttributes.onPointerCancel"
					}
				},
				{
					"id": 2096,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 438,
						"name": "DOMAttributes.onPointerCancelCapture"
					}
				},
				{
					"id": 2089,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1500,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 431,
						"name": "DOMAttributes.onPointerDown"
					}
				},
				{
					"id": 2090,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 432,
						"name": "DOMAttributes.onPointerDownCapture"
					}
				},
				{
					"id": 2097,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 439,
						"name": "DOMAttributes.onPointerEnter"
					}
				},
				{
					"id": 2098,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 440,
						"name": "DOMAttributes.onPointerEnterCapture"
					}
				},
				{
					"id": 2099,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 441,
						"name": "DOMAttributes.onPointerLeave"
					}
				},
				{
					"id": 2100,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 442,
						"name": "DOMAttributes.onPointerLeaveCapture"
					}
				},
				{
					"id": 2091,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 433,
						"name": "DOMAttributes.onPointerMove"
					}
				},
				{
					"id": 2092,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 434,
						"name": "DOMAttributes.onPointerMoveCapture"
					}
				},
				{
					"id": 2103,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 445,
						"name": "DOMAttributes.onPointerOut"
					}
				},
				{
					"id": 2104,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 446,
						"name": "DOMAttributes.onPointerOutCapture"
					}
				},
				{
					"id": 2101,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 443,
						"name": "DOMAttributes.onPointerOver"
					}
				},
				{
					"id": 2102,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 444,
						"name": "DOMAttributes.onPointerOverCapture"
					}
				},
				{
					"id": 2093,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 435,
						"name": "DOMAttributes.onPointerUp"
					}
				},
				{
					"id": 2094,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 436,
						"name": "DOMAttributes.onPointerUpCapture"
					}
				},
				{
					"id": 2025,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1428,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 367,
						"name": "DOMAttributes.onProgress"
					}
				},
				{
					"id": 2026,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 368,
						"name": "DOMAttributes.onProgressCapture"
					}
				},
				{
					"id": 2027,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 369,
						"name": "DOMAttributes.onRateChange"
					}
				},
				{
					"id": 2028,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 370,
						"name": "DOMAttributes.onRateChangeCapture"
					}
				},
				{
					"id": 1983,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1380,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 325,
						"name": "DOMAttributes.onReset"
					}
				},
				{
					"id": 1984,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1381,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 326,
						"name": "DOMAttributes.onResetCapture"
					}
				},
				{
					"id": 2109,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1522,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 451,
						"name": "DOMAttributes.onScroll"
					}
				},
				{
					"id": 2110,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1523,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 452,
						"name": "DOMAttributes.onScrollCapture"
					}
				},
				{
					"id": 2029,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1432,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 371,
						"name": "DOMAttributes.onSeeked"
					}
				},
				{
					"id": 2030,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1433,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 372,
						"name": "DOMAttributes.onSeekedCapture"
					}
				},
				{
					"id": 2031,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 373,
						"name": "DOMAttributes.onSeeking"
					}
				},
				{
					"id": 2032,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 374,
						"name": "DOMAttributes.onSeekingCapture"
					}
				},
				{
					"id": 2079,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1486,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 421,
						"name": "DOMAttributes.onSelect"
					}
				},
				{
					"id": 2080,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 422,
						"name": "DOMAttributes.onSelectCapture"
					}
				},
				{
					"id": 2033,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 375,
						"name": "DOMAttributes.onStalled"
					}
				},
				{
					"id": 2034,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 376,
						"name": "DOMAttributes.onStalledCapture"
					}
				},
				{
					"id": 1985,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 327,
						"name": "DOMAttributes.onSubmit"
					}
				},
				{
					"id": 1986,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 328,
						"name": "DOMAttributes.onSubmitCapture"
					}
				},
				{
					"id": 2035,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 377,
						"name": "DOMAttributes.onSuspend"
					}
				},
				{
					"id": 2036,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 378,
						"name": "DOMAttributes.onSuspendCapture"
					}
				},
				{
					"id": 2037,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 379,
						"name": "DOMAttributes.onTimeUpdate"
					}
				},
				{
					"id": 2038,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 380,
						"name": "DOMAttributes.onTimeUpdateCapture"
					}
				},
				{
					"id": 2081,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1490,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 423,
						"name": "DOMAttributes.onTouchCancel"
					}
				},
				{
					"id": 2082,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 424,
						"name": "DOMAttributes.onTouchCancelCapture"
					}
				},
				{
					"id": 2083,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 425,
						"name": "DOMAttributes.onTouchEnd"
					}
				},
				{
					"id": 2084,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 426,
						"name": "DOMAttributes.onTouchEndCapture"
					}
				},
				{
					"id": 2085,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 427,
						"name": "DOMAttributes.onTouchMove"
					}
				},
				{
					"id": 2086,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 428,
						"name": "DOMAttributes.onTouchMoveCapture"
					}
				},
				{
					"id": 2087,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 429,
						"name": "DOMAttributes.onTouchStart"
					}
				},
				{
					"id": 2088,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 430,
						"name": "DOMAttributes.onTouchStartCapture"
					}
				},
				{
					"id": 2119,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1538,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 461,
						"name": "DOMAttributes.onTransitionEnd"
					}
				},
				{
					"id": 2120,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 462,
						"name": "DOMAttributes.onTransitionEndCapture"
					}
				},
				{
					"id": 2039,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 381,
						"name": "DOMAttributes.onVolumeChange"
					}
				},
				{
					"id": 2040,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 382,
						"name": "DOMAttributes.onVolumeChangeCapture"
					}
				},
				{
					"id": 2041,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 383,
						"name": "DOMAttributes.onWaiting"
					}
				},
				{
					"id": 2042,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 384,
						"name": "DOMAttributes.onWaitingCapture"
					}
				},
				{
					"id": 2111,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1526,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 453,
						"name": "DOMAttributes.onWheel"
					}
				},
				{
					"id": 2112,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 454,
						"name": "DOMAttributes.onWheelCapture"
					}
				},
				{
					"id": 1879,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1758,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 221,
						"name": "HTMLAttributes.placeholder"
					}
				},
				{
					"id": 1891,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1776,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 233,
						"name": "HTMLAttributes.prefix"
					}
				},
				{
					"id": 1892,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1777,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 234,
						"name": "HTMLAttributes.property"
					}
				},
				{
					"id": 1886,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1767,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 228,
						"name": "HTMLAttributes.radioGroup"
					}
				},
				{
					"id": 1865,
					"name": "ref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 139,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "HTMLAttributes"
							}
						],
						"name": "LegacyRef"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1076,
						"name": "ClassAttributes.ref"
					}
				},
				{
					"id": 1893,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1778,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 235,
						"name": "HTMLAttributes.resource"
					}
				},
				{
					"id": 1905,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1792,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 247,
						"name": "HTMLAttributes.results"
					}
				},
				{
					"id": 1887,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1770,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 229,
						"name": "HTMLAttributes.role"
					}
				},
				{
					"id": 1906,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1793,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 248,
						"name": "HTMLAttributes.security"
					}
				},
				{
					"id": 1880,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1759,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 222,
						"name": "HTMLAttributes.slot"
					}
				},
				{
					"id": 1881,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1760,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 223,
						"name": "HTMLAttributes.spellCheck"
					}
				},
				{
					"id": 1882,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1761,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 224,
						"name": "HTMLAttributes.style"
					}
				},
				{
					"id": 1862,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/simple/TableRow/index.tsx",
							"line": 6,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 1869,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1745,
							"character": 38
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 210,
						"name": "HTMLAttributes.suppressContentEditableWarning"
					}
				},
				{
					"id": 1870,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1746,
							"character": 32
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 211,
						"name": "HTMLAttributes.suppressHydrationWarning"
					}
				},
				{
					"id": 1883,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1762,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 225,
						"name": "HTMLAttributes.tabIndex"
					}
				},
				{
					"id": 1884,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1763,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 226,
						"name": "HTMLAttributes.title"
					}
				},
				{
					"id": 1885,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1764,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "yes"
							},
							{
								"type": "stringLiteral",
								"value": "no"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 227,
						"name": "HTMLAttributes.translate"
					}
				},
				{
					"id": 1894,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1779,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 236,
						"name": "HTMLAttributes.typeof"
					}
				},
				{
					"id": 1907,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1794,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "on"
							},
							{
								"type": "stringLiteral",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 249,
						"name": "HTMLAttributes.unselectable"
					}
				},
				{
					"id": 1895,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1780,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 237,
						"name": "HTMLAttributes.vocab"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1888,
						1871,
						1910,
						1911,
						1912,
						1913,
						1914,
						1915,
						1916,
						1917,
						1918,
						1919,
						1920,
						1921,
						1922,
						1923,
						1924,
						1925,
						1926,
						1927,
						1928,
						1929,
						1930,
						1931,
						1932,
						1933,
						1934,
						1935,
						1936,
						1937,
						1938,
						1939,
						1940,
						1941,
						1942,
						1943,
						1944,
						1945,
						1946,
						1947,
						1948,
						1949,
						1950,
						1951,
						1952,
						1953,
						1954,
						1955,
						1956,
						1957,
						1896,
						1897,
						1898,
						1863,
						1864,
						1899,
						1872,
						1873,
						1958,
						1889,
						1867,
						1868,
						1874,
						1875,
						1876,
						1877,
						1890,
						1908,
						1909,
						1903,
						1900,
						1904,
						1901,
						1902,
						1866,
						1878,
						1999,
						2000,
						2115,
						2116,
						2117,
						2118,
						2113,
						2114,
						2043,
						2044,
						1979,
						1980,
						1975,
						1976,
						2001,
						2002,
						2003,
						2004,
						1977,
						1978,
						2045,
						2046,
						1967,
						1968,
						1969,
						1970,
						1971,
						1972,
						2047,
						2048,
						1961,
						1962,
						1963,
						1964,
						2049,
						2050,
						2051,
						2052,
						2053,
						2054,
						2055,
						2056,
						2057,
						2058,
						2059,
						2060,
						2061,
						2062,
						2063,
						2064,
						2065,
						2066,
						2005,
						2006,
						2007,
						2008,
						2009,
						2010,
						2011,
						2012,
						1991,
						1992,
						1973,
						1974,
						2105,
						2106,
						1981,
						1982,
						1987,
						1988,
						1993,
						1994,
						1995,
						1996,
						1997,
						1998,
						1989,
						1990,
						2017,
						2018,
						2013,
						2014,
						2015,
						2016,
						2107,
						2108,
						2067,
						2068,
						2069,
						2070,
						2071,
						2072,
						2073,
						2074,
						2075,
						2076,
						2077,
						2078,
						1965,
						1966,
						2019,
						2020,
						2021,
						2022,
						2023,
						2024,
						2095,
						2096,
						2089,
						2090,
						2097,
						2098,
						2099,
						2100,
						2091,
						2092,
						2103,
						2104,
						2101,
						2102,
						2093,
						2094,
						2025,
						2026,
						2027,
						2028,
						1983,
						1984,
						2109,
						2110,
						2029,
						2030,
						2031,
						2032,
						2079,
						2080,
						2033,
						2034,
						1985,
						1986,
						2035,
						2036,
						2037,
						2038,
						2081,
						2082,
						2083,
						2084,
						2085,
						2086,
						2087,
						2088,
						2119,
						2120,
						2039,
						2040,
						2041,
						2042,
						2111,
						2112,
						1879,
						1891,
						1892,
						1886,
						1865,
						1893,
						1905,
						1887,
						1906,
						1880,
						1881,
						1882,
						1862,
						1869,
						1870,
						1883,
						1884,
						1885,
						1894,
						1907,
						1895
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/TableRow/index.tsx",
					"line": 5,
					"character": 18
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "HTMLTableRowElement"
								}
							],
							"name": "ClassAttributes"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "HTMLTableRowElement"
								}
							],
							"name": "HTMLAttributes"
						}
					]
				}
			]
		},
		{
			"id": 80,
			"name": "Text",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Border Interface that will generate utility classes for the border css prop.",
				"tags": [
					{
						"tag": "example",
						"text": "```{border: { color: 'azure', width:'2', style: 'dashed', opacity: '50'} }```\n"
					}
				]
			},
			"children": [
				{
					"id": 84,
					"name": "align",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 151,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "left"
							},
							{
								"type": "stringLiteral",
								"value": "right"
							},
							{
								"type": "stringLiteral",
								"value": "center"
							},
							{
								"type": "stringLiteral",
								"value": "justify"
							}
						]
					}
				},
				{
					"id": 82,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 149,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 184,
						"name": "Colors"
					}
				},
				{
					"id": 85,
					"name": "decoration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 152,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "underline"
							},
							{
								"type": "stringLiteral",
								"value": "line-through"
							},
							{
								"type": "stringLiteral",
								"value": "no-underline"
							}
						]
					}
				},
				{
					"id": 88,
					"name": "leading",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 155,
							"character": 9
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"lineHeight\""
							}
						}
					}
				},
				{
					"id": 91,
					"name": "opacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 158,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 188,
						"name": "Opacity"
					}
				},
				{
					"id": 81,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 148,
							"character": 6
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"fontSize\""
							}
						}
					}
				},
				{
					"id": 87,
					"name": "spacing",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 154,
							"character": 9
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"letterSpacing\""
							}
						}
					}
				},
				{
					"id": 86,
					"name": "transform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 153,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "uppercase"
							},
							{
								"type": "stringLiteral",
								"value": "lowercase"
							},
							{
								"type": "stringLiteral",
								"value": "capitalize"
							},
							{
								"type": "stringLiteral",
								"value": "normal-case"
							}
						]
					}
				},
				{
					"id": 83,
					"name": "variant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 150,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 185,
						"name": "ColorVariants"
					}
				},
				{
					"id": 89,
					"name": "whitespace",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 156,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "normal"
							},
							{
								"type": "stringLiteral",
								"value": "nowrap"
							},
							{
								"type": "stringLiteral",
								"value": "pre"
							},
							{
								"type": "stringLiteral",
								"value": "pre-line"
							},
							{
								"type": "stringLiteral",
								"value": "pre-wrap"
							}
						]
					}
				},
				{
					"id": 90,
					"name": "wordbreak",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 157,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "normal"
							},
							{
								"type": "stringLiteral",
								"value": "words"
							},
							{
								"type": "stringLiteral",
								"value": "all"
							},
							{
								"type": "stringLiteral",
								"value": "truncate"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						84,
						82,
						85,
						88,
						91,
						81,
						87,
						86,
						83,
						89,
						90
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 147,
					"character": 21
				}
			]
		},
		{
			"id": 2814,
			"name": "TextCheckboxProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2818,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Main container className for css classes ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/TextCheckbox/index.tsx",
							"line": 39,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 2817,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Description text for the checkbox."
					},
					"sources": [
						{
							"fileName": "src/components/complex/TextCheckbox/index.tsx",
							"line": 35,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 2816,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Label text for the checkbox."
					},
					"sources": [
						{
							"fileName": "src/components/complex/TextCheckbox/index.tsx",
							"line": 31,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 2815,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object for the main container and included components."
					},
					"sources": [
						{
							"fileName": "src/components/complex/TextCheckbox/index.tsx",
							"line": 27,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 2751,
						"name": "TextCheckboxStyles"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2818,
						2817,
						2816,
						2815
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/TextCheckbox/index.tsx",
					"line": 23,
					"character": 27
				}
			]
		},
		{
			"id": 2751,
			"name": "TextCheckboxStyles",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2812,
					"name": "active",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 59,
						"name": "Events.active"
					}
				},
				{
					"id": 2764,
					"name": "background",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the background css prop.<br/>\nYou can pass a single string with a color name or an object with color name opacity and bg size.",
						"tags": [
							{
								"tag": "example",
								"text": "```{background: 'red'}```"
							},
							{
								"tag": "example",
								"text": "```{background: {color: 'red', opacity: '20', size: 'cover'}}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 274,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 184,
								"name": "Colors"
							},
							{
								"type": "reference",
								"id": 61,
								"name": "Background"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 11,
						"name": "Utility.background"
					}
				},
				{
					"id": 2786,
					"name": "border",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 307,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 67,
						"name": "Border"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 33,
						"name": "Utility.border"
					}
				},
				{
					"id": 2754,
					"name": "checkbox",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles object for the checkbox component."
					},
					"sources": [
						{
							"fileName": "src/components/complex/TextCheckbox/index.tsx",
							"line": 20,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"id": 939,
						"name": "CheckboxStyles"
					}
				},
				{
					"id": 2759,
					"name": "cursor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the cursor css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{cursor: 'pointer'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 245,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "default"
							},
							{
								"type": "stringLiteral",
								"value": "pointer"
							},
							{
								"type": "stringLiteral",
								"value": "wait"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "not-allowed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 6,
						"name": "Utility.cursor"
					}
				},
				{
					"id": 2753,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles object for the description text component."
					},
					"sources": [
						{
							"fileName": "src/components/complex/TextCheckbox/index.tsx",
							"line": 16,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 2756,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the display css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 211,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "hidden"
							},
							{
								"type": "stringLiteral",
								"value": "block"
							},
							{
								"type": "stringLiteral",
								"value": "inline-block"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "flex"
							},
							{
								"type": "stringLiteral",
								"value": "inline-flex"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "inline-grid"
							},
							{
								"type": "stringLiteral",
								"value": "table"
							},
							{
								"type": "stringLiteral",
								"value": "table-caption"
							},
							{
								"type": "stringLiteral",
								"value": "table-cell"
							},
							{
								"type": "stringLiteral",
								"value": "flow-root"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3,
						"name": "Utility.display"
					}
				},
				{
					"id": 2757,
					"name": "flex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the flex css prop.<br/>\nHere you can pass all flex props for generating flex utility classes, <br/>\nRequires a display: 'flex' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex', flex: {direction: 'column', align: 'center', justify: 'center', flex: 'auto' }}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 231,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 97,
						"name": "Flex"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 4,
						"name": "Utility.flex"
					}
				},
				{
					"id": 2813,
					"name": "focus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 366,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 60,
						"name": "Events.focus"
					}
				},
				{
					"id": 2766,
					"name": "font",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-weight, font-family, font-style, font antialiasing css props.<br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{font: {weight: 'semibold', family: 'sans', style: 'italic', smoothing: 'antialiased'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 287,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 92,
						"name": "Font"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 13,
						"name": "Utility.font"
					}
				},
				{
					"id": 2758,
					"name": "grid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the grid css prop.<br/>\nHere you can pass all grid props for generating grid utility classes, <br/>\nRequires a display: 'grid' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'grid', grid: {cols: '4', gap: '4' }```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 239,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 103,
						"name": "Grid"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 5,
						"name": "Utility.grid"
					}
				},
				{
					"id": 2761,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the height css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{height: 'full'}```"
							},
							{
								"tag": "example",
								"text": "```{height: '64'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 258,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"height\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 8,
						"name": "Utility.height"
					}
				},
				{
					"id": 2811,
					"name": "hover",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 364,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 58,
						"name": "Events.hover"
					}
				},
				{
					"id": 2752,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles object for the label text component."
					},
					"sources": [
						{
							"fileName": "src/components/complex/TextCheckbox/index.tsx",
							"line": 12,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 2809,
					"name": "lg",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 375,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 56,
						"name": "MediaQuery.lg"
					}
				},
				{
					"id": 2767,
					"name": "margin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the margin css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{margin: '4'}```"
							},
							{
								"tag": "example",
								"text": "```{margin: ['4','2','4','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 294,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2768,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2775,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 102
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2771,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 49
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2772,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 64
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2770,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 32
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2769,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2773,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 76
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2774,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 88
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2775,
												2771,
												2772,
												2770,
												2769,
												2773,
												2774
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 14,
						"name": "Utility.margin"
					}
				},
				{
					"id": 2763,
					"name": "maxHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxHeight css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxHeight: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 268,
							"character": 11
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxHeight\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 10,
						"name": "Utility.maxHeight"
					}
				},
				{
					"id": 2762,
					"name": "maxWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxWidth css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxWidth: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 263,
							"character": 10
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxWidth\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 9,
						"name": "Utility.maxWidth"
					}
				},
				{
					"id": 2808,
					"name": "md",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 374,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 55,
						"name": "MediaQuery.md"
					}
				},
				{
					"id": 2785,
					"name": "opacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the opacity css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{opacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 306,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 188,
						"name": "Opacity"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 32,
						"name": "Utility.opacity"
					}
				},
				{
					"id": 2802,
					"name": "overflow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for overflow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{overflow: {x: 'hidden'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 357,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2803,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2806,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 44
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 2804,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 2805,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2806,
												2804,
												2805
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 49,
						"name": "Utility.overflow"
					}
				},
				{
					"id": 2776,
					"name": "padding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the padding css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{padding: '3'}```"
							},
							{
								"tag": "example",
								"text": "```{padding: ['6','2','6','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 301,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2777,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2784,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 109
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2780,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 52
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2781,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 68
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2779,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2778,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2782,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 81
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2783,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 94
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2784,
												2780,
												2781,
												2779,
												2778,
												2782,
												2783
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 23,
						"name": "Utility.padding"
					}
				},
				{
					"id": 2790,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '400'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 323,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2791,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2792,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 324,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 184,
												"name": "Colors"
											}
										},
										{
											"id": 2793,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 325,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"id": 185,
												"name": "ColorVariants"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2792,
												2793
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 37,
						"name": "Utility.placeholder"
					}
				},
				{
					"id": 2794,
					"name": "placeholderOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color opacity.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '700',  placeholderOpacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 331,
							"character": 20
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"placeholderOpacity\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 41,
						"name": "Utility.placeholderOpacity"
					}
				},
				{
					"id": 2798,
					"name": "placement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for position placement.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute', placement: 'inset-0'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 351,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2799,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2801,
											"name": "inset",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 42
												}
											],
											"type": {
												"type": "reference",
												"id": 197,
												"name": "Inset"
											}
										},
										{
											"id": 2800,
											"name": "position",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 196,
												"name": "Placement"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2801,
												2800
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 45,
						"name": "Utility.placement"
					}
				},
				{
					"id": 2789,
					"name": "pointerEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the all pointer events.",
						"tags": [
							{
								"tag": "example",
								"text": "```{pointerEvents: 'none'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 318,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "auto"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 36,
						"name": "Utility.pointerEvents"
					}
				},
				{
					"id": 2755,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the position css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 205,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "static"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							},
							{
								"type": "stringLiteral",
								"value": "absolute"
							},
							{
								"type": "stringLiteral",
								"value": "relative"
							},
							{
								"type": "stringLiteral",
								"value": "sticky"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2,
						"name": "Utility.position"
					}
				},
				{
					"id": 2796,
					"name": "rounded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined border radius classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{rounded: 'full'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 341,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 193,
								"name": "BorderRadius"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"name": "BorderRadius"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 43,
						"name": "Utility.rounded"
					}
				},
				{
					"id": 2795,
					"name": "shadow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined box shadow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{shadow: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 336,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"boxShadow\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 42,
						"name": "Utility.shadow"
					}
				},
				{
					"id": 2807,
					"name": "sm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 373,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 54,
						"name": "MediaQuery.sm"
					}
				},
				{
					"id": 2787,
					"name": "space",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 308,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 77,
						"name": "Space"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 34,
						"name": "Utility.space"
					}
				},
				{
					"id": 2788,
					"name": "table",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the table columns widths.",
						"tags": [
							{
								"tag": "example",
								"text": "```{table: 'auto'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 313,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 35,
						"name": "Utility.table"
					}
				},
				{
					"id": 2765,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-size, color, color-opacity, line-height, text-align, ... css props. <br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{text: {size: 'lg'} }```"
							},
							{
								"tag": "example",
								"text": "```{text: {size: 'xl', color: 'blue-500', leading: 'tight', align:'center'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 281,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 80,
						"name": "Text"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 12,
						"name": "Utility.text"
					}
				},
				{
					"id": 2760,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the width css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{width: '64'}```"
							},
							{
								"tag": "example",
								"text": "```{width: '1/2'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 252,
							"character": 7
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"width\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 7,
						"name": "Utility.width"
					}
				},
				{
					"id": 2810,
					"name": "xl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 376,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 57,
						"name": "MediaQuery.xl"
					}
				},
				{
					"id": 2797,
					"name": "zIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined z-index classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{zIndex: '60'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 346,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"zIndex\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 44,
						"name": "Utility.zIndex"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2812,
						2764,
						2786,
						2754,
						2759,
						2753,
						2756,
						2757,
						2813,
						2766,
						2758,
						2761,
						2811,
						2752,
						2809,
						2767,
						2763,
						2762,
						2808,
						2785,
						2802,
						2776,
						2790,
						2794,
						2798,
						2789,
						2755,
						2796,
						2795,
						2807,
						2787,
						2788,
						2765,
						2760,
						2810,
						2797
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/TextCheckbox/index.tsx",
					"line": 8,
					"character": 28
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1,
					"name": "Styles"
				}
			]
		},
		{
			"id": 2741,
			"name": "TextInputProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2745,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Main container className for css classes ."
					},
					"sources": [
						{
							"fileName": "src/components/complex/TextInput/index.tsx",
							"line": 37,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 2744,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Smaller descriptive text that can be added to the input."
					},
					"sources": [
						{
							"fileName": "src/components/complex/TextInput/index.tsx",
							"line": 33,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 2743,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Label text for the checkbox."
					},
					"sources": [
						{
							"fileName": "src/components/complex/TextInput/index.tsx",
							"line": 29,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 2742,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object for the main container and included components."
					},
					"sources": [
						{
							"fileName": "src/components/complex/TextInput/index.tsx",
							"line": 25,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 2678,
						"name": "TextInputStyles"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2745,
						2744,
						2743,
						2742
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/TextInput/index.tsx",
					"line": 21,
					"character": 24
				}
			]
		},
		{
			"id": 2678,
			"name": "TextInputStyles",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 2739,
					"name": "active",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 59,
						"name": "Events.active"
					}
				},
				{
					"id": 2691,
					"name": "background",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the background css prop.<br/>\nYou can pass a single string with a color name or an object with color name opacity and bg size.",
						"tags": [
							{
								"tag": "example",
								"text": "```{background: 'red'}```"
							},
							{
								"tag": "example",
								"text": "```{background: {color: 'red', opacity: '20', size: 'cover'}}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 274,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 184,
								"name": "Colors"
							},
							{
								"type": "reference",
								"id": 61,
								"name": "Background"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 11,
						"name": "Utility.background"
					}
				},
				{
					"id": 2713,
					"name": "border",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 307,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 67,
						"name": "Border"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 33,
						"name": "Utility.border"
					}
				},
				{
					"id": 2686,
					"name": "cursor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the cursor css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{cursor: 'pointer'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 245,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "default"
							},
							{
								"type": "stringLiteral",
								"value": "pointer"
							},
							{
								"type": "stringLiteral",
								"value": "wait"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "not-allowed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 6,
						"name": "Utility.cursor"
					}
				},
				{
					"id": 2680,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles object for the description text component."
					},
					"sources": [
						{
							"fileName": "src/components/complex/TextInput/index.tsx",
							"line": 14,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 2683,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the display css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 211,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "hidden"
							},
							{
								"type": "stringLiteral",
								"value": "block"
							},
							{
								"type": "stringLiteral",
								"value": "inline-block"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "flex"
							},
							{
								"type": "stringLiteral",
								"value": "inline-flex"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "inline-grid"
							},
							{
								"type": "stringLiteral",
								"value": "table"
							},
							{
								"type": "stringLiteral",
								"value": "table-caption"
							},
							{
								"type": "stringLiteral",
								"value": "table-cell"
							},
							{
								"type": "stringLiteral",
								"value": "flow-root"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3,
						"name": "Utility.display"
					}
				},
				{
					"id": 2684,
					"name": "flex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the flex css prop.<br/>\nHere you can pass all flex props for generating flex utility classes, <br/>\nRequires a display: 'flex' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex', flex: {direction: 'column', align: 'center', justify: 'center', flex: 'auto' }}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 231,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 97,
						"name": "Flex"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 4,
						"name": "Utility.flex"
					}
				},
				{
					"id": 2740,
					"name": "focus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 366,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 60,
						"name": "Events.focus"
					}
				},
				{
					"id": 2693,
					"name": "font",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-weight, font-family, font-style, font antialiasing css props.<br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{font: {weight: 'semibold', family: 'sans', style: 'italic', smoothing: 'antialiased'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 287,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 92,
						"name": "Font"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 13,
						"name": "Utility.font"
					}
				},
				{
					"id": 2685,
					"name": "grid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the grid css prop.<br/>\nHere you can pass all grid props for generating grid utility classes, <br/>\nRequires a display: 'grid' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'grid', grid: {cols: '4', gap: '4' }```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 239,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 103,
						"name": "Grid"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 5,
						"name": "Utility.grid"
					}
				},
				{
					"id": 2688,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the height css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{height: 'full'}```"
							},
							{
								"tag": "example",
								"text": "```{height: '64'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 258,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"height\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 8,
						"name": "Utility.height"
					}
				},
				{
					"id": 2738,
					"name": "hover",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 364,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 58,
						"name": "Events.hover"
					}
				},
				{
					"id": 2681,
					"name": "input",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles object for the input component."
					},
					"sources": [
						{
							"fileName": "src/components/complex/TextInput/index.tsx",
							"line": 18,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 2679,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Styles object for the label text component."
					},
					"sources": [
						{
							"fileName": "src/components/complex/TextInput/index.tsx",
							"line": 10,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				},
				{
					"id": 2736,
					"name": "lg",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 375,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 56,
						"name": "MediaQuery.lg"
					}
				},
				{
					"id": 2694,
					"name": "margin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the margin css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{margin: '4'}```"
							},
							{
								"tag": "example",
								"text": "```{margin: ['4','2','4','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 294,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2695,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2702,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 102
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2698,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 49
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2699,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 64
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2697,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 32
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2696,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2700,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 76
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 2701,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 88
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2702,
												2698,
												2699,
												2697,
												2696,
												2700,
												2701
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 14,
						"name": "Utility.margin"
					}
				},
				{
					"id": 2690,
					"name": "maxHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxHeight css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxHeight: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 268,
							"character": 11
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxHeight\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 10,
						"name": "Utility.maxHeight"
					}
				},
				{
					"id": 2689,
					"name": "maxWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxWidth css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxWidth: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 263,
							"character": 10
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxWidth\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 9,
						"name": "Utility.maxWidth"
					}
				},
				{
					"id": 2735,
					"name": "md",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 374,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 55,
						"name": "MediaQuery.md"
					}
				},
				{
					"id": 2712,
					"name": "opacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the opacity css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{opacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 306,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 188,
						"name": "Opacity"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 32,
						"name": "Utility.opacity"
					}
				},
				{
					"id": 2729,
					"name": "overflow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for overflow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{overflow: {x: 'hidden'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 357,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2730,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2733,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 44
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 2731,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 2732,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2733,
												2731,
												2732
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 49,
						"name": "Utility.overflow"
					}
				},
				{
					"id": 2703,
					"name": "padding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the padding css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{padding: '3'}```"
							},
							{
								"tag": "example",
								"text": "```{padding: ['6','2','6','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 301,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2704,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2711,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 109
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2707,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 52
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2708,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 68
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2706,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2705,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2709,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 81
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 2710,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 94
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2711,
												2707,
												2708,
												2706,
												2705,
												2709,
												2710
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 23,
						"name": "Utility.padding"
					}
				},
				{
					"id": 2717,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '400'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 323,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2718,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2719,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 324,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 184,
												"name": "Colors"
											}
										},
										{
											"id": 2720,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 325,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"id": 185,
												"name": "ColorVariants"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2719,
												2720
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 37,
						"name": "Utility.placeholder"
					}
				},
				{
					"id": 2721,
					"name": "placeholderOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color opacity.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '700',  placeholderOpacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 331,
							"character": 20
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"placeholderOpacity\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 41,
						"name": "Utility.placeholderOpacity"
					}
				},
				{
					"id": 2725,
					"name": "placement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for position placement.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute', placement: 'inset-0'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 351,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2726,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2728,
											"name": "inset",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 42
												}
											],
											"type": {
												"type": "reference",
												"id": 197,
												"name": "Inset"
											}
										},
										{
											"id": 2727,
											"name": "position",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 196,
												"name": "Placement"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2728,
												2727
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 45,
						"name": "Utility.placement"
					}
				},
				{
					"id": 2716,
					"name": "pointerEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the all pointer events.",
						"tags": [
							{
								"tag": "example",
								"text": "```{pointerEvents: 'none'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 318,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "auto"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 36,
						"name": "Utility.pointerEvents"
					}
				},
				{
					"id": 2682,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the position css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 205,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "static"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							},
							{
								"type": "stringLiteral",
								"value": "absolute"
							},
							{
								"type": "stringLiteral",
								"value": "relative"
							},
							{
								"type": "stringLiteral",
								"value": "sticky"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2,
						"name": "Utility.position"
					}
				},
				{
					"id": 2723,
					"name": "rounded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined border radius classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{rounded: 'full'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 341,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 193,
								"name": "BorderRadius"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"name": "BorderRadius"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 43,
						"name": "Utility.rounded"
					}
				},
				{
					"id": 2722,
					"name": "shadow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined box shadow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{shadow: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 336,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"boxShadow\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 42,
						"name": "Utility.shadow"
					}
				},
				{
					"id": 2734,
					"name": "sm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 373,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 54,
						"name": "MediaQuery.sm"
					}
				},
				{
					"id": 2714,
					"name": "space",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 308,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 77,
						"name": "Space"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 34,
						"name": "Utility.space"
					}
				},
				{
					"id": 2715,
					"name": "table",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the table columns widths.",
						"tags": [
							{
								"tag": "example",
								"text": "```{table: 'auto'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 313,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 35,
						"name": "Utility.table"
					}
				},
				{
					"id": 2692,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-size, color, color-opacity, line-height, text-align, ... css props. <br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{text: {size: 'lg'} }```"
							},
							{
								"tag": "example",
								"text": "```{text: {size: 'xl', color: 'blue-500', leading: 'tight', align:'center'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 281,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 80,
						"name": "Text"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 12,
						"name": "Utility.text"
					}
				},
				{
					"id": 2687,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the width css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{width: '64'}```"
							},
							{
								"tag": "example",
								"text": "```{width: '1/2'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 252,
							"character": 7
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"width\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 7,
						"name": "Utility.width"
					}
				},
				{
					"id": 2737,
					"name": "xl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 376,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 122,
						"name": "Utility"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 57,
						"name": "MediaQuery.xl"
					}
				},
				{
					"id": 2724,
					"name": "zIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined z-index classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{zIndex: '60'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 346,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"zIndex\""
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 44,
						"name": "Utility.zIndex"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2739,
						2691,
						2713,
						2686,
						2680,
						2683,
						2684,
						2740,
						2693,
						2685,
						2688,
						2738,
						2681,
						2679,
						2736,
						2694,
						2690,
						2689,
						2735,
						2712,
						2729,
						2703,
						2717,
						2721,
						2725,
						2716,
						2682,
						2723,
						2722,
						2734,
						2714,
						2715,
						2692,
						2687,
						2737,
						2724
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/TextInput/index.tsx",
					"line": 6,
					"character": 25
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1,
					"name": "Styles"
				}
			]
		},
		{
			"id": 1013,
			"name": "TextProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 1015,
					"name": "html",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Html element that will render."
					},
					"sources": [
						{
							"fileName": "src/components/simple/Text/index.tsx",
							"line": 13,
							"character": 6
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "span"
							},
							{
								"type": "stringLiteral",
								"value": "p"
							},
							{
								"type": "stringLiteral",
								"value": "h1"
							},
							{
								"type": "stringLiteral",
								"value": "h2"
							},
							{
								"type": "stringLiteral",
								"value": "h3"
							},
							{
								"type": "stringLiteral",
								"value": "h4"
							},
							{
								"type": "stringLiteral",
								"value": "h5"
							},
							{
								"type": "stringLiteral",
								"value": "h6"
							},
							{
								"type": "stringLiteral",
								"value": "label"
							},
							{
								"type": "stringLiteral",
								"value": "pre"
							},
							{
								"type": "stringLiteral",
								"value": "address"
							},
							{
								"type": "stringLiteral",
								"value": "blockquote"
							},
							{
								"type": "stringLiteral",
								"value": "div"
							},
							{
								"type": "stringLiteral",
								"value": "sub"
							},
							{
								"type": "stringLiteral",
								"value": "sup"
							}
						]
					}
				},
				{
					"id": 1014,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Tailwind styles object, that will be parses into string of tailwind css classes from the object."
					},
					"sources": [
						{
							"fileName": "src/components/simple/Text/index.tsx",
							"line": 9,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Styles"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1015,
						1014
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/Text/index.tsx",
					"line": 5,
					"character": 19
				}
			]
		},
		{
			"id": 659,
			"name": "ThemeProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 673,
					"name": "button",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/theme.ts",
							"line": 21,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 674,
						"name": "SimpleComponentStyles"
					}
				},
				{
					"id": 666,
					"name": "datePicker",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/theme.ts",
							"line": 13,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 667,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 671,
											"name": "default",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/theme.ts",
													"line": 17,
													"character": 11
												}
											],
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 563,
														"name": "DatePickerStyles"
													},
													{
														"type": "reference",
														"id": 1,
														"name": "Styles"
													}
												]
											}
										},
										{
											"id": 670,
											"name": "init",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/theme.ts",
													"line": 16,
													"character": 8
												}
											],
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 563,
														"name": "DatePickerStyles"
													},
													{
														"type": "reference",
														"id": 1,
														"name": "Styles"
													}
												]
											}
										},
										{
											"id": 668,
											"name": "primary",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/theme.ts",
													"line": 14,
													"character": 11
												}
											],
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 563,
														"name": "DatePickerStyles"
													},
													{
														"type": "reference",
														"id": 1,
														"name": "Styles"
													}
												]
											}
										},
										{
											"id": 669,
											"name": "secondary",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/theme.ts",
													"line": 15,
													"character": 13
												}
											],
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 563,
														"name": "DatePickerStyles"
													},
													{
														"type": "reference",
														"id": 1,
														"name": "Styles"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												671,
												670,
												668,
												669
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 672,
					"name": "input",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/theme.ts",
							"line": 20,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 674,
						"name": "SimpleComponentStyles"
					}
				},
				{
					"id": 660,
					"name": "select",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/theme.ts",
							"line": 6,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 661,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 665,
											"name": "default",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/theme.ts",
													"line": 10,
													"character": 11
												}
											],
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 472,
														"name": "SelectStyles"
													},
													{
														"type": "reference",
														"id": 1,
														"name": "Styles"
													}
												]
											}
										},
										{
											"id": 664,
											"name": "init",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/theme.ts",
													"line": 9,
													"character": 8
												}
											],
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 472,
														"name": "SelectStyles"
													},
													{
														"type": "reference",
														"id": 1,
														"name": "Styles"
													}
												]
											}
										},
										{
											"id": 662,
											"name": "primary",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/theme.ts",
													"line": 7,
													"character": 11
												}
											],
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 472,
														"name": "SelectStyles"
													},
													{
														"type": "reference",
														"id": 1,
														"name": "Styles"
													}
												]
											}
										},
										{
											"id": 663,
											"name": "secondary",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/theme.ts",
													"line": 8,
													"character": 13
												}
											],
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 472,
														"name": "SelectStyles"
													},
													{
														"type": "reference",
														"id": 1,
														"name": "Styles"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												665,
												664,
												662,
												663
											]
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						673,
						666,
						672,
						660
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/theme.ts",
					"line": 5,
					"character": 35
				}
			]
		},
		{
			"id": 122,
			"name": "Utility",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 132,
					"name": "background",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the background css prop.<br/>\nYou can pass a single string with a color name or an object with color name opacity and bg size.",
						"tags": [
							{
								"tag": "example",
								"text": "```{background: 'red'}```"
							},
							{
								"tag": "example",
								"text": "```{background: {color: 'red', opacity: '20', size: 'cover'}}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 274,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 184,
								"name": "Colors"
							},
							{
								"type": "reference",
								"id": 61,
								"name": "Background"
							}
						]
					}
				},
				{
					"id": 154,
					"name": "border",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 307,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 67,
						"name": "Border"
					}
				},
				{
					"id": 127,
					"name": "cursor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the cursor css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{cursor: 'pointer'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 245,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "default"
							},
							{
								"type": "stringLiteral",
								"value": "pointer"
							},
							{
								"type": "stringLiteral",
								"value": "wait"
							},
							{
								"type": "stringLiteral",
								"value": "text"
							},
							{
								"type": "stringLiteral",
								"value": "move"
							},
							{
								"type": "stringLiteral",
								"value": "not-allowed"
							}
						]
					}
				},
				{
					"id": 124,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the display css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 211,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "hidden"
							},
							{
								"type": "stringLiteral",
								"value": "block"
							},
							{
								"type": "stringLiteral",
								"value": "inline-block"
							},
							{
								"type": "stringLiteral",
								"value": "inline"
							},
							{
								"type": "stringLiteral",
								"value": "flex"
							},
							{
								"type": "stringLiteral",
								"value": "inline-flex"
							},
							{
								"type": "stringLiteral",
								"value": "grid"
							},
							{
								"type": "stringLiteral",
								"value": "inline-grid"
							},
							{
								"type": "stringLiteral",
								"value": "table"
							},
							{
								"type": "stringLiteral",
								"value": "table-caption"
							},
							{
								"type": "stringLiteral",
								"value": "table-cell"
							},
							{
								"type": "stringLiteral",
								"value": "flow-root"
							}
						]
					}
				},
				{
					"id": 125,
					"name": "flex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the flex css prop.<br/>\nHere you can pass all flex props for generating flex utility classes, <br/>\nRequires a display: 'flex' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'flex', flex: {direction: 'column', align: 'center', justify: 'center', flex: 'auto' }}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 231,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 97,
						"name": "Flex"
					}
				},
				{
					"id": 134,
					"name": "font",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-weight, font-family, font-style, font antialiasing css props.<br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{font: {weight: 'semibold', family: 'sans', style: 'italic', smoothing: 'antialiased'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 287,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 92,
						"name": "Font"
					}
				},
				{
					"id": 126,
					"name": "grid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the grid css prop.<br/>\nHere you can pass all grid props for generating grid utility classes, <br/>\nRequires a display: 'grid' prop to work.",
						"tags": [
							{
								"tag": "example",
								"text": "```{display: 'grid', grid: {cols: '4', gap: '4' }```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 239,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 103,
						"name": "Grid"
					}
				},
				{
					"id": 129,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the height css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{height: 'full'}```"
							},
							{
								"tag": "example",
								"text": "```{height: '64'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 258,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"height\""
							}
						}
					}
				},
				{
					"id": 135,
					"name": "margin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the margin css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{margin: '4'}```"
							},
							{
								"tag": "example",
								"text": "```{margin: ['4','2','4','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 294,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 136,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 143,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 102
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 139,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 49
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 140,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 64
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 138,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 32
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 137,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 141,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 76
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										},
										{
											"id": 142,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 294,
													"character": 88
												}
											],
											"type": {
												"type": "reference",
												"id": 191,
												"name": "Margin"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												143,
												139,
												140,
												138,
												137,
												141,
												142
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 131,
					"name": "maxHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxHeight css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxHeight: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 268,
							"character": 11
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxHeight\""
							}
						}
					}
				},
				{
					"id": 130,
					"name": "maxWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the maxWidth css prop",
						"tags": [
							{
								"tag": "example",
								"text": "```{maxWidth: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 263,
							"character": 10
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"maxWidth\""
							}
						}
					}
				},
				{
					"id": 153,
					"name": "opacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the opacity css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{opacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 306,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"id": 188,
						"name": "Opacity"
					}
				},
				{
					"id": 170,
					"name": "overflow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for overflow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{overflow: {x: 'hidden'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 357,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 171,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 174,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 44
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 172,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										},
										{
											"id": 173,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 357,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"id": 204,
												"name": "Overflow"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												174,
												172,
												173
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 144,
					"name": "padding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes the padding css prop.<br/>\nIt can recieve a string or an array for all 4 sides of the box model [top, right, bottom, left]",
						"tags": [
							{
								"tag": "example",
								"text": "```{padding: '3'}```"
							},
							{
								"tag": "example",
								"text": "```{padding: ['6','2','6','2']}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 301,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 145,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 152,
											"name": "all",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 109
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 148,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 52
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 149,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 68
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 147,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 34
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 146,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 150,
											"name": "x",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 81
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										},
										{
											"id": 151,
											"name": "y",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 301,
													"character": 94
												}
											],
											"type": {
												"type": "reference",
												"id": 192,
												"name": "Padding"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												152,
												148,
												149,
												147,
												146,
												150,
												151
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 158,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '400'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 323,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 159,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 160,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 324,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 184,
												"name": "Colors"
											}
										},
										{
											"id": 161,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 325,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"id": 185,
												"name": "ColorVariants"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												160,
												161
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 162,
					"name": "placeholderOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the placeholder color opacity.",
						"tags": [
							{
								"tag": "example",
								"text": "```{placeholder: 'red', variant: '700',  placeholderOpacity: '50'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 331,
							"character": 20
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"placeholderOpacity\""
							}
						}
					}
				},
				{
					"id": 166,
					"name": "placement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all values for position placement.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute', placement: 'inset-0'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 351,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 167,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 169,
											"name": "inset",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 42
												}
											],
											"type": {
												"type": "reference",
												"id": 197,
												"name": "Inset"
											}
										},
										{
											"id": 168,
											"name": "position",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/types/styles.ts",
													"line": 351,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"id": 196,
												"name": "Placement"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												169,
												168
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 157,
					"name": "pointerEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the all pointer events.",
						"tags": [
							{
								"tag": "example",
								"text": "```{pointerEvents: 'none'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 318,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "none"
							},
							{
								"type": "stringLiteral",
								"value": "auto"
							}
						]
					}
				},
				{
					"id": 123,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the position css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{position: 'absolute'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 205,
							"character": 10
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "static"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							},
							{
								"type": "stringLiteral",
								"value": "absolute"
							},
							{
								"type": "stringLiteral",
								"value": "relative"
							},
							{
								"type": "stringLiteral",
								"value": "sticky"
							}
						]
					}
				},
				{
					"id": 164,
					"name": "rounded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined border radius classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{rounded: 'full'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 341,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 193,
								"name": "BorderRadius"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"name": "BorderRadius"
								}
							}
						]
					}
				},
				{
					"id": 163,
					"name": "shadow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined box shadow classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{shadow: 'md'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 336,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"boxShadow\""
							}
						}
					}
				},
				{
					"id": 155,
					"name": "space",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 308,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 77,
						"name": "Space"
					}
				},
				{
					"id": 156,
					"name": "table",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for the table columns widths.",
						"tags": [
							{
								"tag": "example",
								"text": "```{table: 'auto'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 313,
							"character": 7
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "auto"
							},
							{
								"type": "stringLiteral",
								"value": "fixed"
							}
						]
					}
				},
				{
					"id": 133,
					"name": "text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the font-size, color, color-opacity, line-height, text-align, ... css props. <br/>\nIt needs an object with at least one key value, it cannot recieve a string.",
						"tags": [
							{
								"tag": "example",
								"text": "```{text: {size: 'lg'} }```"
							},
							{
								"tag": "example",
								"text": "```{text: {size: 'xl', color: 'blue-500', leading: 'tight', align:'center'}}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 281,
							"character": 6
						}
					],
					"type": {
						"type": "reference",
						"id": 80,
						"name": "Text"
					}
				},
				{
					"id": 128,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Generate css utility classes for the width css prop.",
						"tags": [
							{
								"tag": "example",
								"text": "```{width: '64'}```"
							},
							{
								"tag": "example",
								"text": "```{width: '1/2'}```"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 252,
							"character": 7
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"width\""
							}
						}
					}
				},
				{
					"id": 165,
					"name": "zIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Type for all predefined z-index classes.",
						"tags": [
							{
								"tag": "example",
								"text": "```{zIndex: '60'}```\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 346,
							"character": 8
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"zIndex\""
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						132,
						154,
						127,
						124,
						125,
						134,
						126,
						129,
						135,
						131,
						130,
						153,
						170,
						144,
						158,
						162,
						166,
						157,
						123,
						164,
						163,
						155,
						156,
						133,
						128,
						165
					]
				}
			],
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 200,
					"character": 24
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1,
					"name": "Styles"
				}
			]
		},
		{
			"id": 190,
			"name": "BackgroundPosition",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Type for background image position.",
				"tags": [
					{
						"tag": "example",
						"text": "```{background: { position:'center'} }```\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 41,
					"character": 30
				}
			],
			"type": {
				"type": "typeOperator",
				"operator": "keyof",
				"target": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"name": "\"backgroundPosition\""
					}
				}
			}
		},
		{
			"id": 189,
			"name": "BackgroundSize",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Type for background image sizes.",
				"tags": [
					{
						"tag": "example",
						"text": "```{background: { size:'cover'} }```\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 36,
					"character": 26
				}
			],
			"type": {
				"type": "typeOperator",
				"operator": "keyof",
				"target": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"name": "\"backgroundSize\""
					}
				}
			}
		},
		{
			"id": 193,
			"name": "BorderRadius",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 78,
					"character": 24
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "base"
					},
					{
						"type": "stringLiteral",
						"value": "none"
					},
					{
						"type": "stringLiteral",
						"value": "sm"
					},
					{
						"type": "stringLiteral",
						"value": "md"
					},
					{
						"type": "stringLiteral",
						"value": "lg"
					},
					{
						"type": "stringLiteral",
						"value": "full"
					},
					{
						"type": "stringLiteral",
						"value": "t-none"
					},
					{
						"type": "stringLiteral",
						"value": "r-none"
					},
					{
						"type": "stringLiteral",
						"value": "b-none"
					},
					{
						"type": "stringLiteral",
						"value": "l-none"
					},
					{
						"type": "stringLiteral",
						"value": "t-sm"
					},
					{
						"type": "stringLiteral",
						"value": "r-sm"
					},
					{
						"type": "stringLiteral",
						"value": "b-sm"
					},
					{
						"type": "stringLiteral",
						"value": "l-sm"
					},
					{
						"type": "stringLiteral",
						"value": "t"
					},
					{
						"type": "stringLiteral",
						"value": "r"
					},
					{
						"type": "stringLiteral",
						"value": "b"
					},
					{
						"type": "stringLiteral",
						"value": "l"
					},
					{
						"type": "stringLiteral",
						"value": "t-md"
					},
					{
						"type": "stringLiteral",
						"value": "r-md"
					},
					{
						"type": "stringLiteral",
						"value": "b-md"
					},
					{
						"type": "stringLiteral",
						"value": "l-md"
					},
					{
						"type": "stringLiteral",
						"value": "t-lg"
					},
					{
						"type": "stringLiteral",
						"value": "r-lg"
					},
					{
						"type": "stringLiteral",
						"value": "b-lg"
					},
					{
						"type": "stringLiteral",
						"value": "l-lg"
					},
					{
						"type": "stringLiteral",
						"value": "t-full"
					},
					{
						"type": "stringLiteral",
						"value": "r-full"
					},
					{
						"type": "stringLiteral",
						"value": "b-full"
					},
					{
						"type": "stringLiteral",
						"value": "l-full"
					},
					{
						"type": "stringLiteral",
						"value": "tl-none"
					},
					{
						"type": "stringLiteral",
						"value": "tr-none"
					},
					{
						"type": "stringLiteral",
						"value": "br-none"
					},
					{
						"type": "stringLiteral",
						"value": "bl-none"
					},
					{
						"type": "stringLiteral",
						"value": "tl-sm"
					},
					{
						"type": "stringLiteral",
						"value": "tr-sm"
					},
					{
						"type": "stringLiteral",
						"value": "br-sm"
					},
					{
						"type": "stringLiteral",
						"value": "bl-sm"
					},
					{
						"type": "stringLiteral",
						"value": "tl"
					},
					{
						"type": "stringLiteral",
						"value": "tr"
					},
					{
						"type": "stringLiteral",
						"value": "br"
					},
					{
						"type": "stringLiteral",
						"value": "bl"
					},
					{
						"type": "stringLiteral",
						"value": "tl-md"
					},
					{
						"type": "stringLiteral",
						"value": "tr-md"
					},
					{
						"type": "stringLiteral",
						"value": "br-md"
					},
					{
						"type": "stringLiteral",
						"value": "bl-md"
					},
					{
						"type": "stringLiteral",
						"value": "tl-lg"
					},
					{
						"type": "stringLiteral",
						"value": "tr-lg"
					},
					{
						"type": "stringLiteral",
						"value": "br-lg"
					},
					{
						"type": "stringLiteral",
						"value": "bl-lg"
					},
					{
						"type": "stringLiteral",
						"value": "tl-full"
					},
					{
						"type": "stringLiteral",
						"value": "tr-full"
					},
					{
						"type": "stringLiteral",
						"value": "br-full"
					},
					{
						"type": "stringLiteral",
						"value": "bl-full"
					}
				]
			}
		},
		{
			"id": 186,
			"name": "BorderWidth",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Type for all the border widths.",
				"tags": [
					{
						"tag": "example",
						"text": "```{border: {width: '2'}}```\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 24,
					"character": 23
				}
			],
			"type": {
				"type": "typeOperator",
				"operator": "keyof",
				"target": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"name": "\"borderWidth\""
					}
				}
			}
		},
		{
			"id": 198,
			"name": "BoxModel",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 191,
					"character": 20
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 199,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 202,
							"name": "bottom",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/styles.ts",
									"line": 194,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 187,
								"name": "Spacing"
							}
						},
						{
							"id": 203,
							"name": "left",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/styles.ts",
									"line": 195,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 187,
								"name": "Spacing"
							}
						},
						{
							"id": 201,
							"name": "right",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/styles.ts",
									"line": 193,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"id": 187,
								"name": "Spacing"
							}
						},
						{
							"id": 200,
							"name": "top",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/types/styles.ts",
									"line": 192,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"id": 187,
								"name": "Spacing"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								202,
								203,
								201,
								200
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types/styles.ts",
							"line": 191,
							"character": 22
						}
					]
				}
			}
		},
		{
			"id": 185,
			"name": "ColorVariants",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Type for all color variants in the library.<br/>\nAll colors have a primary color and a  variants that go from 50 , 100, 200 ... 900",
				"tags": [
					{
						"tag": "example",
						"text": "```{background: 'blue', variant: '50'}```"
					},
					{
						"tag": "example",
						"text": "```{background: 'yellow', variant: '600'}```"
					},
					{
						"tag": "example",
						"text": "```{background: 'green', variant: '900'}```\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 18,
					"character": 25
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"gray\""
							}
						}
					},
					{
						"type": "intrinsic",
						"name": "null"
					}
				]
			}
		},
		{
			"id": 184,
			"name": "Colors",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Type for all colors in the library.<br/>\nDefining just a color without a variant will render a default variant",
				"tags": [
					{
						"tag": "example",
						"text": "```{background: 'blue''}```\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 9,
					"character": 18
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "\"colors\""
							}
						}
					},
					{
						"type": "intrinsic",
						"name": "null"
					}
				]
			}
		},
		{
			"id": 194,
			"name": "GridSix",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 176,
					"character": 19
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "1"
					},
					{
						"type": "stringLiteral",
						"value": "2"
					},
					{
						"type": "stringLiteral",
						"value": "3"
					},
					{
						"type": "stringLiteral",
						"value": "4"
					},
					{
						"type": "stringLiteral",
						"value": "5"
					},
					{
						"type": "stringLiteral",
						"value": "6"
					}
				]
			}
		},
		{
			"id": 195,
			"name": "GridTwelve",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 177,
					"character": 22
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 194,
						"name": "GridSix"
					},
					{
						"type": "stringLiteral",
						"value": "7"
					},
					{
						"type": "stringLiteral",
						"value": "8"
					},
					{
						"type": "stringLiteral",
						"value": "9"
					},
					{
						"type": "stringLiteral",
						"value": "10"
					},
					{
						"type": "stringLiteral",
						"value": "11"
					},
					{
						"type": "stringLiteral",
						"value": "12"
					}
				]
			}
		},
		{
			"id": 197,
			"name": "Inset",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 189,
					"character": 17
				}
			],
			"type": {
				"type": "typeOperator",
				"operator": "keyof",
				"target": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"name": "\"inset\""
					}
				}
			}
		},
		{
			"id": 191,
			"name": "Margin",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Type for margin that combines Spacing and Negative spacing."
			},
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 45,
					"character": 18
				}
			],
			"type": {
				"type": "typeOperator",
				"operator": "keyof",
				"target": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"name": "\"margin\""
					}
				}
			}
		},
		{
			"id": 188,
			"name": "Opacity",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 31,
					"character": 19
				}
			],
			"type": {
				"type": "typeOperator",
				"operator": "keyof",
				"target": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"name": "\"opacity\""
					}
				}
			}
		},
		{
			"id": 204,
			"name": "Overflow",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 198,
					"character": 20
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "auto"
					},
					{
						"type": "stringLiteral",
						"value": "hidden"
					},
					{
						"type": "stringLiteral",
						"value": "visible"
					},
					{
						"type": "stringLiteral",
						"value": "scroll"
					}
				]
			}
		},
		{
			"id": 192,
			"name": "Padding",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Type for алл padding values."
			},
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 49,
					"character": 19
				}
			],
			"type": {
				"type": "typeOperator",
				"operator": "keyof",
				"target": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"name": "\"padding\""
					}
				}
			}
		},
		{
			"id": 196,
			"name": "Placement",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 188,
					"character": 21
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "inset"
					},
					{
						"type": "stringLiteral",
						"value": "top"
					},
					{
						"type": "stringLiteral",
						"value": "right"
					},
					{
						"type": "stringLiteral",
						"value": "bottom"
					},
					{
						"type": "stringLiteral",
						"value": "left"
					}
				]
			}
		},
		{
			"id": 187,
			"name": "Spacing",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Type for all the Spaces used in margin, padding, width and height .",
				"tags": [
					{
						"tag": "example",
						"text": "```{margin: {all: '2'}}```\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/types/styles.ts",
					"line": 29,
					"character": 19
				}
			],
			"type": {
				"type": "typeOperator",
				"operator": "keyof",
				"target": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"name": "\"gap\""
					}
				}
			}
		},
		{
			"id": 921,
			"name": "Block",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/simple/Block/index.tsx",
					"line": 15,
					"character": 11
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 918,
								"name": "BlockProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "AllHTMLAttributes"
							}
						]
					}
				],
				"name": "React.FC"
			},
			"defaultValue": "React.forwardRef((props, ref) => {\n  const { styles, title, className, children, html } = props\n\n  const elementProps = Object.assign({}, props)\n  delete elementProps.styles\n  delete elementProps.html\n  delete elementProps.children\n\n  return React.createElement(\n    html ? html : 'div',\n    {\n      ...elementProps,\n      className: `${renderTailwind(styles)} ${className ? className : ''}`,\n      'aria-label': title,\n      alt: title,\n      ref\n    },\n    children\n  )\n})"
		},
		{
			"id": 925,
			"name": "Button",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 926,
					"name": "Button",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 927,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 922,
										"name": "ButtonProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLButtonElement"
											}
										],
										"name": "HTMLProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 928,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 929,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														929
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 930,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 933,
											"name": "alt",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/simple/Button/index.tsx",
													"line": 35,
													"character": 9
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "title"
										},
										{
											"id": 932,
											"name": "aria-label",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/simple/Button/index.tsx",
													"line": 34,
													"character": 18
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "title"
										},
										{
											"id": 931,
											"name": "className",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/simple/Button/index.tsx",
													"line": 33,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "`${css} ${renderTailwind(merge(cloneDeep(theme?.button?.init), styles))} ${className ? className : ''}`"
										},
										{
											"id": 934,
											"name": "ref",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/simple/Button/index.tsx",
													"line": 36,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "HTMLButtonElement"
													}
												],
												"name": "RefObject"
											},
											"defaultValue": "buttonRef"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												933,
												932,
												931,
												934
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"name": "HTMLButtonElement"
							}
						],
						"name": "DetailedReactHTMLElement"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/Button/index.tsx",
					"line": 16,
					"character": 12
				}
			]
		},
		{
			"id": 3640,
			"name": "Calendar",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 3641,
					"name": "Calendar",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 3642,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 3629,
										"name": "CalendarProps"
									},
									{
										"type": "reference",
										"name": "RenderProps"
									}
								]
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "Element"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Calendar/index.tsx",
					"line": 104,
					"character": 14
				}
			]
		},
		{
			"id": 3643,
			"name": "Calendars",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 3644,
					"name": "Calendars",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 3645,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 3610,
										"name": "CalendarsProps"
									},
									{
										"type": "reference",
										"name": "DayzedProps"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Calendar/index.tsx",
					"line": 268,
					"character": 15
				}
			]
		},
		{
			"id": 1000,
			"name": "Checkbox",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1001,
					"name": "Checkbox",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1002,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 935,
										"name": "CheckboxProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLInputElement"
											}
										],
										"name": "InputHTMLAttributes"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1003,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1004,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1004
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/Checkbox/index.tsx",
					"line": 29,
					"character": 21
				}
			]
		},
		{
			"id": 3358,
			"name": "Collapse",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 3359,
					"name": "Collapse",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 3360,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 3284,
										"name": "CollapseProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3361,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 3362,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3362
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Collapse/index.tsx",
					"line": 36,
					"character": 14
				}
			]
		},
		{
			"id": 654,
			"name": "DatePicker",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 655,
					"name": "DatePicker",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 656,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 627,
										"name": "DatePickerProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 657,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 658,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														658
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/DatePicker/index.tsx",
					"line": 88,
					"character": 16
				}
			]
		},
		{
			"id": 1028,
			"name": "Input",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1029,
					"name": "Input",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1030,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 1025,
										"name": "InputProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLInputElement"
											}
										],
										"name": "InputHTMLAttributes"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1031,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1032,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1032
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/Input/index.tsx",
					"line": 16,
					"character": 18
				}
			]
		},
		{
			"id": 1060,
			"name": "InputMasked",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1061,
					"name": "InputMasked",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1062,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 1033,
										"name": "InputMaskedProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLInputElement"
											}
										],
										"name": "InputHTMLAttributes"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1063,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1064,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1064
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/InputMasked/index.tsx",
					"line": 70,
					"character": 24
				}
			]
		},
		{
			"id": 463,
			"name": "Label",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 464,
					"name": "Label",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 465,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 205,
										"name": "LabelProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 466,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 467,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														467
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/Label/index.tsx",
					"line": 10,
					"character": 18
				}
			]
		},
		{
			"id": 3225,
			"name": "Loader",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 3226,
					"name": "Loader",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 3227,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 3157,
										"name": "LoaderProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3228,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											}
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3229,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 3230,
													"name": "ref",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 816,
															"character": 48
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "R"
															},
															{
																"type": "unknown",
																"name": "string"
															}
														],
														"name": "Exclude"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3230
													]
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3231,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 3232,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3232
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Loader/index.tsx",
					"line": 40,
					"character": 12
				}
			]
		},
		{
			"id": 3152,
			"name": "Modal",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 3153,
					"name": "Modal",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 3154,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 3069,
										"name": "ModalProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3155,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 3156,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3156
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "Element"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Modal/index.tsx",
					"line": 68,
					"character": 11
				}
			]
		},
		{
			"id": 3279,
			"name": "Pagination",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 3280,
					"name": "Pagination",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 3281,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 3233,
										"name": "PaginationProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3282,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 3283,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3283
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Pagination/index.tsx",
					"line": 59,
					"character": 16
				}
			]
		},
		{
			"id": 3518,
			"name": "Panel",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 3519,
					"name": "Panel",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 3520,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 3511,
										"name": "PanelProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3521,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 3522,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3522
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "null"
							},
							{
								"type": "reference",
								"name": "Element"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Tabs/index.tsx",
					"line": 31,
					"character": 18
				}
			]
		},
		{
			"id": 2673,
			"name": "ProgressRing",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 2674,
					"name": "ProgressRing",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 2675,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 2663,
										"name": "ProgressRingProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2676,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 2677,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														2677
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/ProgressRing/index.tsx",
					"line": 33,
					"character": 18
				}
			]
		},
		{
			"id": 1008,
			"name": "Radio",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1009,
					"name": "Radio",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1010,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 1005,
										"name": "RadioProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLInputElement"
											}
										],
										"name": "InputHTMLAttributes"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1011,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1012,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1012
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/Radio/index.tsx",
					"line": 17,
					"character": 18
				}
			]
		},
		{
			"id": 2909,
			"name": "RadioGroup",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 2910,
					"name": "RadioGroup",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 2911,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 2893,
										"name": "RadioGroupProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2912,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 2913,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														2913
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/RadioGroup/index.tsx",
					"line": 75,
					"character": 23
				}
			]
		},
		{
			"id": 3506,
			"name": "RangeSlider",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 3507,
					"name": "RangeSlider",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 3508,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 3432,
										"name": "RangeSliderProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3509,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 3510,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3510
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/RangeSlider/index.tsx",
					"line": 46,
					"character": 24
				}
			]
		},
		{
			"id": 2999,
			"name": "Scrollbars",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 3000,
					"name": "Scrollbars",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 3001,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 2982,
										"name": "ScrollbarsProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "HTMLProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3002,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 3003,
													"name": "elementRef",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/types.d.ts",
															"line": 19,
															"character": 14
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "T"
															}
														],
														"name": "ElementRef"
													}
												},
												{
													"id": 3004,
													"name": "renderer",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/types.d.ts",
															"line": 20,
															"character": 12
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "T"
															}
														],
														"name": "ElementRenderer"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3003,
														3004
													]
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3005,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 3044,
													"name": "contentProps",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 46,
															"character": 16
														}
													],
													"type": {
														"type": "reference",
														"name": "ElementPropsWithElementRefAndRenderer"
													}
												},
												{
													"id": 3006,
													"name": "createContext",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 8,
															"character": 17
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3036,
													"name": "disableTrackXMousewheelScrolling",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 38,
															"character": 36
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3039,
													"name": "disableTrackXWidthCompensation",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 41,
															"character": 34
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3037,
													"name": "disableTrackYMousewheelScrolling",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 39,
															"character": 36
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3040,
													"name": "disableTrackYWidthCompensation",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 42,
															"character": 34
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3035,
													"name": "disableTracksMousewheelScrolling",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 37,
															"character": 36
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3038,
													"name": "disableTracksWidthCompensation",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 40,
															"character": 34
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3027,
													"name": "fallbackScrollbarWidth",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 29,
															"character": 26
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 3021,
													"name": "maximalThumbSize",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 23,
															"character": 20
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 3023,
													"name": "maximalThumbXSize",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 25,
															"character": 21
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 3025,
													"name": "maximalThumbYSize",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 27,
															"character": 21
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 3020,
													"name": "minimalThumbSize",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 22,
															"character": 20
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 3022,
													"name": "minimalThumbXSize",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 24,
															"character": 21
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 3024,
													"name": "minimalThumbYSize",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 26,
															"character": 21
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 3010,
													"name": "mobileNative",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 12,
															"character": 16
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3008,
													"name": "momentum",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 10,
															"character": 12
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3009,
													"name": "native",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 11,
															"character": 10
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3034,
													"name": "noDefaultStyles",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 36,
															"character": 19
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3013,
													"name": "noScroll",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 15,
															"character": 12
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3011,
													"name": "noScrollX",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 13,
															"character": 13
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3012,
													"name": "noScrollY",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 14,
															"character": 13
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3054,
													"name": "onScroll",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 52,
															"character": 12
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3055,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"signatures": [
																		{
																			"id": 3056,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {
																				"isExported": true
																			},
																			"parameters": [
																				{
																					"id": 3057,
																					"name": "scrollValues",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {
																						"isExported": true
																					},
																					"type": {
																						"type": "reference",
																						"name": "ScrollState"
																					}
																				},
																				{
																					"id": 3058,
																					"name": "prevScrollState",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {
																						"isExported": true
																					},
																					"type": {
																						"type": "reference",
																						"name": "ScrollState"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "void"
																			}
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 3059,
													"name": "onScrollStart",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 53,
															"character": 17
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3060,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"signatures": [
																		{
																			"id": 3061,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {
																				"isExported": true
																			},
																			"parameters": [
																				{
																					"id": 3062,
																					"name": "scrollValues",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {
																						"isExported": true
																					},
																					"type": {
																						"type": "reference",
																						"name": "ScrollState"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "void"
																			}
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 3063,
													"name": "onScrollStop",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 54,
															"character": 16
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3064,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"signatures": [
																		{
																			"id": 3065,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {
																				"isExported": true
																			},
																			"parameters": [
																				{
																					"id": 3066,
																					"name": "scrollValues",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {
																						"isExported": true
																					},
																					"type": {
																						"type": "reference",
																						"name": "ScrollState"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "void"
																			}
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 3049,
													"name": "onUpdate",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 51,
															"character": 12
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3050,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"signatures": [
																		{
																			"id": 3051,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {
																				"isExported": true
																			},
																			"parameters": [
																				{
																					"id": 3052,
																					"name": "scrollValues",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {
																						"isExported": true
																					},
																					"type": {
																						"type": "reference",
																						"name": "ScrollState"
																					}
																				},
																				{
																					"id": 3053,
																					"name": "prevScrollState",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {
																						"isExported": true
																					},
																					"type": {
																						"type": "reference",
																						"name": "ScrollState"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "void"
																			}
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 3014,
													"name": "permanentTrackX",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 16,
															"character": 19
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3015,
													"name": "permanentTrackY",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 17,
															"character": 19
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3016,
													"name": "permanentTracks",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 18,
															"character": 19
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3019,
													"name": "removeTrackXWhenNotUsed",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 21,
															"character": 27
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3018,
													"name": "removeTrackYWhenNotUsed",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 20,
															"character": 27
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3017,
													"name": "removeTracksWhenNotUsed",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 19,
															"character": 27
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3007,
													"name": "rtl",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 9,
															"character": 7
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3030,
													"name": "scrollDetectionThreshold",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 32,
															"character": 28
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 3029,
													"name": "scrollLeft",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 31,
															"character": 14
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 3028,
													"name": "scrollTop",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 30,
															"character": 13
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 3026,
													"name": "scrollbarWidth",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 28,
															"character": 18
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 3043,
													"name": "scrollerProps",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 45,
															"character": 17
														}
													],
													"type": {
														"type": "reference",
														"name": "ElementPropsWithElementRefAndRenderer"
													}
												},
												{
													"id": 3047,
													"name": "thumbXProps",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 49,
															"character": 15
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "ScrollbarThumbProps"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"name": "ScrollbarThumbProps"
																		}
																	},
																	{
																		"type": "stringLiteral",
																		"value": "axis"
																	}
																],
																"name": "Exclude"
															}
														],
														"name": "Pick"
													}
												},
												{
													"id": 3048,
													"name": "thumbYProps",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 50,
															"character": 15
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "ScrollbarThumbProps"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"name": "ScrollbarThumbProps"
																		}
																	},
																	{
																		"type": "stringLiteral",
																		"value": "axis"
																	}
																],
																"name": "Exclude"
															}
														],
														"name": "Pick"
													}
												},
												{
													"id": 3041,
													"name": "trackClickBehavior",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 43,
															"character": 22
														}
													],
													"type": {
														"type": "reference",
														"name": "TRACK_CLICK_BEHAVIOR"
													}
												},
												{
													"id": 3045,
													"name": "trackXProps",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 47,
															"character": 15
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "ScrollbarTrackProps"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"name": "ScrollbarTrackProps"
																		}
																	},
																	{
																		"type": "stringLiteral",
																		"value": "axis"
																	}
																],
																"name": "Exclude"
															}
														],
														"name": "Pick"
													}
												},
												{
													"id": 3046,
													"name": "trackYProps",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 48,
															"character": 15
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "ScrollbarTrackProps"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "typeOperator",
																		"operator": "keyof",
																		"target": {
																			"type": "reference",
																			"name": "ScrollbarTrackProps"
																		}
																	},
																	{
																		"type": "stringLiteral",
																		"value": "axis"
																	}
																],
																"name": "Exclude"
															}
														],
														"name": "Pick"
													}
												},
												{
													"id": 3033,
													"name": "translateContentSizeXToHolder",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 35,
															"character": 33
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3032,
													"name": "translateContentSizeYToHolder",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 34,
															"character": 33
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3031,
													"name": "translateContentSizesToHolder",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 33,
															"character": 33
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 3042,
													"name": "wrapperProps",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/react-scrollbars-custom/dist/types/Scrollbar.d.ts",
															"line": 44,
															"character": 16
														}
													],
													"type": {
														"type": "reference",
														"name": "ElementPropsWithElementRefAndRenderer"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3044,
														3006,
														3036,
														3039,
														3037,
														3040,
														3035,
														3038,
														3027,
														3021,
														3023,
														3025,
														3020,
														3022,
														3024,
														3010,
														3008,
														3009,
														3034,
														3013,
														3011,
														3012,
														3054,
														3059,
														3063,
														3049,
														3014,
														3015,
														3016,
														3019,
														3018,
														3017,
														3007,
														3030,
														3029,
														3028,
														3026,
														3043,
														3047,
														3048,
														3041,
														3045,
														3046,
														3033,
														3032,
														3031,
														3042
													]
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3067,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 3068,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3068
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Scrollbars/index.tsx",
					"line": 54,
					"character": 23
				}
			]
		},
		{
			"id": 558,
			"name": "Select",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 559,
					"name": "Select",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 560,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 539,
										"name": "SelectProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 561,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 562,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														562
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Select/index.tsx",
					"line": 116,
					"character": 19
				}
			]
		},
		{
			"id": 3605,
			"name": "SideBar",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 3606,
					"name": "SideBar",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 3607,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 3595,
										"name": "SideBarProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3608,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 3609,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3609
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/layout/SideBar/index.tsx",
					"line": 38,
					"character": 20
				}
			]
		},
		{
			"id": 3523,
			"name": "Tab",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 3524,
					"name": "Tab",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 3525,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 3516,
										"name": "TabProps"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3526,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 3527,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3527
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Tabs/index.tsx",
					"line": 38,
					"character": 16
				}
			]
		},
		{
			"id": 1069,
			"name": "Table",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1070,
					"name": "Table",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1071,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 1065,
										"name": "Table"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "HTMLTableElement"
													}
												],
												"name": "TableHTMLAttributes"
											},
											{
												"type": "reference",
												"name": "HTMLTableElement"
											}
										],
										"name": "React.DetailedHTMLProps"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/Table/index.tsx",
					"line": 11,
					"character": 11
				}
			]
		},
		{
			"id": 1595,
			"name": "TableBody",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1596,
					"name": "TableBody",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1597,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 1335,
								"name": "TableBody"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/TableBody/index.tsx",
					"line": 10,
					"character": 15
				}
			]
		},
		{
			"id": 2397,
			"name": "TableDataCell",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 2398,
					"name": "TableDataCell",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 2399,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 2128,
								"name": "TableDataCell"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/TableDataCell/index.tsx",
					"line": 11,
					"character": 19
				}
			]
		},
		{
			"id": 1858,
			"name": "TableFoot",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1859,
					"name": "TableFoot",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1860,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 1598,
								"name": "TableFoot"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/TableFoot/index.tsx",
					"line": 10,
					"character": 15
				}
			]
		},
		{
			"id": 1332,
			"name": "TableHead",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1333,
					"name": "TableHead",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1334,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 1072,
								"name": "TableHead"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/TableHead/index.tsx",
					"line": 9,
					"character": 15
				}
			]
		},
		{
			"id": 2660,
			"name": "TableHeadCell",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 2661,
					"name": "TableHeadCell",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 2662,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 2400,
								"name": "TableHeadCell"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/TableHeadCell/index.tsx",
					"line": 11,
					"character": 19
				}
			]
		},
		{
			"id": 2125,
			"name": "TableRow",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 2126,
					"name": "TableRow",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 2127,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 1861,
								"name": "TableRow"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/TableRow/index.tsx",
					"line": 19,
					"character": 14
				}
			]
		},
		{
			"id": 3528,
			"name": "TabsContainer",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 3529,
					"name": "TabsContainer",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 3530,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3531,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3532,
											"name": "children",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 821,
													"character": 46
												}
											],
											"type": {
												"type": "reference",
												"name": "ReactNode"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3532
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/Tabs/index.tsx",
					"line": 68,
					"character": 19
				}
			]
		},
		{
			"id": 1016,
			"name": "Text",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 1017,
					"name": "Text",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 1018,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 1013,
										"name": "TextProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLElement"
											}
										],
										"name": "HTMLAttributes"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1019,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1020,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1020
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1021,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1024,
											"name": "alt",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/simple/Text/index.tsx",
													"line": 39,
													"character": 9
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "title"
										},
										{
											"id": 1023,
											"name": "aria-label",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/simple/Text/index.tsx",
													"line": 38,
													"character": 18
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "title"
										},
										{
											"id": 1022,
											"name": "className",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/components/simple/Text/index.tsx",
													"line": 37,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "`${renderTailwind(merge(initialStyles, styles ? styles : {}))} ${className ? className : ''}`"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1024,
												1023,
												1022
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"name": "HTMLElement"
							}
						],
						"name": "DetailedReactHTMLElement"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/simple/Text/index.tsx",
					"line": 16,
					"character": 10
				}
			]
		},
		{
			"id": 2820,
			"name": "TextCheckbox",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 2821,
					"name": "TextCheckbox",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 2822,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 2814,
										"name": "TextCheckboxProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLInputElement"
											}
										],
										"name": "InputHTMLAttributes"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2823,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 2824,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														2824
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/TextCheckbox/index.tsx",
					"line": 47,
					"character": 25
				}
			]
		},
		{
			"id": 2746,
			"name": "TextInput",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 2747,
					"name": "TextInput",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 2748,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 2741,
										"name": "TextInputProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLInputElement"
											}
										],
										"name": "InputHTMLAttributes"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2749,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 2750,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 821,
															"character": 46
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														2750
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/TextInput/index.tsx",
					"line": 40,
					"character": 22
				}
			]
		},
		{
			"id": 897,
			"name": "isNegative",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 898,
					"name": "isNegative",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 899,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": ""
							},
							{
								"type": "stringLiteral",
								"value": "-"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/utility/renderTailwind/index.ts",
					"line": 4,
					"character": 16
				}
			]
		},
		{
			"id": 900,
			"name": "isNegativeReversed",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 901,
					"name": "isNegativeReversed",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 902,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": ""
							},
							{
								"type": "stringLiteral",
								"value": "-"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/utility/renderTailwind/index.ts",
					"line": 8,
					"character": 24
				}
			]
		},
		{
			"id": 903,
			"name": "renderColor",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 904,
					"name": "renderColor",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 905,
							"name": "color",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 184,
								"name": "Colors"
							}
						},
						{
							"id": 906,
							"name": "variant",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"id": 185,
								"name": "ColorVariants"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "null"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/utility/renderTailwind/index.ts",
					"line": 12,
					"character": 17
				}
			]
		},
		{
			"id": 911,
			"name": "renderTailwind",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 912,
					"name": "renderTailwind",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 913,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Styles"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "src/utility/renderTailwind/index.ts",
					"line": 155,
					"character": 20
				}
			]
		},
		{
			"id": 907,
			"name": "stringIt",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 908,
					"name": "stringIt",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 909,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Styles"
							}
						},
						{
							"id": 910,
							"name": "prefix",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/utility/renderTailwind/index.ts",
					"line": 20,
					"character": 14
				}
			]
		},
		{
			"id": 914,
			"name": "useClickOutside",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 915,
					"name": "useClickOutside",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 916,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						}
					],
					"parameters": [
						{
							"id": 917,
							"name": "callback",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "EventListener"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "unknown",
								"name": "T"
							}
						],
						"name": "RefObject"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/utility/useClickOutside/index.tsx",
					"line": 3,
					"character": 21
				}
			]
		},
		{
			"id": 651,
			"name": "initialStyles",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 652,
					"name": "background",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 653,
							"name": "color",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/components/complex/DatePicker/index.tsx",
									"line": 70,
									"character": 21
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "white"
							},
							"defaultValue": "\"white\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								653
							]
						}
					],
					"sources": [
						{
							"fileName": "src/components/complex/DatePicker/index.tsx",
							"line": 70,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 2121,
					"name": "border",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2122,
							"name": "bottom",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/components/simple/TableRow/index.tsx",
									"line": 13,
									"character": 10
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "1"
							},
							"defaultValue": "\"1\""
						},
						{
							"id": 2123,
							"name": "color",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/components/simple/TableRow/index.tsx",
									"line": 14,
									"character": 9
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "gray"
							},
							"defaultValue": "\"gray\""
						},
						{
							"id": 2124,
							"name": "variant",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/components/simple/TableRow/index.tsx",
									"line": 15,
									"character": 11
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "400"
							},
							"defaultValue": "\"400\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								2122,
								2123,
								2124
							]
						}
					],
					"sources": [
						{
							"fileName": "src/components/simple/TableRow/index.tsx",
							"line": 12,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 3350,
					"name": "button",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3351,
							"name": "width",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/components/complex/Collapse/index.tsx",
									"line": 33,
									"character": 17
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "full"
							},
							"defaultValue": "\"full\""
						},
						{
							"id": 3356,
							"name": "flex",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 3357,
									"name": "justify",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/components/complex/Collapse/index.tsx",
											"line": 33,
											"character": 86
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "between"
									},
									"defaultValue": "\"between\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3357
									]
								}
							],
							"sources": [
								{
									"fileName": "src/components/complex/Collapse/index.tsx",
									"line": 33,
									"character": 75
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 3352,
							"name": "padding",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 3354,
									"name": "left",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/components/complex/Collapse/index.tsx",
											"line": 33,
											"character": 50
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "6"
									},
									"defaultValue": "\"6\""
								},
								{
									"id": 3355,
									"name": "right",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/components/complex/Collapse/index.tsx",
											"line": 33,
											"character": 62
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "2"
									},
									"defaultValue": "\"2\""
								},
								{
									"id": 3353,
									"name": "y",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/components/complex/Collapse/index.tsx",
											"line": 33,
											"character": 39
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "2"
									},
									"defaultValue": "\"2\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3354,
										3355,
										3353
									]
								}
							],
							"sources": [
								{
									"fileName": "src/components/complex/Collapse/index.tsx",
									"line": 33,
									"character": 34
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								3351
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								3356,
								3352
							]
						}
					],
					"sources": [
						{
							"fileName": "src/components/complex/Collapse/index.tsx",
							"line": 33,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						652,
						2121,
						3350
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/complex/DatePicker/index.tsx",
					"line": 69,
					"character": 19
				},
				{
					"fileName": "src/components/simple/TableRow/index.tsx",
					"line": 11,
					"character": 19
				},
				{
					"fileName": "src/components/complex/Collapse/index.tsx",
					"line": 32,
					"character": 19
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 679,
			"name": "theme",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 770,
					"name": "button",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 793,
							"name": "default",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 794,
									"name": "background",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 795,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 160,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "gray"
											},
											"defaultValue": "\"gray\""
										},
										{
											"id": 796,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 161,
													"character": 15
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "200"
											},
											"defaultValue": "\"200\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												795,
												796
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 159,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 800,
									"name": "hover",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 801,
											"name": "background",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 802,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 169,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "gray"
													},
													"defaultValue": "\"gray\""
												},
												{
													"id": 803,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 170,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "300"
													},
													"defaultValue": "\"300\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														802,
														803
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 168,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												801
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 167,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 797,
									"name": "text",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 798,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 164,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "blue"
											},
											"defaultValue": "\"blue\""
										},
										{
											"id": 799,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 165,
													"character": 15
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "900"
											},
											"defaultValue": "\"900\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												798,
												799
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 163,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										794,
										800,
										797
									]
								}
							],
							"sources": [
								{
									"fileName": "src/theme/index.tsx",
									"line": 158,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 771,
							"name": "init",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 772,
									"name": "display",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 130,
											"character": 13
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "inline-flex"
									},
									"defaultValue": "\"inline-flex\""
								},
								{
									"id": 773,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 131,
											"character": 11
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "auto"
									},
									"defaultValue": "\"auto\""
								},
								{
									"id": 785,
									"name": "border",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 787,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 148,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "transparent"
											},
											"defaultValue": "\"transparent\""
										},
										{
											"id": 786,
											"name": "width",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 147,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "1"
											},
											"defaultValue": "\"1\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												787,
												786
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 146,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 779,
									"name": "flex",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 781,
											"name": "align",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 140,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "center"
											},
											"defaultValue": "\"center\""
										},
										{
											"id": 780,
											"name": "justify",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 139,
													"character": 15
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "center"
											},
											"defaultValue": "\"center\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												781,
												780
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 138,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 788,
									"name": "hover",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 789,
											"name": "border",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 791,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 153,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "azure"
													},
													"defaultValue": "\"azure\""
												},
												{
													"id": 792,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 154,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "null"
													},
													"defaultValue": "null"
												},
												{
													"id": 790,
													"name": "width",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 152,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "1"
													},
													"defaultValue": "\"1\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														791,
														792,
														790
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 151,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												789
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 150,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 774,
									"name": "padding",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 777,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 135,
													"character": 14
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "2"
											},
											"defaultValue": "\"2\""
										},
										{
											"id": 778,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 136,
													"character": 12
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "6"
											},
											"defaultValue": "\"6\""
										},
										{
											"id": 776,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 134,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "6"
											},
											"defaultValue": "\"6\""
										},
										{
											"id": 775,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 133,
													"character": 11
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "2"
											},
											"defaultValue": "\"2\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												777,
												778,
												776,
												775
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 132,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 782,
									"name": "text",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 784,
											"name": "leading",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 144,
													"character": 15
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "normal"
											},
											"defaultValue": "\"normal\""
										},
										{
											"id": 783,
											"name": "size",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 143,
													"character": 12
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "base"
											},
											"defaultValue": "\"base\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												784,
												783
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 142,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										772,
										773
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										785,
										779,
										788,
										774,
										782
									]
								}
							],
							"sources": [
								{
									"fileName": "src/theme/index.tsx",
									"line": 129,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 804,
							"name": "primary",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 805,
									"name": "background",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 806,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 176,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "blue"
											},
											"defaultValue": "\"blue\""
										},
										{
											"id": 807,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 177,
													"character": 15
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "500"
											},
											"defaultValue": "\"500\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												806,
												807
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 175,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 811,
									"name": "hover",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 812,
											"name": "background",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 813,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 185,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "blue"
													},
													"defaultValue": "\"blue\""
												},
												{
													"id": 814,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 186,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "400"
													},
													"defaultValue": "\"400\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														813,
														814
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 184,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												812
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 183,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 808,
									"name": "text",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 809,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 180,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "white"
											},
											"defaultValue": "\"white\""
										},
										{
											"id": 810,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 181,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "null"
											},
											"defaultValue": "null"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												809,
												810
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 179,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										805,
										811,
										808
									]
								}
							],
							"sources": [
								{
									"fileName": "src/theme/index.tsx",
									"line": 174,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 815,
							"name": "secondary",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 816,
									"name": "background",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 817,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 192,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "blue"
											},
											"defaultValue": "\"blue\""
										},
										{
											"id": 818,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 193,
													"character": 15
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "900"
											},
											"defaultValue": "\"900\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												817,
												818
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 191,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 826,
									"name": "focus",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 827,
											"name": "text",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 828,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 207,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "white"
													},
													"defaultValue": "\"white\""
												},
												{
													"id": 829,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 208,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "null"
													},
													"defaultValue": "null"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														828,
														829
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 206,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												827
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 205,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 822,
									"name": "hover",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 823,
											"name": "background",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 824,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 201,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "blue"
													},
													"defaultValue": "\"blue\""
												},
												{
													"id": 825,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 202,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "800"
													},
													"defaultValue": "\"800\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														824,
														825
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 200,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												823
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 199,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 819,
									"name": "text",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 820,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 196,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "white"
											},
											"defaultValue": "\"white\""
										},
										{
											"id": 821,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 197,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "null"
											},
											"defaultValue": "null"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												820,
												821
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 195,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										816,
										826,
										822,
										819
									]
								}
							],
							"sources": [
								{
									"fileName": "src/theme/index.tsx",
									"line": 190,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								793,
								771,
								804,
								815
							]
						}
					],
					"sources": [
						{
							"fileName": "src/theme/index.tsx",
							"line": 128,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 830,
					"name": "datePicker",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 831,
							"name": "primary",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 832,
									"name": "background",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 833,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 217,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "blue"
											},
											"defaultValue": "\"blue\""
										},
										{
											"id": 834,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 218,
													"character": 15
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "500"
											},
											"defaultValue": "\"500\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												833,
												834
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 216,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 845,
									"name": "button",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 846,
											"name": "background",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 847,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 236,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "blue"
													},
													"defaultValue": "\"blue\""
												},
												{
													"id": 848,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 237,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "500"
													},
													"defaultValue": "\"500\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														847,
														848
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 235,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 849,
											"name": "border",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 850,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 240,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "blue"
													},
													"defaultValue": "\"blue\""
												},
												{
													"id": 851,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 241,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "500"
													},
													"defaultValue": "\"500\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														850,
														851
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 239,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 855,
											"name": "focus",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 856,
													"name": "background",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 857,
															"name": "color",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/theme/index.tsx",
																	"line": 249,
																	"character": 17
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "blue"
															},
															"defaultValue": "\"blue\""
														},
														{
															"id": 858,
															"name": "variant",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/theme/index.tsx",
																	"line": 250,
																	"character": 19
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "400"
															},
															"defaultValue": "\"400\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																857,
																858
															]
														}
													],
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 248,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 859,
													"name": "border",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 860,
															"name": "color",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/theme/index.tsx",
																	"line": 253,
																	"character": 17
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "transparent"
															},
															"defaultValue": "\"transparent\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																860
															]
														}
													],
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 252,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 861,
													"name": "text",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 862,
															"name": "color",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/theme/index.tsx",
																	"line": 256,
																	"character": 17
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "white"
															},
															"defaultValue": "\"white\""
														},
														{
															"id": 863,
															"name": "variant",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/theme/index.tsx",
																	"line": 257,
																	"character": 19
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "null"
															},
															"defaultValue": "null"
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																862,
																863
															]
														}
													],
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 255,
															"character": 14
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"groups": [
												{
													"title": "Object literals",
													"kind": 2097152,
													"children": [
														856,
														859,
														861
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 247,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 852,
											"name": "text",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 853,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 244,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "white"
													},
													"defaultValue": "\"white\""
												},
												{
													"id": 854,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 245,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "null"
													},
													"defaultValue": "null"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														853,
														854
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 243,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												846,
												849,
												855,
												852
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 234,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 835,
									"name": "input",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 836,
											"name": "background",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 837,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 222,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "blue"
													},
													"defaultValue": "\"blue\""
												},
												{
													"id": 838,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 223,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "500"
													},
													"defaultValue": "\"500\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														837,
														838
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 221,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 839,
											"name": "border",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 840,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 226,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "blue"
													},
													"defaultValue": "\"blue\""
												},
												{
													"id": 841,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 227,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "500"
													},
													"defaultValue": "\"500\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														840,
														841
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 225,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 842,
											"name": "text",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 843,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 230,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "white"
													},
													"defaultValue": "\"white\""
												},
												{
													"id": 844,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 231,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "null"
													},
													"defaultValue": "null"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														843,
														844
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 229,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												836,
												839,
												842
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 220,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										832,
										845,
										835
									]
								}
							],
							"sources": [
								{
									"fileName": "src/theme/index.tsx",
									"line": 215,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 864,
							"name": "secondary",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 865,
									"name": "background",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 866,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 264,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "blue"
											},
											"defaultValue": "\"blue\""
										},
										{
											"id": 867,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 265,
													"character": 15
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "900"
											},
											"defaultValue": "\"900\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												866,
												867
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 263,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 878,
									"name": "button",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 879,
											"name": "background",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 880,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 283,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "blue"
													},
													"defaultValue": "\"blue\""
												},
												{
													"id": 881,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 284,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "900"
													},
													"defaultValue": "\"900\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														880,
														881
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 282,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 882,
											"name": "border",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 883,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 287,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "blue"
													},
													"defaultValue": "\"blue\""
												},
												{
													"id": 884,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 288,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "900"
													},
													"defaultValue": "\"900\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														883,
														884
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 286,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 888,
											"name": "focus",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 889,
													"name": "background",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 890,
															"name": "color",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/theme/index.tsx",
																	"line": 296,
																	"character": 17
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "blue"
															},
															"defaultValue": "\"blue\""
														},
														{
															"id": 891,
															"name": "variant",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/theme/index.tsx",
																	"line": 297,
																	"character": 19
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "700"
															},
															"defaultValue": "\"700\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																890,
																891
															]
														}
													],
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 295,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 892,
													"name": "border",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 893,
															"name": "color",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/theme/index.tsx",
																	"line": 300,
																	"character": 17
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "transparent"
															},
															"defaultValue": "\"transparent\""
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																893
															]
														}
													],
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 299,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 894,
													"name": "text",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 895,
															"name": "color",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/theme/index.tsx",
																	"line": 303,
																	"character": 17
																}
															],
															"type": {
																"type": "stringLiteral",
																"value": "white"
															},
															"defaultValue": "\"white\""
														},
														{
															"id": 896,
															"name": "variant",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/theme/index.tsx",
																	"line": 304,
																	"character": 19
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "null"
															},
															"defaultValue": "null"
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																895,
																896
															]
														}
													],
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 302,
															"character": 14
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"groups": [
												{
													"title": "Object literals",
													"kind": 2097152,
													"children": [
														889,
														892,
														894
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 294,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 885,
											"name": "text",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 886,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 291,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "white"
													},
													"defaultValue": "\"white\""
												},
												{
													"id": 887,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 292,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "null"
													},
													"defaultValue": "null"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														886,
														887
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 290,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												879,
												882,
												888,
												885
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 281,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 868,
									"name": "input",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 869,
											"name": "background",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 870,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 269,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "blue"
													},
													"defaultValue": "\"blue\""
												},
												{
													"id": 871,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 270,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "900"
													},
													"defaultValue": "\"900\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														870,
														871
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 268,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 872,
											"name": "border",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 873,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 273,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "blue"
													},
													"defaultValue": "\"blue\""
												},
												{
													"id": 874,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 274,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "900"
													},
													"defaultValue": "\"900\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														873,
														874
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 272,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 875,
											"name": "text",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 876,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 277,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "white"
													},
													"defaultValue": "\"white\""
												},
												{
													"id": 877,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 278,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "null"
													},
													"defaultValue": "null"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														876,
														877
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 276,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												869,
												872,
												875
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 267,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										865,
										878,
										868
									]
								}
							],
							"sources": [
								{
									"fileName": "src/theme/index.tsx",
									"line": 262,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								831,
								864
							]
						}
					],
					"sources": [
						{
							"fileName": "src/theme/index.tsx",
							"line": 214,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 717,
					"name": "input",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 741,
							"name": "default",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 742,
									"name": "background",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 743,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 88,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "white"
											},
											"defaultValue": "\"white\""
										},
										{
											"id": 744,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 89,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "null"
											},
											"defaultValue": "null"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												743,
												744
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 87,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 745,
									"name": "border",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 747,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 93,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "gray"
											},
											"defaultValue": "\"gray\""
										},
										{
											"id": 748,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 94,
													"character": 15
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "500"
											},
											"defaultValue": "\"500\""
										},
										{
											"id": 746,
											"name": "width",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 92,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "1"
											},
											"defaultValue": "\"1\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												747,
												748,
												746
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 91,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										742,
										745
									]
								}
							],
							"sources": [
								{
									"fileName": "src/theme/index.tsx",
									"line": 86,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 718,
							"name": "init",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 719,
									"name": "display",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 63,
											"character": 13
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "inline-flex"
									},
									"defaultValue": "\"inline-flex\""
								},
								{
									"id": 723,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 68,
											"character": 11
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "full"
									},
									"defaultValue": "\"full\""
								},
								{
									"id": 720,
									"name": "background",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 721,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 65,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "white"
											},
											"defaultValue": "\"white\""
										},
										{
											"id": 722,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 66,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "null"
											},
											"defaultValue": "null"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												721,
												722
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 64,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 724,
									"name": "border",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 726,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 71,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "gray"
											},
											"defaultValue": "\"gray\""
										},
										{
											"id": 727,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 72,
													"character": 15
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "600"
											},
											"defaultValue": "\"600\""
										},
										{
											"id": 725,
											"name": "width",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 70,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "1"
											},
											"defaultValue": "\"1\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												726,
												727,
												725
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 69,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 728,
									"name": "font",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 729,
											"name": "family",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 75,
													"character": 14
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "sans"
											},
											"defaultValue": "\"sans\""
										},
										{
											"id": 730,
											"name": "smoothing",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 76,
													"character": 17
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "antialiased"
											},
											"defaultValue": "\"antialiased\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												729,
												730
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 74,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 736,
									"name": "padding",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 739,
											"name": "bottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 84,
													"character": 45
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "2"
											},
											"defaultValue": "\"2\""
										},
										{
											"id": 740,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 84,
													"character": 56
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "3"
											},
											"defaultValue": "\"3\""
										},
										{
											"id": 738,
											"name": "right",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 84,
													"character": 32
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "3"
											},
											"defaultValue": "\"3\""
										},
										{
											"id": 737,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 84,
													"character": 20
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "2"
											},
											"defaultValue": "\"2\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												739,
												740,
												738,
												737
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 84,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 731,
									"name": "text",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 734,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 81,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "blue"
											},
											"defaultValue": "\"blue\""
										},
										{
											"id": 733,
											"name": "leading",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 80,
													"character": 15
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "normal"
											},
											"defaultValue": "\"normal\""
										},
										{
											"id": 732,
											"name": "size",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 79,
													"character": 12
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "base"
											},
											"defaultValue": "\"base\""
										},
										{
											"id": 735,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 82,
													"character": 15
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "700"
											},
											"defaultValue": "\"700\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												734,
												733,
												732,
												735
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 78,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										719,
										723
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										720,
										724,
										728,
										736,
										731
									]
								}
							],
							"sources": [
								{
									"fileName": "src/theme/index.tsx",
									"line": 62,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 749,
							"name": "primary",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 750,
									"name": "background",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 751,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 99,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "blue"
											},
											"defaultValue": "\"blue\""
										},
										{
											"id": 752,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 100,
													"character": 15
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "500"
											},
											"defaultValue": "\"500\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												751,
												752
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 98,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 756,
									"name": "border",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 758,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 108,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "blue"
											},
											"defaultValue": "\"blue\""
										},
										{
											"id": 759,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 109,
													"character": 15
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "500"
											},
											"defaultValue": "\"500\""
										},
										{
											"id": 757,
											"name": "width",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 107,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "1"
											},
											"defaultValue": "\"1\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												758,
												759,
												757
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 106,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 753,
									"name": "text",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 754,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 103,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "white"
											},
											"defaultValue": "\"white\""
										},
										{
											"id": 755,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 104,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "null"
											},
											"defaultValue": "null"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												754,
												755
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 102,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										750,
										756,
										753
									]
								}
							],
							"sources": [
								{
									"fileName": "src/theme/index.tsx",
									"line": 97,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 760,
							"name": "secondary",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 761,
									"name": "background",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 762,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 114,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "blue"
											},
											"defaultValue": "\"blue\""
										},
										{
											"id": 763,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 115,
													"character": 15
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "900"
											},
											"defaultValue": "\"900\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												762,
												763
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 113,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 767,
									"name": "border",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 768,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 122,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "blue"
											},
											"defaultValue": "\"blue\""
										},
										{
											"id": 769,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 123,
													"character": 15
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "900"
											},
											"defaultValue": "\"900\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												768,
												769
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 121,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 764,
									"name": "text",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 765,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 118,
													"character": 13
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "white"
											},
											"defaultValue": "\"white\""
										},
										{
											"id": 766,
											"name": "variant",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 119,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "null"
											},
											"defaultValue": "null"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												765,
												766
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 117,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										761,
										767,
										764
									]
								}
							],
							"sources": [
								{
									"fileName": "src/theme/index.tsx",
									"line": 112,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								741,
								718,
								749,
								760
							]
						}
					],
					"sources": [
						{
							"fileName": "src/theme/index.tsx",
							"line": 61,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 680,
					"name": "select",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 705,
							"name": "default",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 706,
									"name": "button",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 707,
											"name": "border",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 708,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 44,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "blue"
													},
													"defaultValue": "\"blue\""
												},
												{
													"id": 709,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 45,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "900"
													},
													"defaultValue": "\"900\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														708,
														709
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 43,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												707
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 42,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 710,
									"name": "select",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 714,
											"name": "background",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 715,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 54,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "white"
													},
													"defaultValue": "\"white\""
												},
												{
													"id": 716,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 55,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "null"
													},
													"defaultValue": "null"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														715,
														716
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 53,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 711,
											"name": "text",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 712,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 50,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "blue"
													},
													"defaultValue": "\"blue\""
												},
												{
													"id": 713,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 51,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "700"
													},
													"defaultValue": "\"700\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														712,
														713
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 49,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												714,
												711
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 48,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										706,
										710
									]
								}
							],
							"sources": [
								{
									"fileName": "src/theme/index.tsx",
									"line": 41,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 681,
							"name": "primary",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 682,
									"name": "button",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 683,
											"name": "border",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 684,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 8,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "blue"
													},
													"defaultValue": "\"blue\""
												},
												{
													"id": 685,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 9,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "500"
													},
													"defaultValue": "\"500\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														684,
														685
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 7,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												683
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 6,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 686,
									"name": "select",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 690,
											"name": "background",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 691,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 18,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "blue"
													},
													"defaultValue": "\"blue\""
												},
												{
													"id": 692,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 19,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "500"
													},
													"defaultValue": "\"500\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														691,
														692
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 17,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 687,
											"name": "text",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 688,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 14,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "white"
													},
													"defaultValue": "\"white\""
												},
												{
													"id": 689,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 15,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "null"
													},
													"defaultValue": "null"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														688,
														689
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 13,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												690,
												687
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 12,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										682,
										686
									]
								}
							],
							"sources": [
								{
									"fileName": "src/theme/index.tsx",
									"line": 5,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 693,
							"name": "secondary",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 694,
									"name": "button",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 695,
											"name": "border",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 696,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 26,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "blue"
													},
													"defaultValue": "\"blue\""
												},
												{
													"id": 697,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 27,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "900"
													},
													"defaultValue": "\"900\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														696,
														697
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 25,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												695
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 24,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 698,
									"name": "select",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 702,
											"name": "background",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 703,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 36,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "blue"
													},
													"defaultValue": "\"blue\""
												},
												{
													"id": 704,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 37,
															"character": 17
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "900"
													},
													"defaultValue": "\"900\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														703,
														704
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 35,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 699,
											"name": "text",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 700,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 32,
															"character": 15
														}
													],
													"type": {
														"type": "stringLiteral",
														"value": "white"
													},
													"defaultValue": "\"white\""
												},
												{
													"id": 701,
													"name": "variant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/theme/index.tsx",
															"line": 33,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "null"
													},
													"defaultValue": "null"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														700,
														701
													]
												}
											],
											"sources": [
												{
													"fileName": "src/theme/index.tsx",
													"line": 31,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												702,
												699
											]
										}
									],
									"sources": [
										{
											"fileName": "src/theme/index.tsx",
											"line": 30,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										694,
										698
									]
								}
							],
							"sources": [
								{
									"fileName": "src/theme/index.tsx",
									"line": 23,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								705,
								681,
								693
							]
						}
					],
					"sources": [
						{
							"fileName": "src/theme/index.tsx",
							"line": 4,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						770,
						830,
						717,
						680
					]
				}
			],
			"sources": [
				{
					"fileName": "src/theme/index.tsx",
					"line": 3,
					"character": 11
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				61,
				918,
				67,
				922,
				3629,
				3626,
				3610,
				935,
				939,
				3284,
				3289,
				3424,
				3427,
				640,
				627,
				647,
				563,
				175,
				97,
				92,
				103,
				3266,
				1033,
				1025,
				205,
				3157,
				3163,
				179,
				3069,
				3086,
				468,
				3233,
				3261,
				3511,
				2663,
				2889,
				2893,
				2825,
				1005,
				3432,
				3363,
				2982,
				2914,
				539,
				552,
				472,
				3595,
				3533,
				674,
				77,
				1,
				3516,
				3513,
				1065,
				1335,
				2128,
				1598,
				1072,
				2400,
				1861,
				80,
				2814,
				2751,
				2741,
				2678,
				1013,
				659,
				122
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				190,
				189,
				193,
				186,
				198,
				185,
				184,
				194,
				195,
				197,
				191,
				188,
				204,
				192,
				196,
				187
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				921
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				925,
				3640,
				3643,
				1000,
				3358,
				654,
				1028,
				1060,
				463,
				3225,
				3152,
				3279,
				3518,
				2673,
				1008,
				2909,
				3506,
				2999,
				558,
				3605,
				3523,
				1069,
				1595,
				2397,
				1858,
				1332,
				2660,
				2125,
				3528,
				1016,
				2820,
				2746,
				897,
				900,
				903,
				911,
				907,
				914
			]
		},
		{
			"title": "Object literals",
			"kind": 2097152,
			"children": [
				651,
				679
			]
		}
	]
}